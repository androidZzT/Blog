{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[{"_id":"themes/pure/source/favicon.png","path":"favicon.png","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.css","path":"css/style.css","modified":0,"renderable":1},{"_id":"themes/pure/source/css/style.min.css","path":"css/style.min.css","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/README.md","path":"fonts/README.md","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.eot","path":"fonts/iconfont.eot","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.svg","path":"fonts/iconfont.svg","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.ttf","path":"fonts/iconfont.ttf","modified":0,"renderable":1},{"_id":"themes/pure/source/fonts/iconfont.woff","path":"fonts/iconfont.woff","modified":0,"renderable":1},{"_id":"themes/pure/source/images/avatar.jpeg","path":"images/avatar.jpeg","modified":0,"renderable":1},{"_id":"themes/pure/source/images/thumb-default.png","path":"images/thumb-default.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","path":"images/xingqiu-qrcode.jpg","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.js","path":"js/application.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/application.min.js","path":"js/application.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/insight.js","path":"js/insight.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/jquery.min.js","path":"js/jquery.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js","path":"js/plugin.js","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.js.map","path":"js/plugin.js.map","modified":0,"renderable":1},{"_id":"themes/pure/source/js/plugin.min.js","path":"js/plugin.min.js","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipay.JPG","path":"images/donate/alipay.JPG","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/alipayimg.png","path":"images/donate/alipayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpay.JPG","path":"images/donate/wechatpay.JPG","modified":0,"renderable":1},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","path":"images/donate/wechatpayimg.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","path":"images/favatar/SzsFox-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","path":"images/favatar/chuangzaoshi-logo.png","modified":0,"renderable":1},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","path":"images/favatar/idesign-logo.png","modified":0,"renderable":1}],"Cache":[{"_id":"source/.DS_Store","hash":"27aa8fc6a4fd4146edd797dfcbb167a00bbf8664","modified":1650681043272},{"_id":"source/_posts/.DS_Store","hash":"699f0834f74898a6f816d7928e6c0f0e32e7dc41","modified":1643209451005},{"_id":"source/_posts/audio-basic.md","hash":"6ea4a36f5d2fdda3a46c333887734b92dbd572cf","modified":1642874275184},{"_id":"source/_posts/basic-integral.md","hash":"babacacb79d397b5c14419aea67553bf04511544","modified":1651564466673},{"_id":"source/_posts/tree-bitree.md","hash":"60d0c6cf324f9b23f1b6ab16e93ac73beb97293d","modified":1651563012675},{"_id":"source/_posts/kt-coroutine-create.md","hash":"d108190cd5c59d098cd6e8732ebc3b42b518c97c","modified":1642871532542},{"_id":"source/_posts/bc-bitcoin-concept.md","hash":"ab2fdabb518af7aff28aef206be26df9f88f42fd","modified":1642871172356},{"_id":"source/_posts/linear-list.md","hash":"94ab8cfa75e4f4da2eda1248f3230c9e7636bfc2","modified":1651564684867},{"_id":"source/_posts/kt-receiver.md","hash":"5200fcb8fc3f0d2ce9fd4f6567f1ef4baa86c377","modified":1642870030945},{"_id":"source/_posts/kt-sequence.md","hash":"a1c70245c6250d92697c4fed65e2477236596e4e","modified":1642870025055},{"_id":"source/_posts/bc-bitcoin-concept/6_confirms.png","hash":"6b4a3d8349c848a7c6058587bf3001c4453c69d2","modified":1642871030050},{"_id":"source/_posts/bc-bitcoin-concept/51%_attack.png","hash":"4f1a6999c693d71d94a1cd651833da8d04fcea6a","modified":1642871030066},{"_id":"source/_posts/bc-bitcoin-concept/asymmetric_encryption.png","hash":"aa0726adcffa9be5b9ebb4d59f515845d24eb385","modified":1642871030095},{"_id":"source/_posts/bc-bitcoin-concept/anti_tamper.png","hash":"b772cca9c96f195052ea260d8b93834825ab67f3","modified":1642871030086},{"_id":"source/_posts/bc-bitcoin-concept/anti_double_spending_in_centralize.png","hash":"84566d3f1aa30339e9ffe6277f0b5c1baab832e3","modified":1642871030078},{"_id":"source/_posts/bc-bitcoin-concept/digital_signature.drawio","hash":"f8bcea820e09a7891bc43c812172039fca3e292e","modified":1642871030150},{"_id":"source/_posts/bc-bitcoin-concept/btc_structure.drawio","hash":"346a6f352629ccc577c3b731f02c1b2e247caaf4","modified":1642871030116},{"_id":"source/_posts/bc-bitcoin-concept/btc_transaction.png","hash":"6421594dfdde0879a9c64a0355784def1d1feaa8","modified":1642871030129},{"_id":"source/_posts/bc-bitcoin-concept/decentralized.png","hash":"a7ac93f30ebe9042a809d4cfa2a4b95284331d74","modified":1642871030138},{"_id":"source/_posts/bc-bitcoin-concept/double_spending.drawio","hash":"236f2070eb52f2ab3a453c276e6591b84fc5f000","modified":1642871030179},{"_id":"source/_posts/bc-bitcoin-concept/digital_signature.png","hash":"06ef857549b6f8a3dd35411ca0fcb5e0158cf0fe","modified":1642871030170},{"_id":"source/_posts/bc-bitcoin-concept/double_spending.png","hash":"0c53fe43db53611c3204cd78429feae21a4f4b1c","modified":1642871030185},{"_id":"source/_posts/bc-bitcoin-concept/hash.drawio","hash":"7dc4e15b9a99f4d9feb159a86b57e87406c9f2ef","modified":1642871030214},{"_id":"source/_posts/bc-bitcoin-concept/hash_collision.drawio","hash":"a12e04b60e7296e218f9034a1bdebe7f1c981362","modified":1642871030194},{"_id":"source/_posts/bc-bitcoin-concept/merkle_proof.png","hash":"140e8aab9049705927ad83d084aca7dbb6a58b1d","modified":1642871030219},{"_id":"source/_posts/bc-bitcoin-concept/hash_collision.png","hash":"ba4304d9e30a30d22c1d19c09450c75e8496d04a","modified":1642871030199},{"_id":"source/_posts/bc-bitcoin-concept/hash_pointer_block.png","hash":"388fd448a7b1808fee1dc19eaf036d6c8a3440e2","modified":1642871030204},{"_id":"source/_posts/bc-bitcoin-concept/merkle_tree.png","hash":"9ea72dc03bbf9dcde5909688551c912a5044d035","modified":1642871030231},{"_id":"source/_posts/bc-bitcoin-concept/mining_healthy.png","hash":"265b7b982bc78ab4b53967c6eb8273d2beb211a1","modified":1642871030238},{"_id":"source/_posts/bc-bitcoin-concept/mining.drawio","hash":"f346f5b9f13c8578a467dac1fc20e4a193803c9b","modified":1642871030254},{"_id":"source/_posts/bc-bitcoin-concept/mining_verify.png","hash":"df267879156e762f5135d2981c39ba497163544b","modified":1642871030248},{"_id":"source/_posts/bc-bitcoin-concept/mining.png","hash":"a649f333d9dd526559cb2c19cb9ead56441978e8","modified":1642871030264},{"_id":"source/_posts/bc-bitcoin-concept/tamper.png","hash":"eda6f80c0f5cb3319b3fbadf389600c8abeb9735","modified":1642871030280},{"_id":"source/_posts/bc-bitcoin-concept/predict.png","hash":"a01966ed9ba0ad43a47b0324050e3be8beb23294","modified":1642871030268},{"_id":"source/_posts/bc-bitcoin-concept/what_is_block_chain.png","hash":"0fe49579b2f27982f9ddeaded364d9d8353789cf","modified":1642871030286},{"_id":"source/_posts/kt-coroutine-create/uml.png","hash":"ce576e079854eb404a01ff232698de1bc9603789","modified":1642870673780},{"_id":"source/_posts/kt-coroutine-create/call_process.png","hash":"1c69b16a19f9036cf7f764def7ae6a4233fdfd13","modified":1642870673763},{"_id":"source/_posts/kt-coroutine-create/call_stack.png","hash":"35143a71684c527955903ccfbe61936a930ecb92","modified":1642870673775},{"_id":"source/_posts/kt-receiver/.DS_Store","hash":"4dbf0e1375a1af31e1ad2f14914aaa29cb6f2624","modified":1642860184083},{"_id":"source/_posts/kt-receiver/call_receiver.png","hash":"cbf39d9d9dc37ce29f848b162772317dd975834b","modified":1636783472120},{"_id":"source/_posts/kt-sequence/.DS_Store","hash":"66ae1ee8d5308d93c94dcf8ea1c29688c67aebff","modified":1642860213665},{"_id":"source/_posts/kt-sequence/list_words.png","hash":"2cf01eaab29bac775dfdeb1b60ceda31bfb864e0","modified":1642859996645},{"_id":"source/_posts/linear-list/linear-list.drawio","hash":"0815dc4b146af467cab35f6f0d25f843ce8ae8c2","modified":1643209446830},{"_id":"source/_posts/linear-list/linear-list_def.png","hash":"75e71701693aeb5e22655078813e817aecdd1000","modified":1643209460867},{"_id":"source/_posts/kt-sequence/sequence.png","hash":"1da3602a7c35a690efabbf19ada3a2dfe5a1cf3b","modified":1642859996645},{"_id":"source/_posts/kt-sequence/sequence_words.png","hash":"22d75f6baa72a667072e7339775f07bff13b7846","modified":1642859996645},{"_id":"source/_posts/kt-coroutine-create/break_point.png","hash":"110863f2074e34d3c47bfc4138dbf4c488214278","modified":1642870673758},{"_id":"source/_posts/kt-receiver/jadx_2.png","hash":"ca83961c5e55c43f56ec1d300e7fa94a9ca6ad71","modified":1636785924341},{"_id":"source/_posts/kt-receiver/jadx_4.png","hash":"d136382af5dd703c1ac1af7649542946dc81d17b","modified":1636877201189},{"_id":"source/_posts/kt-receiver/jadx_5.png","hash":"b96970f1621ed17d57d3244b2308d8d3d22d106f","modified":1636877299273},{"_id":"themes/pure/.gitignore","hash":"dbb41a2f30c98cb9de173d82736c46266c901cda","modified":1642867546539},{"_id":"themes/pure/_config.yml","hash":"5967555038d29b60f69a76444ac1e90fd8fc8ab2","modified":1642908950768},{"_id":"themes/pure/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1642867546540},{"_id":"themes/pure/README.md","hash":"5861cec81712af9197a210fd5212d007aad8b0de","modified":1642867546540},{"_id":"themes/pure/README.cn.md","hash":"a634af4addbb57088935e060e8ec6035ea7bab76","modified":1642867546540},{"_id":"themes/pure/languages/en.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1642867546542},{"_id":"themes/pure/languages/zh-TW.yml","hash":"6d27c3114be539b8783ffce944f68b2e26a8c3b9","modified":1642867546542},{"_id":"themes/pure/languages/default.yml","hash":"167ea0db98f4db156ea68c4644f64c0287ae2b6f","modified":1642867546541},{"_id":"themes/pure/languages/zh-CN.yml","hash":"057ebc043f09449af9768791c89c86dfc2938365","modified":1642867546542},{"_id":"themes/pure/_config.yml.example","hash":"4714f87fdb6d4a6ea5ece84f4fe37f922337f14d","modified":1642867546540},{"_id":"themes/pure/layout/books.ejs","hash":"6c64719cd7071b5319b01339aa524fdaab391385","modified":1642867546549},{"_id":"themes/pure/layout/about.ejs","hash":"4f5c769e183249b12eb9d3141432bc0039519730","modified":1642867546549},{"_id":"themes/pure/layout/category.ejs","hash":"3ca5651bbce7b0c280c906468f2eb18c2e55ebcb","modified":1642867546550},{"_id":"themes/pure/package.json","hash":"d883a7847a8e2f5099ecbd9e55607223ce5cbbb5","modified":1642867672166},{"_id":"themes/pure/layout/archive.ejs","hash":"0e9e67a82202ca3971be59579744d43ec6696bbf","modified":1642867546549},{"_id":"themes/pure/layout/index.ejs","hash":"07825d8d8b21eb7b694f5585567b9df5c5a91a60","modified":1642867546550},{"_id":"themes/pure/layout/categories.ejs","hash":"22a2bc1712dd9ba1a3027e875d636132d334fb00","modified":1642867546549},{"_id":"themes/pure/layout/layout.ejs","hash":"a29ab2e881954a252bfc0dc1a7eb5aa52768dd2a","modified":1642867546550},{"_id":"themes/pure/layout/links.ejs","hash":"77c5d1561e2c606c5b3bb39610133d84324074df","modified":1642867546550},{"_id":"themes/pure/layout/page.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1642867546550},{"_id":"themes/pure/layout/post.ejs","hash":"5c27475c176627e6e2e6a16172eb6980e56bcaff","modified":1642867546550},{"_id":"themes/pure/layout/repository.ejs","hash":"fe4b3e051a8b0debe9ee22c2cc2cc935d92ee23f","modified":1642867546550},{"_id":"themes/pure/layout/tag.ejs","hash":"df60564c162f7ad3422f8959dfea19351857a7cd","modified":1642867546550},{"_id":"themes/pure/scripts/thumbnail.js","hash":"e667a611f9baac270281b765832020d50bf8fb7f","modified":1642867546560},{"_id":"themes/pure/layout/tags.ejs","hash":"29f19a6ed10f8b1f069259a7aeaaacddcfaa2ed4","modified":1642867546550},{"_id":"themes/pure/source/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1642867546562},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/bug_report.md","hash":"83d211c67c12e8c1f6e9f796cfd0cecbf5160e15","modified":1642867546539},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/custom.md","hash":"84208538d48505ee8e49812cb336eb9882e08dc7","modified":1642867546539},{"_id":"themes/pure/_source/404/index.md","hash":"8d493f624fdd29c8d0266767e56f343d549e16d8","modified":1642867546540},{"_id":"themes/pure/.github/ISSUE_TEMPLATE/feature_request.md","hash":"f6867a2f0417fe89a0f2008730ee19dd38422021","modified":1642867546539},{"_id":"themes/pure/_source/_data/gallery.yml","hash":"e2b3fad87be3d1cfde1effa655d39678ee90907e","modified":1642867546540},{"_id":"themes/pure/_source/_data/links.yml","hash":"aa443a4508550820c77c2a4f6abff1d38ad85054","modified":1642867546541},{"_id":"themes/pure/_source/categories/index.md","hash":"5d2a4f103d27bebbe3eef1604649d0f5c6d86ac6","modified":1642867546541},{"_id":"themes/pure/_source/books/index.md","hash":"cf4163959c23244059cbbbc1c0fe379cc3b2cb73","modified":1642867546541},{"_id":"themes/pure/layout/_common/head.ejs","hash":"a48ef0fa22712b29ec044b9e5134461f3a21c10d","modified":1642867546542},{"_id":"themes/pure/_source/about/index.md","hash":"9c95cabb533409d06daefc4295021ad199761efc","modified":1642867546541},{"_id":"themes/pure/layout/_common/footer.ejs","hash":"cdc48ec70d9202b947f2a9334234d038d7014a7d","modified":1642867546542},{"_id":"themes/pure/layout/_common/header.ejs","hash":"3d739d1e2b2991927c08ec222db123830a44a519","modified":1642867546542},{"_id":"themes/pure/layout/_common/script.ejs","hash":"0031114d2a58f8601c2869f78ceedc75a10be90d","modified":1642867546542},{"_id":"themes/pure/layout/_partial/archive-book.ejs","hash":"977f97f3636947006ad738e502858c46d4cd5ec7","modified":1642867546543},{"_id":"themes/pure/layout/_common/social.ejs","hash":"a35a2610e9da762df96587b76b51470507a88cad","modified":1642867546542},{"_id":"themes/pure/layout/_partial/archive-category.ejs","hash":"9c364fd6b5172890784141802f5f466241d233fd","modified":1642867546543},{"_id":"themes/pure/layout/_partial/archive-list.ejs","hash":"1081974f182e8e1ce452d701b8f6575b6dc45b0c","modified":1642867546543},{"_id":"themes/pure/layout/_partial/archive-post.ejs","hash":"13039fec017332029122ef99901755fcecbfc8ea","modified":1642867546543},{"_id":"themes/pure/_source/links/index.md","hash":"febcf87eb0ab3c5080578275d25f3970bba39625","modified":1642867546541},{"_id":"themes/pure/layout/_partial/archive-tag.ejs","hash":"5de90244c3cedad531cccc03c40e5f9a3aef3c61","modified":1642867546543},{"_id":"themes/pure/layout/_partial/archive-repository.ejs","hash":"e39dc762d9fe238cede462532e40eaa3d8651122","modified":1642867546543},{"_id":"themes/pure/layout/_partial/archive.ejs","hash":"4d6793f50d41fbd47dc50aa36b24d496006bba6c","modified":1642867546543},{"_id":"themes/pure/layout/_partial/archive-link.ejs","hash":"fe4d9bf526d8176683cea89b8561ced571374db0","modified":1642867546543},{"_id":"themes/pure/layout/_partial/article.ejs","hash":"0f9b71de0087d1f777d92c5a0f3873971aec5a5b","modified":1642867546544},{"_id":"themes/pure/_source/repository/index.md","hash":"ed0e082c30f233dd5c140d188f1e4bce44bdbf79","modified":1642867546541},{"_id":"themes/pure/layout/_partial/article-about.ejs","hash":"7b80319daeb63401d1745b81cd9a6d1d21a4fb60","modified":1642867546543},{"_id":"themes/pure/_source/tags/index.md","hash":"42e9c904ea63b0a7dd4033e2e8f153225bc5cda5","modified":1642867546541},{"_id":"themes/pure/layout/_partial/item-post.ejs","hash":"2f3790257d6ad07fdad2043b27950842c9011daa","modified":1642867546544},{"_id":"themes/pure/layout/_partial/sidebar-about.ejs","hash":"46da1ee327b8af107335146bd8fc131eee6c9c4f","modified":1642867546545},{"_id":"themes/pure/layout/_partial/sidebar.ejs","hash":"2aa8a9f90838e7c105e75e6d3d03cbf860bb1239","modified":1642867546545},{"_id":"themes/pure/layout/_partial/sidebar-toc.ejs","hash":"fa9e2041c4a6e03f566545db1385c5ae1a80f879","modified":1642867546545},{"_id":"themes/pure/layout/_script/analytics.ejs","hash":"e756a81f8c20a187fb863b9689f2f1fa15e2f4e1","modified":1642867546547},{"_id":"themes/pure/layout/_partial/pagination.ejs","hash":"c792537723b59f437967262c9575a20fac02e911","modified":1642867546544},{"_id":"themes/pure/layout/_script/douban.ejs","hash":"ee21c4e7ccac26ff2ab6d1d178447fd11fea4d7e","modified":1642867546547},{"_id":"themes/pure/layout/_script/comment.ejs","hash":"6f951510bab9dc15474b6664e0329defccf29a30","modified":1642867546547},{"_id":"themes/pure/layout/_script/fancybox.ejs","hash":"8f1be01e70a15b2c31ae57d8c6bce54622ebf8a7","modified":1642867546547},{"_id":"themes/pure/layout/_script/mathjax.ejs","hash":"f618393ab971b2faa80d541f2e6a553d9ace9816","modified":1642867546547},{"_id":"themes/pure/layout/_script/repository.ejs","hash":"14f2e7d4c1055ff6a5f5867dc0e9a9f6f4c28fe1","modified":1642867546548},{"_id":"themes/pure/layout/_script/pv.ejs","hash":"fb9b5f16029f2ccef4b83cf4facfdcdd748b65b4","modified":1642867546547},{"_id":"themes/pure/layout/_script/search.ejs","hash":"7be33dc260ce788aa1a2cd3bd0386d95057533cb","modified":1642867546548},{"_id":"themes/pure/layout/_search/baidu.ejs","hash":"67aab280a3ea34429f086cc5c3de7de17727c567","modified":1642867546548},{"_id":"themes/pure/layout/_search/index-mobile.ejs","hash":"c726e234c0166da69fdfbd3dd613a5eaf4c80258","modified":1642867546548},{"_id":"themes/pure/layout/_search/index.ejs","hash":"f8d5a9c3f777250f5fb6512bba585307f784d5cd","modified":1642867546548},{"_id":"themes/pure/layout/_search/insight.ejs","hash":"4af3e92ef98bedba9680d45699cb04dde4640536","modified":1642867546548},{"_id":"themes/pure/layout/_search/swiftype.ejs","hash":"4baeca36e410181300ae7d47ba1fb4755bcfcff0","modified":1642867546548},{"_id":"themes/pure/layout/_widget/archive.ejs","hash":"af8ad7f62877764b75d5272d9d899fd6c8e3845c","modified":1642867546549},{"_id":"themes/pure/layout/_widget/board.ejs","hash":"acd27451be52703e670ce0b313f2da6fa24071e4","modified":1642867546549},{"_id":"themes/pure/layout/_widget/recent_posts.ejs","hash":"8942d60311797a591ba2d157c5cdd23e85ceb694","modified":1642867546549},{"_id":"themes/pure/layout/_widget/category.ejs","hash":"331b7642a0f58b9088b937436ab39076a4c5dd7e","modified":1642867546549},{"_id":"themes/pure/layout/_widget/tag.ejs","hash":"487628925da5fcac91463cdad3d9e55d071bd5ed","modified":1642867546549},{"_id":"themes/pure/layout/_widget/tagcloud.ejs","hash":"3291108e5411c48b2c5b3e17adace6ffa90d1c29","modified":1642867546549},{"_id":"themes/pure/source/fonts/README.md","hash":"c5772b99ad81291fb137b330813f866bdceea0a3","modified":1642867546562},{"_id":"themes/pure/source/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1642867546562},{"_id":"themes/pure/source/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1642867546564},{"_id":"themes/pure/source/images/avatar.jpeg","hash":"97358a400133992896a7398ad7400c226f9acee3","modified":1642868064574},{"_id":"themes/pure/source/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1642867546566},{"_id":"themes/pure/source/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1642867546564},{"_id":"themes/pure/source/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1642867546566},{"_id":"themes/pure/source/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1642867546566},{"_id":"themes/pure/source/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1642867546565},{"_id":"themes/pure/source/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1642867546565},{"_id":"themes/pure/layout/_partial/post/category.ejs","hash":"fcee6b4aef8b6c4627831ff8dbb2d73478511426","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/copyright.ejs","hash":"0a99c99992fb1e97bf5a57e05179f5680d69dcc8","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/comment.ejs","hash":"3c0da69fcea6ccfd97b82d50e740107a88eec5c4","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/date.ejs","hash":"7d4979652998abf92a64bfae8157b70d6e514057","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/donate.ejs","hash":"a251dc34d660601a2e8b7d98b3bfe2b9023dbbce","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/nav.ejs","hash":"fcbe3695ae9b164a4a2d27a66a6827dcf3ee76f1","modified":1642867546544},{"_id":"themes/pure/layout/_partial/post/pv.ejs","hash":"ec3ccf322432afc2761f860c5a3000ac34d46e4c","modified":1642867546545},{"_id":"themes/pure/layout/_partial/post/tag.ejs","hash":"39f53ead07f75c181a7ba93e586dd1b8171620f1","modified":1642867546545},{"_id":"themes/pure/layout/_partial/post/thumbnail.ejs","hash":"080d5c5f3e95accf51893a7092695fe32d34a087","modified":1642867546545},{"_id":"themes/pure/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1642867546545},{"_id":"themes/pure/layout/_partial/post/wordcount.ejs","hash":"bd06c4c8449ed96aabf655fe1ae3be1f0707b81e","modified":1642867546545},{"_id":"themes/pure/layout/_script/_analytics/baidu-analytics.ejs","hash":"f314be7860c1d5930f1600d010e3120ba5c85325","modified":1642867546546},{"_id":"themes/pure/layout/_script/_analytics/google-analytics.ejs","hash":"54f1dc9375cbdb65464e0ac1b58847aa5e8bc6a5","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/gitalk.ejs","hash":"de4c43d3056825c14283fe426b8cc677dea59617","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/disqus.ejs","hash":"a051e3eddc75586e69131c29ab8c89d69626e0fd","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/gitment.ejs","hash":"a64852076483395738a398deb4c10bdb0f3b7b71","modified":1642867546546},{"_id":"themes/pure/layout/_script/_analytics/tencent-analytics.ejs","hash":"77defb41a1613a758ff5a6a5128c6107fc584190","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/livere.ejs","hash":"5ab997d5ee4475d2f89f882fab4a52648dbe0e30","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/valine.ejs","hash":"acf81f9a59dc45f197d723f70484de5fcd166577","modified":1642867546546},{"_id":"themes/pure/layout/_script/_comment/youyan.ejs","hash":"095649a173573d03b5845c2e331ec7be976b152a","modified":1642867546546},{"_id":"themes/pure/layout/_script/_search/baidu.ejs","hash":"9b60ffa2e2725a993e9cecfb81ddedd9b9361011","modified":1642867546546},{"_id":"themes/pure/layout/_script/_search/insight.ejs","hash":"3543c11d060feaf9381b5d87564b01ffef0e0a59","modified":1642867546547},{"_id":"themes/pure/source/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1642867546564},{"_id":"themes/pure/source/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1642867546565},{"_id":"themes/pure/source/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1642867546565},{"_id":"themes/pure/source/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1642867546564},{"_id":"themes/pure/source/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1642867546565},{"_id":"source/_posts/kt-receiver/jadx_1.png","hash":"ab1a1621242568499241ff6653c1c8b4353738c1","modified":1636784874721},{"_id":"source/_posts/kt-receiver/jadx_3.png","hash":"5391982ba2083b25c8ecaa867d9d475b8f5c4f63","modified":1636877123918},{"_id":"themes/pure/screenshot/pure-theme-black.png","hash":"10b40f398af7eb7e8ba2bf2f2a959d8779fc1fe1","modified":1642867546551},{"_id":"themes/pure/screenshot/pure-theme-blue.png","hash":"6146890a68d5ea9d343c48d50151ddd5a2a1872c","modified":1642867546552},{"_id":"themes/pure/screenshot/pure-theme-green.png","hash":"12ec0c6033cb2762839fdf75434bbb4fbf946022","modified":1642867546552},{"_id":"themes/pure/screenshot/pure.png","hash":"8f4cfd8d7edfa4fbffdf375291302d9807f5cc1c","modified":1642867546554},{"_id":"themes/pure/screenshot/pure-theme-purple.png","hash":"9855d2eb0acd23370209354f232471df8f4f72e2","modified":1642867546553},{"_id":"themes/pure/source/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1642867546569},{"_id":"themes/pure/source/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1642867546567},{"_id":"themes/pure/source/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1642867546567},{"_id":"themes/pure/source/images/donate/alipay.JPG","hash":"ea3b30419182bd1fbc8c15e02d75dc194b478ef0","modified":1642868074058},{"_id":"themes/pure/source/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1642867546561},{"_id":"themes/pure/source/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1642867546562},{"_id":"themes/pure/source/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1642867546563},{"_id":"themes/pure/source/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1642867546569},{"_id":"themes/pure/source/images/donate/wechatpay.JPG","hash":"877b333659f7266c775657f0801bb814458b4efc","modified":1642868080112},{"_id":"source/_posts/kt-receiver/define_receiver.png","hash":"c7cfaaf76d59139c9d315e289a6eb9bf7a811a68","modified":1636783105262},{"_id":"themes/pure/package-lock.json","hash":"e4bad16b21f4c1c5af8d1f230dc132dd89fd32ef","modified":1642867672166},{"_id":"themes/pure/screenshot/pure.psd","hash":"a31cea40b45bdc31f051fca2f1e2f4ecbaee1a94","modified":1642867546560},{"_id":"source/_posts/bc-bitcoin-concept/btc_cover.png","hash":"c5f0e0a815f220e77558f20fcdfdf6a49969243e","modified":1642871030106},{"_id":"public/atom.xml","hash":"c57c7b51666ed213f2a1d2ba18346841e1b31714","modified":1651565086659},{"_id":"public/content.json","hash":"f24a7ef92c2be3b575e2a24e7c4788c5d9c0c78e","modified":1651565086659},{"_id":"public/archives/index.html","hash":"587e4c63f86b14a8a3bc26d4781738b48371d317","modified":1651565086659},{"_id":"public/archives/2022/index.html","hash":"be7bbbc924a7dda91a65df5c82f6c20c733a99e0","modified":1651565086659},{"_id":"public/archives/2022/01/index.html","hash":"c9cb4d1c764b7af302b05b41ad430113a4bfbb43","modified":1651565086659},{"_id":"public/archives/2022/05/index.html","hash":"e68592ff8c76fbad8910592241069f8bc3c3dca2","modified":1651565086659},{"_id":"public/categories/Video/index.html","hash":"13d0da15a95358c13a1a7e1dd035e8a650293e06","modified":1651565086659},{"_id":"public/categories/考研/index.html","hash":"455289b03cf88679c5dd9c8e07631b9ec4b4b357","modified":1651565086659},{"_id":"public/categories/BlockChain/index.html","hash":"5adc4336d11b662c36fa93896f537771d94cd133","modified":1651565086659},{"_id":"public/categories/Kotlin/index.html","hash":"9e86b8049246dfd5299e8996799b01543e8f179e","modified":1651565086659},{"_id":"public/tags/高数/index.html","hash":"647976703100700246dd4dbd31027e4ead15ff06","modified":1651565086659},{"_id":"public/tags/Kotlin协程/index.html","hash":"1ab444bc74a7e1bf02deacc0442f840f5b8a083d","modified":1651565086659},{"_id":"public/tags/Kotlin基础/index.html","hash":"eb0deadc300c458d59b23ebefa189dae872a627e","modified":1651565086659},{"_id":"public/tags/数据结构/index.html","hash":"55ef6fdc971dffbfe12a95bf438f2199cc52183e","modified":1651565086659},{"_id":"public/2022/05/03/basic-integral/index.html","hash":"a73467ddf0a9d55d98177891da91dc115ab14481","modified":1651565086659},{"_id":"public/2022/01/29/tree-bitree/index.html","hash":"dbdfeca4b4ae78c25f9512fa08af11a1b3d67148","modified":1651564941705},{"_id":"public/2022/01/26/linear-list/index.html","hash":"93160a0d720d0e135be2baa6d09279258f36ec0e","modified":1651565086659},{"_id":"public/2022/01/23/audio-basic/index.html","hash":"b23941358986f295e3d52f5f334561268ad3c9ad","modified":1651565086659},{"_id":"public/2022/01/23/bc-bitcoin-concept/index.html","hash":"af647ebadb81d00d19084afa5e23ffeddb41c404","modified":1651565086659},{"_id":"public/2022/01/23/kt-coroutine-create/index.html","hash":"c15f390af2588f84409e1ccbbb34c42004584401","modified":1651565086659},{"_id":"public/2022/01/22/kt-sequence/index.html","hash":"6c310a4a3f7d321447f8575754781d8834ccab0e","modified":1651565086659},{"_id":"public/2022/01/22/kt-receiver/index.html","hash":"2e3f8b673dd08bc7ad15e334e5497dcd2ee0ba4e","modified":1651565086659},{"_id":"public/index.html","hash":"44809369a23871684ceb7fd42fd66e242ed6c41e","modified":1651565086659},{"_id":"public/favicon.png","hash":"89875d3b018552e396fc5f0bd8ff5d9f5d4a5d71","modified":1651563745319},{"_id":"public/fonts/iconfont.woff","hash":"78d29194287b8885d25212048c4f787705212a6e","modified":1651563745319},{"_id":"public/fonts/iconfont.ttf","hash":"9b8837f9f79cf6ab794736301d0665345183a20c","modified":1651563745319},{"_id":"public/fonts/iconfont.eot","hash":"6819d9bb643bdeafc17bfecb0746ae641b018fdf","modified":1651563745319},{"_id":"public/images/avatar.jpeg","hash":"97358a400133992896a7398ad7400c226f9acee3","modified":1651563745319},{"_id":"public/images/thumb-default.png","hash":"e8403b97ed9251f9f5207765b0ce796c5000b4ba","modified":1651563745319},{"_id":"public/images/xingqiu-qrcode.jpg","hash":"ef2c2848dc79db6df7c752510651ed8ba57f2daf","modified":1651563745319},{"_id":"public/images/donate/alipayimg.png","hash":"9562f23f2eb57841c65dc769b6cc43a2cf0efa94","modified":1651563745319},{"_id":"public/images/donate/wechatpayimg.png","hash":"c0844d9a633696cb00ae64fde06f0f924f63b596","modified":1651563745319},{"_id":"public/images/favatar/SzsFox-logo.png","hash":"d71fcc73b7bc2a439d8c7ba461137856d190bd76","modified":1651563745319},{"_id":"public/images/favatar/chuangzaoshi-logo.png","hash":"7fa5734072050952159a02d330bbc008b5a99122","modified":1651563745319},{"_id":"public/images/favatar/idesign-logo.png","hash":"6b150a2dbb9912b7a7662255c27e4d4baaecee71","modified":1651563745319},{"_id":"public/2022/01/23/kt-coroutine-create/call_process.png","hash":"1c69b16a19f9036cf7f764def7ae6a4233fdfd13","modified":1651563745319},{"_id":"public/2022/01/23/kt-coroutine-create/call_stack.png","hash":"35143a71684c527955903ccfbe61936a930ecb92","modified":1651563745319},{"_id":"public/2022/01/23/kt-coroutine-create/uml.png","hash":"ce576e079854eb404a01ff232698de1bc9603789","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/call_receiver.png","hash":"cbf39d9d9dc37ce29f848b162772317dd975834b","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/51%_attack.png","hash":"4f1a6999c693d71d94a1cd651833da8d04fcea6a","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/6_confirms.png","hash":"6b4a3d8349c848a7c6058587bf3001c4453c69d2","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/anti_tamper.png","hash":"b772cca9c96f195052ea260d8b93834825ab67f3","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/anti_double_spending_in_centralize.png","hash":"84566d3f1aa30339e9ffe6277f0b5c1baab832e3","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/asymmetric_encryption.png","hash":"aa0726adcffa9be5b9ebb4d59f515845d24eb385","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/btc_transaction.png","hash":"6421594dfdde0879a9c64a0355784def1d1feaa8","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/decentralized.png","hash":"a7ac93f30ebe9042a809d4cfa2a4b95284331d74","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/btc_structure.drawio","hash":"346a6f352629ccc577c3b731f02c1b2e247caaf4","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/digital_signature.drawio","hash":"f8bcea820e09a7891bc43c812172039fca3e292e","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/double_spending.png","hash":"0c53fe43db53611c3204cd78429feae21a4f4b1c","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/digital_signature.png","hash":"06ef857549b6f8a3dd35411ca0fcb5e0158cf0fe","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/double_spending.drawio","hash":"236f2070eb52f2ab3a453c276e6591b84fc5f000","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/hash.drawio","hash":"7dc4e15b9a99f4d9feb159a86b57e87406c9f2ef","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/hash_collision.drawio","hash":"a12e04b60e7296e218f9034a1bdebe7f1c981362","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/hash_collision.png","hash":"ba4304d9e30a30d22c1d19c09450c75e8496d04a","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/hash_pointer_block.png","hash":"388fd448a7b1808fee1dc19eaf036d6c8a3440e2","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/merkle_proof.png","hash":"140e8aab9049705927ad83d084aca7dbb6a58b1d","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/merkle_tree.png","hash":"9ea72dc03bbf9dcde5909688551c912a5044d035","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/mining.png","hash":"a649f333d9dd526559cb2c19cb9ead56441978e8","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/mining.drawio","hash":"f346f5b9f13c8578a467dac1fc20e4a193803c9b","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/mining_healthy.png","hash":"265b7b982bc78ab4b53967c6eb8273d2beb211a1","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/mining_verify.png","hash":"df267879156e762f5135d2981c39ba497163544b","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/predict.png","hash":"a01966ed9ba0ad43a47b0324050e3be8beb23294","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/tamper.png","hash":"eda6f80c0f5cb3319b3fbadf389600c8abeb9735","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/what_is_block_chain.png","hash":"0fe49579b2f27982f9ddeaded364d9d8353789cf","modified":1651563745319},{"_id":"public/2022/01/22/kt-sequence/list_words.png","hash":"2cf01eaab29bac775dfdeb1b60ceda31bfb864e0","modified":1651563745319},{"_id":"public/2022/01/22/kt-sequence/sequence.png","hash":"1da3602a7c35a690efabbf19ada3a2dfe5a1cf3b","modified":1651563745319},{"_id":"public/2022/01/22/kt-sequence/sequence_words.png","hash":"22d75f6baa72a667072e7339775f07bff13b7846","modified":1651563745319},{"_id":"public/2022/01/26/linear-list/linear-list.drawio","hash":"0815dc4b146af467cab35f6f0d25f843ce8ae8c2","modified":1651563745319},{"_id":"public/2022/01/26/linear-list/linear-list_def.png","hash":"75e71701693aeb5e22655078813e817aecdd1000","modified":1651563745319},{"_id":"public/images/donate/alipay.JPG","hash":"ea3b30419182bd1fbc8c15e02d75dc194b478ef0","modified":1651563745319},{"_id":"public/2022/01/23/kt-coroutine-create/break_point.png","hash":"110863f2074e34d3c47bfc4138dbf4c488214278","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/jadx_2.png","hash":"ca83961c5e55c43f56ec1d300e7fa94a9ca6ad71","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/jadx_4.png","hash":"d136382af5dd703c1ac1af7649542946dc81d17b","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/jadx_5.png","hash":"b96970f1621ed17d57d3244b2308d8d3d22d106f","modified":1651563745319},{"_id":"public/fonts/README.html","hash":"43b6265aeccff3f9d495e2b44d07b249a2197bd7","modified":1651563745319},{"_id":"public/js/application.js","hash":"46d1fb207ce5f0acb83803f927985dfcea86f9ef","modified":1651563745319},{"_id":"public/js/application.min.js","hash":"34d765e982c7d6360c37f82202d99f63ac40e408","modified":1651563745319},{"_id":"public/js/insight.js","hash":"298e8ca42517984bd26f34caa4c45560b0e909ad","modified":1651563745319},{"_id":"public/css/style.css","hash":"a115348d8810a8d6b608ffc7bb02b915b3f48534","modified":1651563745319},{"_id":"public/js/jquery.min.js","hash":"5a9dcfbef655a2668e78baebeaa8dc6f41d8dabb","modified":1651563745319},{"_id":"public/js/plugin.min.js","hash":"07fe34638f9832702c5f81d8583c5e4e8b3d9659","modified":1651563745319},{"_id":"public/js/plugin.js","hash":"a8524d42b8621bfaa06602a163c6a1f82702b91d","modified":1651563745319},{"_id":"public/css/style.min.css","hash":"1d23abc76726ebe042f7df4749f00f8f73338444","modified":1651563745319},{"_id":"public/fonts/iconfont.svg","hash":"25929e6e74f7027acd1f6467a67e95b153bcd8d5","modified":1651563745319},{"_id":"public/js/plugin.js.map","hash":"1730c0cc660f863120aca0a439d7264e2e245fc5","modified":1651563745319},{"_id":"public/images/donate/wechatpay.JPG","hash":"877b333659f7266c775657f0801bb814458b4efc","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/jadx_1.png","hash":"ab1a1621242568499241ff6653c1c8b4353738c1","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/jadx_3.png","hash":"5391982ba2083b25c8ecaa867d9d475b8f5c4f63","modified":1651563745319},{"_id":"public/2022/01/22/kt-receiver/define_receiver.png","hash":"c7cfaaf76d59139c9d315e289a6eb9bf7a811a68","modified":1651563745319},{"_id":"public/2022/01/23/bc-bitcoin-concept/btc_cover.png","hash":"c5f0e0a815f220e77558f20fcdfdf6a49969243e","modified":1651563745319}],"Category":[{"name":"Video","_id":"cl2pueu400002j6s6bhp10bkm"},{"name":"考研","_id":"cl2pueu440007j6s69apg5xj0"},{"name":"BlockChain","_id":"cl2pueu45000dj6s6cds9hz5f"},{"name":"Kotlin","_id":"cl2pueu46000ij6s657opggcr"}],"Data":[],"Page":[],"Post":[{"title":"音频开发基础","date":"2022-01-22T17:53:41.000Z","toc":true,"_content":"\n> 本人目前音视频技术基本零基础（在公司里耳濡目染，听过一些概念，有着肤浅的理解，实际是一头雾水），鉴于本人在短视频公司工作过（不好意思不懂这些），本身其实对这块也比较感兴趣，加上之前一直没下决心系统学习这块知识，现在想开始从零开始系统学习音视频技术，并记录学习笔记「音视频从零开始」系列，希望能帮到更多零基础想学习音视频技术的同学\n>\n> 注：系列文章都是通过查找各个资料加上我个人理解总结出来的学习笔记，文章最后会附上参考文章或书籍的连接，如果有理解不对或有涉及知识侵权的地方，请及时评论联系我\n\n这是音视频技术从零开始学习笔记的第一篇，从音频技术相关的概念开始，本篇不涉及任何编程相关内容。个人认为，概念理解清楚对以后编程模块的边界、职责划分以及该使用哪些工具有很大的帮助。   \n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe36e55ac608~tplv-t2oaga2asx-image.image)\n**图1-音频技术核心概念**\n\n\n### 采样\n\n模拟信号（连续信号）是连续的，意味着不会失真（音质好），比如磁带、唱片中就通过物理介质（通过唱片表面的起伏跌宕，或者是磁带上的磁粉引起的磁场强度来表示音箱上振膜的即时位置）保存着音频的模拟信号。\n\n我们都知道唱片和磁带已经逐渐离开人们的视野，就是因为通过物理手段无法长久的保存音频信号，唱片会磨损，磁带会老化，那用什么方法能够长久的保存音频信息呢？\n\n目前，使用最多的方法就是通过数字来保存音频，那么又如何将音频转为数字呢？首先先通过图中「采样」手段，将模拟信号转为离散信号，离散信号可以理解为不连续信号，把一段连续函数按照一定规则断开。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe41bf685ece~tplv-t2oaga2asx-image.image)\n**图2-采样信号** [原图链接](https://www.newvfx.com/forums/topic/21333)\n\n此图为CD标准的采样信号图，图中的「采样率44.1Khz」就是断开函数的规则，每 1s 将一段波分为 44100 个矩形，经过采样，得到了一个有一堆柱形图组成的图形（离散信号）\n\n为什么音频的采样率是 44.1Khz 呢？对于高质量的音频（人耳能够听到的频率范围是 20hz-20Khz），根据采样定理，按比人能听到的最大频率的2倍进行采样可以保证声音在被数字化处理后，还能有质量保障\n\n### 量化\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe4e3326d98f~tplv-t2oaga2asx-image.image)\n**图3-量化（信号处理）**\n\n经过采样后，我们发现图中的纵坐标是没有值的，无法表示每段样本的数字大小，这时候就需要引入量化的概念。通俗易懂地讲「量化」就是在沿垂直方向再将信号图按照一定数字范围切断，保证每段样本能用数字描述。这个数字的最终物理意义是反应在音响振膜位置，比如用[0-10万]进行量化，最终反应在振膜的位置就是 0-10万。\n\n那么CD的量化标准是什么呢？采用16bit(short)，也就是2的16次方，总共65536，然后为了由于振膜是可以发生正向和负向位移，所以用[-32767,32768]进行量化。\n\n所以图中虚线范围就代表了量化的数字范围，最终的红色曲线就是量化的结果，数字信号\n\n### 编码\n\n经过量化后，每一个采样都是一个数字，那这么多的数字该如何存储呢？这就需要第三个概念：「编码」，所谓编码，就是按照一定的格式记录采样和量化后的数据，比如顺序存储或压缩存储等。\n\n这里涉及很多种格式，通常所说的音频的裸数据格式就是脉冲编码调制数据，简称 PCM （Pulse Code Modulation)。描述一段 PCM 通常需要以下三个概念\n\n* 量化格式（SampleFormat）\n* 采样率（SampleRate)\n* 声道数（Channel)\n\n还以CD标准为例，量化格式 16bit，采样率 44100，声道数 2。\n\n> 这里对声道概念做一个补充，平时所谓的双声道、单声道其实可以理解为需要记录几个信号，比如磁带，双声道就是同一时刻记录两个轨道的信息，一个负责记录左耳机振膜位置，一个负责记录右耳机振膜位置，以此类推，多个声道也是类似\n\n上述信息就描述了CD的音质，对于声音格式来说，还有另一个概念用来描述它的大小，称为数据比特率（bitRate)，即 1s 内的比特数目，用于衡量音频数据单位时间内的容量大小，那么比特率如何计算？\n\n$BitRate=SampleFormat*SampleRate*Channel $\n单位为千比特每秒kbps(kb per second)。  \n比如对于CD音质，\n$44100*16*2=1378.125kbps$ \n那么，一分钟里，CD音质数据需要占多大存储空间呢？\n$1378.125*60/8/1024=10.09MB$\n\n所以一段1分钟的音频经过采样、量化、编码后可以得到一个大约10MB裸数据，成功地将音频的模拟信号转为数字信号，并存储下来。\n\n### 音频压缩编码\n\n上面说到1分钟的CD音质数据的存储空间大于为 10MB，这对于光盘磁盘存储来说可接受，但对于网络传输肯定是无法接受的。所以就需要「压缩编码」出面解决问题\n\n所谓音频编码主要指音频压缩技术，压缩通常又被分为有损和无损两种，但事实上，任何音频编码方式相对于最真实的自然声音信号，都是有损的压缩。从前面说到的采样、量化、编码中不难理解，我们把一条光滑的音频信号曲线分割成了许多数据块，然后对数据进行二进制编码，过程中其实就已经损失了一部分数据了，所以再次进行压缩也只能是尽可能的接近经过PCM编码后的音频裸数据。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe5c51636b87~tplv-t2oaga2asx-image.image)\n**图4-PCM编码** [原图链接](https://baike.baidu.com/pic/pcm%E7%BC%96%E7%A0%81/10865033/0/faedab64034f78f00a6b440077310a55b2191ce5?fr=lemma&ct=single#aid=0&pic=faedab64034f78f00a6b440077310a55b2191ce5)\n\n既然压缩是为了减小编码后的数据存储空间，那么就应该去掉音频的“冗余信息”，从以下两个方面去衡量哪些数据是冗余的\n\n* 之前提到过，人耳所能察觉的声音信号的频率范围为20Hz-20KHz，除此之外的其它频率人耳无法察觉，都可视为冗余信号\n* 当一个强音频信号和一个弱音频信号同时存在时，弱信号会被强信号掩蔽，可视为冗余\n\n其中第二点涉及另两个概念「频谱掩蔽效应」和「时域掩蔽效应」，名字看起来高深莫测，其实不难理解。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe64bd6ab53a~tplv-t2oaga2asx-image.image)\n**图5-频谱掩蔽效应** [原图链接](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n「频谱掩蔽效应」一个音频信号被人耳听到是有一个阈值，阈值越小越容易被人听到，如图所示，虚线是随声音频率增大反应的阈值曲线，在 2-5kHz范围内，阈值很低，是人耳对声音最敏感的频率。现在假设有一个 60dB-0.2kHz 的强音信号出现时，阈值曲线会有所改变（图中实线部分），0.1-0.5kHz 频率的阈值被明显抬高，图中大概40dB-0.17kHz 左右的信号和 30dB-0.48kHz左右的信号都会被掩蔽。所以在0.1kHz-0.5kHz范围内，只能听到 65dp-0.2kHz 的声音，其余信号可视为冗余。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe6c243a3458~tplv-t2oaga2asx-image.image)\n**图6-时域掩蔽效应** [原图链接](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n「时域掩蔽效应」是强信号和弱信号在时间维度发生的掩蔽，分为\n* 前掩蔽，人在听到强信号之前，一些弱信号会被掩蔽\n* 同时掩蔽，强信号会掩蔽同时发生的弱信号\n* 后掩蔽，强信号消失后，需要经过一段时间后，才能重新听到弱信号\n\n在这过程中被掩蔽的信号被视为冗余\n\n### 几种音频压缩编码简介\n\n|编码|实现简介|特点|适用场景|\n|--|--|--|--|\n|WAV|无损压缩，其中一种实现方式是在 PCM 数据格式前加上 44 字节，分别描述采样率、声道数、数据格式等信息。|音质非常好，大量软件都支持| 多媒体开发的中间文件、保存音乐和音效\n|MP3|具有不错的压缩比，使用 LAME 编码（MP3 编码格式的一种实现）的中高码率的 MP3 文件| 音质在 128Kbit/s 以上表现还不错，压缩比比较高，大量软硬件都支持|高比特率下对兼容性有要求的音乐鉴赏\n|AAC|新一代有损压缩技术，通过一些附加的编码技术（PS、SBR 等），衍生出了 LC-AAC、HE-AAC、HE-AAC v2三种主要编码格式| 小于 128Kbit/s 表现优异，多用于视频中的音频编码 | 128Kbit/s 一下的音频编码，多用于视频中的音频编码\n|Ogg| 一种非常有潜力的编码，各种码率下都有比较优秀的表现，尤其是低码率场景下。可以在低码率的场景下仍然保持不错的音质，但目前软件硬件支持情况较差|可用比 MP3 更小的码率实现比 MP3 更好的音质，但兼容性不好| 语音聊天的音频消息场景\n\n> 1.压缩比，压缩后大小/原大小，通常小于 1，越小表示压缩的越狠  \n> 2.“码率”是比特率是俗称  \n> 3.表格总结于《音视频开发指南》，其中一些细节有兴趣的同学可以再深入查阅，本文不再深入研究\n\n### 思考\n\n1. 为什么磁带、唱片逐渐消失在人们的视野里，音频播放器可以取而代之？\n2. 声音是经过怎样的处理过程后保存成数字信息的？\n3. 为什么要对音频数据进行压缩编码？\n\n\n### 参考链接\n\n* [将模拟音频向数字音频的转换过程是怎样的？](https://www.zhihu.com/question/19829823)\n\n* [量化 (信号处理)](https://zh.wikipedia.org/zh-hans/%E9%87%8F%E5%8C%96_(%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86))\n\n* [雷骁骅-视频压缩编码和音频压缩编码的基本原理](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n* [雷骁骅-视音频编解码技术零基础学习方法](https://blog.csdn.net/leixiaohua1020/article/details/18893769)\n\n* [百度百科-PCM 编码](https://baike.baidu.com/item/PCM%E7%BC%96%E7%A0%81)\n\n* [百度百科-音频编码](https://baike.baidu.com/item/%E9%9F%B3%E9%A2%91%E5%8E%8B%E7%BC%A9/392863) \n\n* 《音视频开发进阶指南-基于 Android 和 iOS 平台的实践》 - 第1章 音视频基础概念\n\n### 转文声明\n\n如有文章转载需求，请注明本文作者以及链接，感谢各位理解支持","source":"_posts/audio-basic.md","raw":"---\ntitle: 音频开发基础\ndate: 2022-01-23 01:53:41\ncategories: Video\ntoc: true\n---\n\n> 本人目前音视频技术基本零基础（在公司里耳濡目染，听过一些概念，有着肤浅的理解，实际是一头雾水），鉴于本人在短视频公司工作过（不好意思不懂这些），本身其实对这块也比较感兴趣，加上之前一直没下决心系统学习这块知识，现在想开始从零开始系统学习音视频技术，并记录学习笔记「音视频从零开始」系列，希望能帮到更多零基础想学习音视频技术的同学\n>\n> 注：系列文章都是通过查找各个资料加上我个人理解总结出来的学习笔记，文章最后会附上参考文章或书籍的连接，如果有理解不对或有涉及知识侵权的地方，请及时评论联系我\n\n这是音视频技术从零开始学习笔记的第一篇，从音频技术相关的概念开始，本篇不涉及任何编程相关内容。个人认为，概念理解清楚对以后编程模块的边界、职责划分以及该使用哪些工具有很大的帮助。   \n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe36e55ac608~tplv-t2oaga2asx-image.image)\n**图1-音频技术核心概念**\n\n\n### 采样\n\n模拟信号（连续信号）是连续的，意味着不会失真（音质好），比如磁带、唱片中就通过物理介质（通过唱片表面的起伏跌宕，或者是磁带上的磁粉引起的磁场强度来表示音箱上振膜的即时位置）保存着音频的模拟信号。\n\n我们都知道唱片和磁带已经逐渐离开人们的视野，就是因为通过物理手段无法长久的保存音频信号，唱片会磨损，磁带会老化，那用什么方法能够长久的保存音频信息呢？\n\n目前，使用最多的方法就是通过数字来保存音频，那么又如何将音频转为数字呢？首先先通过图中「采样」手段，将模拟信号转为离散信号，离散信号可以理解为不连续信号，把一段连续函数按照一定规则断开。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe41bf685ece~tplv-t2oaga2asx-image.image)\n**图2-采样信号** [原图链接](https://www.newvfx.com/forums/topic/21333)\n\n此图为CD标准的采样信号图，图中的「采样率44.1Khz」就是断开函数的规则，每 1s 将一段波分为 44100 个矩形，经过采样，得到了一个有一堆柱形图组成的图形（离散信号）\n\n为什么音频的采样率是 44.1Khz 呢？对于高质量的音频（人耳能够听到的频率范围是 20hz-20Khz），根据采样定理，按比人能听到的最大频率的2倍进行采样可以保证声音在被数字化处理后，还能有质量保障\n\n### 量化\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe4e3326d98f~tplv-t2oaga2asx-image.image)\n**图3-量化（信号处理）**\n\n经过采样后，我们发现图中的纵坐标是没有值的，无法表示每段样本的数字大小，这时候就需要引入量化的概念。通俗易懂地讲「量化」就是在沿垂直方向再将信号图按照一定数字范围切断，保证每段样本能用数字描述。这个数字的最终物理意义是反应在音响振膜位置，比如用[0-10万]进行量化，最终反应在振膜的位置就是 0-10万。\n\n那么CD的量化标准是什么呢？采用16bit(short)，也就是2的16次方，总共65536，然后为了由于振膜是可以发生正向和负向位移，所以用[-32767,32768]进行量化。\n\n所以图中虚线范围就代表了量化的数字范围，最终的红色曲线就是量化的结果，数字信号\n\n### 编码\n\n经过量化后，每一个采样都是一个数字，那这么多的数字该如何存储呢？这就需要第三个概念：「编码」，所谓编码，就是按照一定的格式记录采样和量化后的数据，比如顺序存储或压缩存储等。\n\n这里涉及很多种格式，通常所说的音频的裸数据格式就是脉冲编码调制数据，简称 PCM （Pulse Code Modulation)。描述一段 PCM 通常需要以下三个概念\n\n* 量化格式（SampleFormat）\n* 采样率（SampleRate)\n* 声道数（Channel)\n\n还以CD标准为例，量化格式 16bit，采样率 44100，声道数 2。\n\n> 这里对声道概念做一个补充，平时所谓的双声道、单声道其实可以理解为需要记录几个信号，比如磁带，双声道就是同一时刻记录两个轨道的信息，一个负责记录左耳机振膜位置，一个负责记录右耳机振膜位置，以此类推，多个声道也是类似\n\n上述信息就描述了CD的音质，对于声音格式来说，还有另一个概念用来描述它的大小，称为数据比特率（bitRate)，即 1s 内的比特数目，用于衡量音频数据单位时间内的容量大小，那么比特率如何计算？\n\n$BitRate=SampleFormat*SampleRate*Channel $\n单位为千比特每秒kbps(kb per second)。  \n比如对于CD音质，\n$44100*16*2=1378.125kbps$ \n那么，一分钟里，CD音质数据需要占多大存储空间呢？\n$1378.125*60/8/1024=10.09MB$\n\n所以一段1分钟的音频经过采样、量化、编码后可以得到一个大约10MB裸数据，成功地将音频的模拟信号转为数字信号，并存储下来。\n\n### 音频压缩编码\n\n上面说到1分钟的CD音质数据的存储空间大于为 10MB，这对于光盘磁盘存储来说可接受，但对于网络传输肯定是无法接受的。所以就需要「压缩编码」出面解决问题\n\n所谓音频编码主要指音频压缩技术，压缩通常又被分为有损和无损两种，但事实上，任何音频编码方式相对于最真实的自然声音信号，都是有损的压缩。从前面说到的采样、量化、编码中不难理解，我们把一条光滑的音频信号曲线分割成了许多数据块，然后对数据进行二进制编码，过程中其实就已经损失了一部分数据了，所以再次进行压缩也只能是尽可能的接近经过PCM编码后的音频裸数据。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe5c51636b87~tplv-t2oaga2asx-image.image)\n**图4-PCM编码** [原图链接](https://baike.baidu.com/pic/pcm%E7%BC%96%E7%A0%81/10865033/0/faedab64034f78f00a6b440077310a55b2191ce5?fr=lemma&ct=single#aid=0&pic=faedab64034f78f00a6b440077310a55b2191ce5)\n\n既然压缩是为了减小编码后的数据存储空间，那么就应该去掉音频的“冗余信息”，从以下两个方面去衡量哪些数据是冗余的\n\n* 之前提到过，人耳所能察觉的声音信号的频率范围为20Hz-20KHz，除此之外的其它频率人耳无法察觉，都可视为冗余信号\n* 当一个强音频信号和一个弱音频信号同时存在时，弱信号会被强信号掩蔽，可视为冗余\n\n其中第二点涉及另两个概念「频谱掩蔽效应」和「时域掩蔽效应」，名字看起来高深莫测，其实不难理解。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe64bd6ab53a~tplv-t2oaga2asx-image.image)\n**图5-频谱掩蔽效应** [原图链接](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n「频谱掩蔽效应」一个音频信号被人耳听到是有一个阈值，阈值越小越容易被人听到，如图所示，虚线是随声音频率增大反应的阈值曲线，在 2-5kHz范围内，阈值很低，是人耳对声音最敏感的频率。现在假设有一个 60dB-0.2kHz 的强音信号出现时，阈值曲线会有所改变（图中实线部分），0.1-0.5kHz 频率的阈值被明显抬高，图中大概40dB-0.17kHz 左右的信号和 30dB-0.48kHz左右的信号都会被掩蔽。所以在0.1kHz-0.5kHz范围内，只能听到 65dp-0.2kHz 的声音，其余信号可视为冗余。\n\n![](https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe6c243a3458~tplv-t2oaga2asx-image.image)\n**图6-时域掩蔽效应** [原图链接](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n「时域掩蔽效应」是强信号和弱信号在时间维度发生的掩蔽，分为\n* 前掩蔽，人在听到强信号之前，一些弱信号会被掩蔽\n* 同时掩蔽，强信号会掩蔽同时发生的弱信号\n* 后掩蔽，强信号消失后，需要经过一段时间后，才能重新听到弱信号\n\n在这过程中被掩蔽的信号被视为冗余\n\n### 几种音频压缩编码简介\n\n|编码|实现简介|特点|适用场景|\n|--|--|--|--|\n|WAV|无损压缩，其中一种实现方式是在 PCM 数据格式前加上 44 字节，分别描述采样率、声道数、数据格式等信息。|音质非常好，大量软件都支持| 多媒体开发的中间文件、保存音乐和音效\n|MP3|具有不错的压缩比，使用 LAME 编码（MP3 编码格式的一种实现）的中高码率的 MP3 文件| 音质在 128Kbit/s 以上表现还不错，压缩比比较高，大量软硬件都支持|高比特率下对兼容性有要求的音乐鉴赏\n|AAC|新一代有损压缩技术，通过一些附加的编码技术（PS、SBR 等），衍生出了 LC-AAC、HE-AAC、HE-AAC v2三种主要编码格式| 小于 128Kbit/s 表现优异，多用于视频中的音频编码 | 128Kbit/s 一下的音频编码，多用于视频中的音频编码\n|Ogg| 一种非常有潜力的编码，各种码率下都有比较优秀的表现，尤其是低码率场景下。可以在低码率的场景下仍然保持不错的音质，但目前软件硬件支持情况较差|可用比 MP3 更小的码率实现比 MP3 更好的音质，但兼容性不好| 语音聊天的音频消息场景\n\n> 1.压缩比，压缩后大小/原大小，通常小于 1，越小表示压缩的越狠  \n> 2.“码率”是比特率是俗称  \n> 3.表格总结于《音视频开发指南》，其中一些细节有兴趣的同学可以再深入查阅，本文不再深入研究\n\n### 思考\n\n1. 为什么磁带、唱片逐渐消失在人们的视野里，音频播放器可以取而代之？\n2. 声音是经过怎样的处理过程后保存成数字信息的？\n3. 为什么要对音频数据进行压缩编码？\n\n\n### 参考链接\n\n* [将模拟音频向数字音频的转换过程是怎样的？](https://www.zhihu.com/question/19829823)\n\n* [量化 (信号处理)](https://zh.wikipedia.org/zh-hans/%E9%87%8F%E5%8C%96_(%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86))\n\n* [雷骁骅-视频压缩编码和音频压缩编码的基本原理](https://blog.csdn.net/leixiaohua1020/article/details/28114081)\n\n* [雷骁骅-视音频编解码技术零基础学习方法](https://blog.csdn.net/leixiaohua1020/article/details/18893769)\n\n* [百度百科-PCM 编码](https://baike.baidu.com/item/PCM%E7%BC%96%E7%A0%81)\n\n* [百度百科-音频编码](https://baike.baidu.com/item/%E9%9F%B3%E9%A2%91%E5%8E%8B%E7%BC%A9/392863) \n\n* 《音视频开发进阶指南-基于 Android 和 iOS 平台的实践》 - 第1章 音视频基础概念\n\n### 转文声明\n\n如有文章转载需求，请注明本文作者以及链接，感谢各位理解支持","slug":"audio-basic","published":1,"updated":"2022-01-22T17:57:55.184Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2pueu3v0000j6s6fk345k7l","content":"<blockquote>\n<p>本人目前音视频技术基本零基础（在公司里耳濡目染，听过一些概念，有着肤浅的理解，实际是一头雾水），鉴于本人在短视频公司工作过（不好意思不懂这些），本身其实对这块也比较感兴趣，加上之前一直没下决心系统学习这块知识，现在想开始从零开始系统学习音视频技术，并记录学习笔记「音视频从零开始」系列，希望能帮到更多零基础想学习音视频技术的同学</p>\n<p>注：系列文章都是通过查找各个资料加上我个人理解总结出来的学习笔记，文章最后会附上参考文章或书籍的连接，如果有理解不对或有涉及知识侵权的地方，请及时评论联系我</p>\n</blockquote>\n<p>这是音视频技术从零开始学习笔记的第一篇，从音频技术相关的概念开始，本篇不涉及任何编程相关内容。个人认为，概念理解清楚对以后编程模块的边界、职责划分以及该使用哪些工具有很大的帮助。   </p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe36e55ac608~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图1-音频技术核心概念</strong></p>\n<h3 id=\"采样\"><a href=\"#采样\" class=\"headerlink\" title=\"采样\"></a>采样</h3><p>模拟信号（连续信号）是连续的，意味着不会失真（音质好），比如磁带、唱片中就通过物理介质（通过唱片表面的起伏跌宕，或者是磁带上的磁粉引起的磁场强度来表示音箱上振膜的即时位置）保存着音频的模拟信号。</p>\n<p>我们都知道唱片和磁带已经逐渐离开人们的视野，就是因为通过物理手段无法长久的保存音频信号，唱片会磨损，磁带会老化，那用什么方法能够长久的保存音频信息呢？</p>\n<p>目前，使用最多的方法就是通过数字来保存音频，那么又如何将音频转为数字呢？首先先通过图中「采样」手段，将模拟信号转为离散信号，离散信号可以理解为不连续信号，把一段连续函数按照一定规则断开。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe41bf685ece~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图2-采样信号</strong> <a href=\"https://www.newvfx.com/forums/topic/21333\">原图链接</a></p>\n<p>此图为CD标准的采样信号图，图中的「采样率44.1Khz」就是断开函数的规则，每 1s 将一段波分为 44100 个矩形，经过采样，得到了一个有一堆柱形图组成的图形（离散信号）</p>\n<p>为什么音频的采样率是 44.1Khz 呢？对于高质量的音频（人耳能够听到的频率范围是 20hz-20Khz），根据采样定理，按比人能听到的最大频率的2倍进行采样可以保证声音在被数字化处理后，还能有质量保障</p>\n<h3 id=\"量化\"><a href=\"#量化\" class=\"headerlink\" title=\"量化\"></a>量化</h3><p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe4e3326d98f~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图3-量化（信号处理）</strong></p>\n<p>经过采样后，我们发现图中的纵坐标是没有值的，无法表示每段样本的数字大小，这时候就需要引入量化的概念。通俗易懂地讲「量化」就是在沿垂直方向再将信号图按照一定数字范围切断，保证每段样本能用数字描述。这个数字的最终物理意义是反应在音响振膜位置，比如用[0-10万]进行量化，最终反应在振膜的位置就是 0-10万。</p>\n<p>那么CD的量化标准是什么呢？采用16bit(short)，也就是2的16次方，总共65536，然后为了由于振膜是可以发生正向和负向位移，所以用[-32767,32768]进行量化。</p>\n<p>所以图中虚线范围就代表了量化的数字范围，最终的红色曲线就是量化的结果，数字信号</p>\n<h3 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h3><p>经过量化后，每一个采样都是一个数字，那这么多的数字该如何存储呢？这就需要第三个概念：「编码」，所谓编码，就是按照一定的格式记录采样和量化后的数据，比如顺序存储或压缩存储等。</p>\n<p>这里涉及很多种格式，通常所说的音频的裸数据格式就是脉冲编码调制数据，简称 PCM （Pulse Code Modulation)。描述一段 PCM 通常需要以下三个概念</p>\n<ul>\n<li>量化格式（SampleFormat）</li>\n<li>采样率（SampleRate)</li>\n<li>声道数（Channel)</li>\n</ul>\n<p>还以CD标准为例，量化格式 16bit，采样率 44100，声道数 2。</p>\n<blockquote>\n<p>这里对声道概念做一个补充，平时所谓的双声道、单声道其实可以理解为需要记录几个信号，比如磁带，双声道就是同一时刻记录两个轨道的信息，一个负责记录左耳机振膜位置，一个负责记录右耳机振膜位置，以此类推，多个声道也是类似</p>\n</blockquote>\n<p>上述信息就描述了CD的音质，对于声音格式来说，还有另一个概念用来描述它的大小，称为数据比特率（bitRate)，即 1s 内的比特数目，用于衡量音频数据单位时间内的容量大小，那么比特率如何计算？</p>\n<p>$BitRate=SampleFormat<em>SampleRate</em>Channel $<br>单位为千比特每秒kbps(kb per second)。<br>比如对于CD音质，<br>$44100<em>16</em>2=1378.125kbps$<br>那么，一分钟里，CD音质数据需要占多大存储空间呢？<br>$1378.125*60/8/1024=10.09MB$</p>\n<p>所以一段1分钟的音频经过采样、量化、编码后可以得到一个大约10MB裸数据，成功地将音频的模拟信号转为数字信号，并存储下来。</p>\n<h3 id=\"音频压缩编码\"><a href=\"#音频压缩编码\" class=\"headerlink\" title=\"音频压缩编码\"></a>音频压缩编码</h3><p>上面说到1分钟的CD音质数据的存储空间大于为 10MB，这对于光盘磁盘存储来说可接受，但对于网络传输肯定是无法接受的。所以就需要「压缩编码」出面解决问题</p>\n<p>所谓音频编码主要指音频压缩技术，压缩通常又被分为有损和无损两种，但事实上，任何音频编码方式相对于最真实的自然声音信号，都是有损的压缩。从前面说到的采样、量化、编码中不难理解，我们把一条光滑的音频信号曲线分割成了许多数据块，然后对数据进行二进制编码，过程中其实就已经损失了一部分数据了，所以再次进行压缩也只能是尽可能的接近经过PCM编码后的音频裸数据。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe5c51636b87~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图4-PCM编码</strong> <a href=\"https://baike.baidu.com/pic/pcm%E7%BC%96%E7%A0%81/10865033/0/faedab64034f78f00a6b440077310a55b2191ce5?fr=lemma&amp;ct=single#aid=0&amp;pic=faedab64034f78f00a6b440077310a55b2191ce5\">原图链接</a></p>\n<p>既然压缩是为了减小编码后的数据存储空间，那么就应该去掉音频的“冗余信息”，从以下两个方面去衡量哪些数据是冗余的</p>\n<ul>\n<li>之前提到过，人耳所能察觉的声音信号的频率范围为20Hz-20KHz，除此之外的其它频率人耳无法察觉，都可视为冗余信号</li>\n<li>当一个强音频信号和一个弱音频信号同时存在时，弱信号会被强信号掩蔽，可视为冗余</li>\n</ul>\n<p>其中第二点涉及另两个概念「频谱掩蔽效应」和「时域掩蔽效应」，名字看起来高深莫测，其实不难理解。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe64bd6ab53a~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图5-频谱掩蔽效应</strong> <a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">原图链接</a></p>\n<p>「频谱掩蔽效应」一个音频信号被人耳听到是有一个阈值，阈值越小越容易被人听到，如图所示，虚线是随声音频率增大反应的阈值曲线，在 2-5kHz范围内，阈值很低，是人耳对声音最敏感的频率。现在假设有一个 60dB-0.2kHz 的强音信号出现时，阈值曲线会有所改变（图中实线部分），0.1-0.5kHz 频率的阈值被明显抬高，图中大概40dB-0.17kHz 左右的信号和 30dB-0.48kHz左右的信号都会被掩蔽。所以在0.1kHz-0.5kHz范围内，只能听到 65dp-0.2kHz 的声音，其余信号可视为冗余。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe6c243a3458~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图6-时域掩蔽效应</strong> <a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">原图链接</a></p>\n<p>「时域掩蔽效应」是强信号和弱信号在时间维度发生的掩蔽，分为</p>\n<ul>\n<li>前掩蔽，人在听到强信号之前，一些弱信号会被掩蔽</li>\n<li>同时掩蔽，强信号会掩蔽同时发生的弱信号</li>\n<li>后掩蔽，强信号消失后，需要经过一段时间后，才能重新听到弱信号</li>\n</ul>\n<p>在这过程中被掩蔽的信号被视为冗余</p>\n<h3 id=\"几种音频压缩编码简介\"><a href=\"#几种音频压缩编码简介\" class=\"headerlink\" title=\"几种音频压缩编码简介\"></a>几种音频压缩编码简介</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>编码</th>\n<th>实现简介</th>\n<th>特点</th>\n<th>适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WAV</td>\n<td>无损压缩，其中一种实现方式是在 PCM 数据格式前加上 44 字节，分别描述采样率、声道数、数据格式等信息。</td>\n<td>音质非常好，大量软件都支持</td>\n<td>多媒体开发的中间文件、保存音乐和音效</td>\n</tr>\n<tr>\n<td>MP3</td>\n<td>具有不错的压缩比，使用 LAME 编码（MP3 编码格式的一种实现）的中高码率的 MP3 文件</td>\n<td>音质在 128Kbit/s 以上表现还不错，压缩比比较高，大量软硬件都支持</td>\n<td>高比特率下对兼容性有要求的音乐鉴赏</td>\n</tr>\n<tr>\n<td>AAC</td>\n<td>新一代有损压缩技术，通过一些附加的编码技术（PS、SBR 等），衍生出了 LC-AAC、HE-AAC、HE-AAC v2三种主要编码格式</td>\n<td>小于 128Kbit/s 表现优异，多用于视频中的音频编码</td>\n<td>128Kbit/s 一下的音频编码，多用于视频中的音频编码</td>\n</tr>\n<tr>\n<td>Ogg</td>\n<td>一种非常有潜力的编码，各种码率下都有比较优秀的表现，尤其是低码率场景下。可以在低码率的场景下仍然保持不错的音质，但目前软件硬件支持情况较差</td>\n<td>可用比 MP3 更小的码率实现比 MP3 更好的音质，但兼容性不好</td>\n<td>语音聊天的音频消息场景</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p>1.压缩比，压缩后大小/原大小，通常小于 1，越小表示压缩的越狠<br>2.“码率”是比特率是俗称<br>3.表格总结于《音视频开发指南》，其中一些细节有兴趣的同学可以再深入查阅，本文不再深入研究</p>\n</blockquote>\n<h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ol>\n<li>为什么磁带、唱片逐渐消失在人们的视野里，音频播放器可以取而代之？</li>\n<li>声音是经过怎样的处理过程后保存成数字信息的？</li>\n<li>为什么要对音频数据进行压缩编码？</li>\n</ol>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><p><a href=\"https://www.zhihu.com/question/19829823\">将模拟音频向数字音频的转换过程是怎样的？</a></p>\n</li>\n<li><p><a href=\"https://zh.wikipedia.org/zh-hans/%E9%87%8F%E5%8C%96_(%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86\">量化 (信号处理)</a>)</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">雷骁骅-视频压缩编码和音频压缩编码的基本原理</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/leixiaohua1020/article/details/18893769\">雷骁骅-视音频编解码技术零基础学习方法</a></p>\n</li>\n<li><p><a href=\"https://baike.baidu.com/item/PCM%E7%BC%96%E7%A0%81\">百度百科-PCM 编码</a></p>\n</li>\n<li><p><a href=\"https://baike.baidu.com/item/%E9%9F%B3%E9%A2%91%E5%8E%8B%E7%BC%A9/392863\">百度百科-音频编码</a> </p>\n</li>\n<li><p>《音视频开发进阶指南-基于 Android 和 iOS 平台的实践》 - 第1章 音视频基础概念</p>\n</li>\n</ul>\n<h3 id=\"转文声明\"><a href=\"#转文声明\" class=\"headerlink\" title=\"转文声明\"></a>转文声明</h3><p>如有文章转载需求，请注明本文作者以及链接，感谢各位理解支持</p>\n","site":{"data":{}},"excerpt":"","more":"<blockquote>\n<p>本人目前音视频技术基本零基础（在公司里耳濡目染，听过一些概念，有着肤浅的理解，实际是一头雾水），鉴于本人在短视频公司工作过（不好意思不懂这些），本身其实对这块也比较感兴趣，加上之前一直没下决心系统学习这块知识，现在想开始从零开始系统学习音视频技术，并记录学习笔记「音视频从零开始」系列，希望能帮到更多零基础想学习音视频技术的同学</p>\n<p>注：系列文章都是通过查找各个资料加上我个人理解总结出来的学习笔记，文章最后会附上参考文章或书籍的连接，如果有理解不对或有涉及知识侵权的地方，请及时评论联系我</p>\n</blockquote>\n<p>这是音视频技术从零开始学习笔记的第一篇，从音频技术相关的概念开始，本篇不涉及任何编程相关内容。个人认为，概念理解清楚对以后编程模块的边界、职责划分以及该使用哪些工具有很大的帮助。   </p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe36e55ac608~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图1-音频技术核心概念</strong></p>\n<h3 id=\"采样\"><a href=\"#采样\" class=\"headerlink\" title=\"采样\"></a>采样</h3><p>模拟信号（连续信号）是连续的，意味着不会失真（音质好），比如磁带、唱片中就通过物理介质（通过唱片表面的起伏跌宕，或者是磁带上的磁粉引起的磁场强度来表示音箱上振膜的即时位置）保存着音频的模拟信号。</p>\n<p>我们都知道唱片和磁带已经逐渐离开人们的视野，就是因为通过物理手段无法长久的保存音频信号，唱片会磨损，磁带会老化，那用什么方法能够长久的保存音频信息呢？</p>\n<p>目前，使用最多的方法就是通过数字来保存音频，那么又如何将音频转为数字呢？首先先通过图中「采样」手段，将模拟信号转为离散信号，离散信号可以理解为不连续信号，把一段连续函数按照一定规则断开。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe41bf685ece~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图2-采样信号</strong> <a href=\"https://www.newvfx.com/forums/topic/21333\">原图链接</a></p>\n<p>此图为CD标准的采样信号图，图中的「采样率44.1Khz」就是断开函数的规则，每 1s 将一段波分为 44100 个矩形，经过采样，得到了一个有一堆柱形图组成的图形（离散信号）</p>\n<p>为什么音频的采样率是 44.1Khz 呢？对于高质量的音频（人耳能够听到的频率范围是 20hz-20Khz），根据采样定理，按比人能听到的最大频率的2倍进行采样可以保证声音在被数字化处理后，还能有质量保障</p>\n<h3 id=\"量化\"><a href=\"#量化\" class=\"headerlink\" title=\"量化\"></a>量化</h3><p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe4e3326d98f~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图3-量化（信号处理）</strong></p>\n<p>经过采样后，我们发现图中的纵坐标是没有值的，无法表示每段样本的数字大小，这时候就需要引入量化的概念。通俗易懂地讲「量化」就是在沿垂直方向再将信号图按照一定数字范围切断，保证每段样本能用数字描述。这个数字的最终物理意义是反应在音响振膜位置，比如用[0-10万]进行量化，最终反应在振膜的位置就是 0-10万。</p>\n<p>那么CD的量化标准是什么呢？采用16bit(short)，也就是2的16次方，总共65536，然后为了由于振膜是可以发生正向和负向位移，所以用[-32767,32768]进行量化。</p>\n<p>所以图中虚线范围就代表了量化的数字范围，最终的红色曲线就是量化的结果，数字信号</p>\n<h3 id=\"编码\"><a href=\"#编码\" class=\"headerlink\" title=\"编码\"></a>编码</h3><p>经过量化后，每一个采样都是一个数字，那这么多的数字该如何存储呢？这就需要第三个概念：「编码」，所谓编码，就是按照一定的格式记录采样和量化后的数据，比如顺序存储或压缩存储等。</p>\n<p>这里涉及很多种格式，通常所说的音频的裸数据格式就是脉冲编码调制数据，简称 PCM （Pulse Code Modulation)。描述一段 PCM 通常需要以下三个概念</p>\n<ul>\n<li>量化格式（SampleFormat）</li>\n<li>采样率（SampleRate)</li>\n<li>声道数（Channel)</li>\n</ul>\n<p>还以CD标准为例，量化格式 16bit，采样率 44100，声道数 2。</p>\n<blockquote>\n<p>这里对声道概念做一个补充，平时所谓的双声道、单声道其实可以理解为需要记录几个信号，比如磁带，双声道就是同一时刻记录两个轨道的信息，一个负责记录左耳机振膜位置，一个负责记录右耳机振膜位置，以此类推，多个声道也是类似</p>\n</blockquote>\n<p>上述信息就描述了CD的音质，对于声音格式来说，还有另一个概念用来描述它的大小，称为数据比特率（bitRate)，即 1s 内的比特数目，用于衡量音频数据单位时间内的容量大小，那么比特率如何计算？</p>\n<p>$BitRate=SampleFormat<em>SampleRate</em>Channel $<br>单位为千比特每秒kbps(kb per second)。<br>比如对于CD音质，<br>$44100<em>16</em>2=1378.125kbps$<br>那么，一分钟里，CD音质数据需要占多大存储空间呢？<br>$1378.125*60/8/1024=10.09MB$</p>\n<p>所以一段1分钟的音频经过采样、量化、编码后可以得到一个大约10MB裸数据，成功地将音频的模拟信号转为数字信号，并存储下来。</p>\n<h3 id=\"音频压缩编码\"><a href=\"#音频压缩编码\" class=\"headerlink\" title=\"音频压缩编码\"></a>音频压缩编码</h3><p>上面说到1分钟的CD音质数据的存储空间大于为 10MB，这对于光盘磁盘存储来说可接受，但对于网络传输肯定是无法接受的。所以就需要「压缩编码」出面解决问题</p>\n<p>所谓音频编码主要指音频压缩技术，压缩通常又被分为有损和无损两种，但事实上，任何音频编码方式相对于最真实的自然声音信号，都是有损的压缩。从前面说到的采样、量化、编码中不难理解，我们把一条光滑的音频信号曲线分割成了许多数据块，然后对数据进行二进制编码，过程中其实就已经损失了一部分数据了，所以再次进行压缩也只能是尽可能的接近经过PCM编码后的音频裸数据。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe5c51636b87~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图4-PCM编码</strong> <a href=\"https://baike.baidu.com/pic/pcm%E7%BC%96%E7%A0%81/10865033/0/faedab64034f78f00a6b440077310a55b2191ce5?fr=lemma&amp;ct=single#aid=0&amp;pic=faedab64034f78f00a6b440077310a55b2191ce5\">原图链接</a></p>\n<p>既然压缩是为了减小编码后的数据存储空间，那么就应该去掉音频的“冗余信息”，从以下两个方面去衡量哪些数据是冗余的</p>\n<ul>\n<li>之前提到过，人耳所能察觉的声音信号的频率范围为20Hz-20KHz，除此之外的其它频率人耳无法察觉，都可视为冗余信号</li>\n<li>当一个强音频信号和一个弱音频信号同时存在时，弱信号会被强信号掩蔽，可视为冗余</li>\n</ul>\n<p>其中第二点涉及另两个概念「频谱掩蔽效应」和「时域掩蔽效应」，名字看起来高深莫测，其实不难理解。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe64bd6ab53a~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图5-频谱掩蔽效应</strong> <a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">原图链接</a></p>\n<p>「频谱掩蔽效应」一个音频信号被人耳听到是有一个阈值，阈值越小越容易被人听到，如图所示，虚线是随声音频率增大反应的阈值曲线，在 2-5kHz范围内，阈值很低，是人耳对声音最敏感的频率。现在假设有一个 60dB-0.2kHz 的强音信号出现时，阈值曲线会有所改变（图中实线部分），0.1-0.5kHz 频率的阈值被明显抬高，图中大概40dB-0.17kHz 左右的信号和 30dB-0.48kHz左右的信号都会被掩蔽。所以在0.1kHz-0.5kHz范围内，只能听到 65dp-0.2kHz 的声音，其余信号可视为冗余。</p>\n<p><img src=\"https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2020/7/18/1735fe6c243a3458~tplv-t2oaga2asx-image.image\" alt=\"\"><br><strong>图6-时域掩蔽效应</strong> <a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">原图链接</a></p>\n<p>「时域掩蔽效应」是强信号和弱信号在时间维度发生的掩蔽，分为</p>\n<ul>\n<li>前掩蔽，人在听到强信号之前，一些弱信号会被掩蔽</li>\n<li>同时掩蔽，强信号会掩蔽同时发生的弱信号</li>\n<li>后掩蔽，强信号消失后，需要经过一段时间后，才能重新听到弱信号</li>\n</ul>\n<p>在这过程中被掩蔽的信号被视为冗余</p>\n<h3 id=\"几种音频压缩编码简介\"><a href=\"#几种音频压缩编码简介\" class=\"headerlink\" title=\"几种音频压缩编码简介\"></a>几种音频压缩编码简介</h3><div class=\"table-container\">\n<table>\n<thead>\n<tr>\n<th>编码</th>\n<th>实现简介</th>\n<th>特点</th>\n<th>适用场景</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>WAV</td>\n<td>无损压缩，其中一种实现方式是在 PCM 数据格式前加上 44 字节，分别描述采样率、声道数、数据格式等信息。</td>\n<td>音质非常好，大量软件都支持</td>\n<td>多媒体开发的中间文件、保存音乐和音效</td>\n</tr>\n<tr>\n<td>MP3</td>\n<td>具有不错的压缩比，使用 LAME 编码（MP3 编码格式的一种实现）的中高码率的 MP3 文件</td>\n<td>音质在 128Kbit/s 以上表现还不错，压缩比比较高，大量软硬件都支持</td>\n<td>高比特率下对兼容性有要求的音乐鉴赏</td>\n</tr>\n<tr>\n<td>AAC</td>\n<td>新一代有损压缩技术，通过一些附加的编码技术（PS、SBR 等），衍生出了 LC-AAC、HE-AAC、HE-AAC v2三种主要编码格式</td>\n<td>小于 128Kbit/s 表现优异，多用于视频中的音频编码</td>\n<td>128Kbit/s 一下的音频编码，多用于视频中的音频编码</td>\n</tr>\n<tr>\n<td>Ogg</td>\n<td>一种非常有潜力的编码，各种码率下都有比较优秀的表现，尤其是低码率场景下。可以在低码率的场景下仍然保持不错的音质，但目前软件硬件支持情况较差</td>\n<td>可用比 MP3 更小的码率实现比 MP3 更好的音质，但兼容性不好</td>\n<td>语音聊天的音频消息场景</td>\n</tr>\n</tbody>\n</table>\n</div>\n<blockquote>\n<p>1.压缩比，压缩后大小/原大小，通常小于 1，越小表示压缩的越狠<br>2.“码率”是比特率是俗称<br>3.表格总结于《音视频开发指南》，其中一些细节有兴趣的同学可以再深入查阅，本文不再深入研究</p>\n</blockquote>\n<h3 id=\"思考\"><a href=\"#思考\" class=\"headerlink\" title=\"思考\"></a>思考</h3><ol>\n<li>为什么磁带、唱片逐渐消失在人们的视野里，音频播放器可以取而代之？</li>\n<li>声音是经过怎样的处理过程后保存成数字信息的？</li>\n<li>为什么要对音频数据进行压缩编码？</li>\n</ol>\n<h3 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h3><ul>\n<li><p><a href=\"https://www.zhihu.com/question/19829823\">将模拟音频向数字音频的转换过程是怎样的？</a></p>\n</li>\n<li><p><a href=\"https://zh.wikipedia.org/zh-hans/%E9%87%8F%E5%8C%96_(%E4%BF%A1%E5%8F%B7%E5%A4%84%E7%90%86\">量化 (信号处理)</a>)</p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/leixiaohua1020/article/details/28114081\">雷骁骅-视频压缩编码和音频压缩编码的基本原理</a></p>\n</li>\n<li><p><a href=\"https://blog.csdn.net/leixiaohua1020/article/details/18893769\">雷骁骅-视音频编解码技术零基础学习方法</a></p>\n</li>\n<li><p><a href=\"https://baike.baidu.com/item/PCM%E7%BC%96%E7%A0%81\">百度百科-PCM 编码</a></p>\n</li>\n<li><p><a href=\"https://baike.baidu.com/item/%E9%9F%B3%E9%A2%91%E5%8E%8B%E7%BC%A9/392863\">百度百科-音频编码</a> </p>\n</li>\n<li><p>《音视频开发进阶指南-基于 Android 和 iOS 平台的实践》 - 第1章 音视频基础概念</p>\n</li>\n</ul>\n<h3 id=\"转文声明\"><a href=\"#转文声明\" class=\"headerlink\" title=\"转文声明\"></a>转文声明</h3><p>如有文章转载需求，请注明本文作者以及链接，感谢各位理解支持</p>\n"},{"title":"不定积分基本公式与推导","date":"2022-05-03T07:28:33.000Z","katex":true,"_content":"不定积分基本公式与推导\n---\n\n##### 1\n{% katex %}\n\\int\\ a^x\\,dx=\\dfrac{a^x}{lna} + C,\\quad ({a^x})' = a^x lna\n{% endkatex %}\n\n\n##### 2\n{% katex %}\n\\int\\tan x\\,dx=\\int\\dfrac{sinx}{cosx}\\,dx=-\\int\\dfrac{1}{cosx}\\,d(cosx)=-\\ln{|\\cos{x}|} + C\n{% endkatex %}\n\n{% katex %}\n\\int\\cot x\\,dx=\\int\\dfrac{cosx}{sinx}\\,dx=-\\int\\dfrac{1}{sinx}\\,d(sinx)=\\ln{|\\sin{x}|} + C\n{% endkatex %}\n\n##### 3\n{% katex %}\n\\int\\dfrac{1}{cosx}\\,dx =\\int\\sec{x}\\,dx\\\\\n=\\int\\dfrac{cosx}{(cosx)^2}\\,dx\n=\\int\\dfrac{cosx}{1-(sinx)^2}\\,dx \\\\\n=\\int\\dfrac{1}{1-(sinx)^2}\\,d(sinx)=\\int\\dfrac{1}{(1+sinx)(1-sinx)}\\,d(sinx) \\\\\n=\\dfrac{1}{2}[\\int\\dfrac{1}{1+sinx}\\,d(sinx) - \\int\\dfrac{1}{1-sinx}\\,d(sinx)] \\\\\n=\\dfrac{1}{2}ln|\\dfrac{1+sinx}{1-sinx}| + C \\\\\n=\\dfrac{1}{2}ln|\\dfrac{(1+sinx)^2}{(cosx)^2}|=ln|\\dfrac{1+sinx}{cosx}| \\\\\n=ln|secx + tanx| + C\n{% endkatex %}\n\n{% katex %}\n\\int\\dfrac{1}{sinx}\\,dx =\\int\\csc{x}\\,dx \\\\\n=\\int\\dfrac{sinx}{(sinx)^2}\\,dx\n=\\int\\dfrac{sinx}{1-(cosx)^2}\\,dx \\\\\n=-\\int\\dfrac{1}{1-(cosx)^2}\\,d(cosx)=-\\int\\dfrac{1}{(1+cosx)(1-cosx)}\\,d(cosx) \\\\\n=-\\dfrac{1}{2}[\\int\\dfrac{1}{1+cosx}\\,d(cosx+1) - \\int\\dfrac{1}{1-cosx}\\,d(1-cosx)] \\\\\n=-\\dfrac{1}{2}ln|\\dfrac{1+cosx}{1-cosx}| \\\\\n=-\\dfrac{1}{2}ln\\dfrac{(sinx)^2}{(1-cosx)^2} \\\\\n=ln|\\dfrac{1-cosx}{sinx}| \\\\\n=ln|cscx + cotx| + C\n{% endkatex %}\n\n##### 4\n{% katex %}\n\\int (secx)^2\\,dx=tanx + C,\\quad tanx'=(secx)^2\n{% endkatex %}\n{% katex %}\n\\int (cscx)^2\\,dx=-cotx +C,\\quad cotx'=-(cscx)^2\n{% endkatex %}\n\n##### 5\n{% katex %}\n\\int secx \\; tanx\\, dx= \\int \\dfrac{sinx}{(cosx)^2}\\,dx=\\int-\\dfrac{1}{(cosx)^2}\\,d(cosx)=secx+C, \\quad (secx)'=secx\\;tanx\n{% endkatex %}\n{% katex %}\n\\int cscx \\; cotx \\,dx = \\int\\dfrac{cosx}{(sinx)^2}\\,dx=\\int\\dfrac{1}{(sinx)^2}\\,d(sinx)=-cscx + C, \\quad (cscx)' = cscx - cotx\n{% endkatex %}\n\n##### 6\n\n{% katex %}\n\\int\\dfrac{1}{a^2 + x^2}\\,dx=\\dfrac{1}{a}arctan\\dfrac{x}{a} + C\n{% endkatex %}\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{a^2 - x^2}}\\,dx=arcsin\\dfrac{x}{a} + C\n{% endkatex %}\n\n##### 7\n**三角函数换元**\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{x^2 - a^2}}\\,dx \\\\\n令\\; x=asect, \\quad dx=a\\;sect \\; tant \\; dt \\\\\n=\\int \\dfrac{1}{atant} \\; asect \\; tant\\, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C \\\\\n回代 \\; x sect=\\dfrac{x}{a} ,\\quad tant=\\dfrac{\\sqrt{x^2 - a^2}}{a} \\\\\n=ln | x + \\sqrt{x^2 - a^2}| - lna + C_1 \\\\\n=ln | x + \\sqrt{x^2 - a^2}| + C \n{% endkatex %}\n\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{x^2 + a^2}}\\,dx \\\\\n令\\; x=atant, \\quad dx=a\\;(sect)^2 \\; dt \\\\\n=\\int \\dfrac{1}{asect} \\; a(sect)^2, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C  \\\\\n回代 \\; sect = \\dfrac{\\sqrt{x^2 + a^2}}{a} \\; tant=\\dfrac{x}{a} \\\\\n=ln|x + \\sqrt{x^2 + a^2}| + C \n{% endkatex %}\n\n{% katex %}\n\\int\\sqrt{a^2 - x^2}\\, dx \\\\\n令\\; x=asint \\quad dx=acostdt \\\\\n=\\int a^2 (cost)^2\\, dt \\\\\n=a^2 \\int \\dfrac{cos2t+1}{2}\\, dt \\\\\n=a^2(\\dfrac{sin2t}{4}+\\dfrac{t}{2})+ C \\\\\n回代 \\; sin2t=2sintcost=\\dfrac{2x\\sqrt{a^2-x^2}}{a^2} \\quad t=arcsin\\dfrac{x}{a} \\\\\n=\\dfrac{a^2}{2}arcsin\\dfrac{x}{a} + \\dfrac{x}{2}\\sqrt{a^2 - x^2} + C\n{% endkatex %}\n\n##### 8\n**平方差**\n{% katex %}\n\\int \\dfrac{1}{x^2-a^2}\\, dx \\\\\n=\\int \\dfrac{1}{(x+a)(x-a)}\\, dx \\\\\n=\\dfrac{1}{2a}[\\int \\dfrac{1}{x+a}\\,dx - \\int \\dfrac{1}{x-a}\\, dx]\\\\\n=\\dfrac{1}{2a}ln\\dfrac{x+a}{x-a} + C\n{% endkatex %}\n\n##### 9\n**三角函数变换**\n{% katex %}\n\\int (cosx)^2\\, dx=\\int \\dfrac{cos2x+1}{2}\\,dx=\\dfrac{sin2x}{4}+\\dfrac{x}{2}+ C\n{% endkatex %}\n{% katex %}\n\\int (sinx)^2\\, dx=\\int \\dfrac{1-cos2x}{2}\\, dx=\\dfrac{x}{2} - \\dfrac{sin2x}{4} + C\n{% endkatex %}\n{% katex %}\n\\int (tanx)^2\\, dx=\\int (secx)^2 - 1\\, dx=tanx - x + C\n{% endkatex %}\n{% katex %}\n\\int (cotx)^2\\, dx=\\int (cscx)^2 - 1\\, dx=-cotx - x + C\n{% endkatex %}\n","source":"_posts/basic-integral.md","raw":"---\ntitle: 不定积分基本公式与推导\ndate: 2022-05-03 15:28:33\ntags: 高数\ncategories: 考研\nkatex: true\n---\n不定积分基本公式与推导\n---\n\n##### 1\n{% katex %}\n\\int\\ a^x\\,dx=\\dfrac{a^x}{lna} + C,\\quad ({a^x})' = a^x lna\n{% endkatex %}\n\n\n##### 2\n{% katex %}\n\\int\\tan x\\,dx=\\int\\dfrac{sinx}{cosx}\\,dx=-\\int\\dfrac{1}{cosx}\\,d(cosx)=-\\ln{|\\cos{x}|} + C\n{% endkatex %}\n\n{% katex %}\n\\int\\cot x\\,dx=\\int\\dfrac{cosx}{sinx}\\,dx=-\\int\\dfrac{1}{sinx}\\,d(sinx)=\\ln{|\\sin{x}|} + C\n{% endkatex %}\n\n##### 3\n{% katex %}\n\\int\\dfrac{1}{cosx}\\,dx =\\int\\sec{x}\\,dx\\\\\n=\\int\\dfrac{cosx}{(cosx)^2}\\,dx\n=\\int\\dfrac{cosx}{1-(sinx)^2}\\,dx \\\\\n=\\int\\dfrac{1}{1-(sinx)^2}\\,d(sinx)=\\int\\dfrac{1}{(1+sinx)(1-sinx)}\\,d(sinx) \\\\\n=\\dfrac{1}{2}[\\int\\dfrac{1}{1+sinx}\\,d(sinx) - \\int\\dfrac{1}{1-sinx}\\,d(sinx)] \\\\\n=\\dfrac{1}{2}ln|\\dfrac{1+sinx}{1-sinx}| + C \\\\\n=\\dfrac{1}{2}ln|\\dfrac{(1+sinx)^2}{(cosx)^2}|=ln|\\dfrac{1+sinx}{cosx}| \\\\\n=ln|secx + tanx| + C\n{% endkatex %}\n\n{% katex %}\n\\int\\dfrac{1}{sinx}\\,dx =\\int\\csc{x}\\,dx \\\\\n=\\int\\dfrac{sinx}{(sinx)^2}\\,dx\n=\\int\\dfrac{sinx}{1-(cosx)^2}\\,dx \\\\\n=-\\int\\dfrac{1}{1-(cosx)^2}\\,d(cosx)=-\\int\\dfrac{1}{(1+cosx)(1-cosx)}\\,d(cosx) \\\\\n=-\\dfrac{1}{2}[\\int\\dfrac{1}{1+cosx}\\,d(cosx+1) - \\int\\dfrac{1}{1-cosx}\\,d(1-cosx)] \\\\\n=-\\dfrac{1}{2}ln|\\dfrac{1+cosx}{1-cosx}| \\\\\n=-\\dfrac{1}{2}ln\\dfrac{(sinx)^2}{(1-cosx)^2} \\\\\n=ln|\\dfrac{1-cosx}{sinx}| \\\\\n=ln|cscx + cotx| + C\n{% endkatex %}\n\n##### 4\n{% katex %}\n\\int (secx)^2\\,dx=tanx + C,\\quad tanx'=(secx)^2\n{% endkatex %}\n{% katex %}\n\\int (cscx)^2\\,dx=-cotx +C,\\quad cotx'=-(cscx)^2\n{% endkatex %}\n\n##### 5\n{% katex %}\n\\int secx \\; tanx\\, dx= \\int \\dfrac{sinx}{(cosx)^2}\\,dx=\\int-\\dfrac{1}{(cosx)^2}\\,d(cosx)=secx+C, \\quad (secx)'=secx\\;tanx\n{% endkatex %}\n{% katex %}\n\\int cscx \\; cotx \\,dx = \\int\\dfrac{cosx}{(sinx)^2}\\,dx=\\int\\dfrac{1}{(sinx)^2}\\,d(sinx)=-cscx + C, \\quad (cscx)' = cscx - cotx\n{% endkatex %}\n\n##### 6\n\n{% katex %}\n\\int\\dfrac{1}{a^2 + x^2}\\,dx=\\dfrac{1}{a}arctan\\dfrac{x}{a} + C\n{% endkatex %}\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{a^2 - x^2}}\\,dx=arcsin\\dfrac{x}{a} + C\n{% endkatex %}\n\n##### 7\n**三角函数换元**\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{x^2 - a^2}}\\,dx \\\\\n令\\; x=asect, \\quad dx=a\\;sect \\; tant \\; dt \\\\\n=\\int \\dfrac{1}{atant} \\; asect \\; tant\\, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C \\\\\n回代 \\; x sect=\\dfrac{x}{a} ,\\quad tant=\\dfrac{\\sqrt{x^2 - a^2}}{a} \\\\\n=ln | x + \\sqrt{x^2 - a^2}| - lna + C_1 \\\\\n=ln | x + \\sqrt{x^2 - a^2}| + C \n{% endkatex %}\n\n{% katex %}\n\\int\\dfrac{1}{\\sqrt{x^2 + a^2}}\\,dx \\\\\n令\\; x=atant, \\quad dx=a\\;(sect)^2 \\; dt \\\\\n=\\int \\dfrac{1}{asect} \\; a(sect)^2, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C  \\\\\n回代 \\; sect = \\dfrac{\\sqrt{x^2 + a^2}}{a} \\; tant=\\dfrac{x}{a} \\\\\n=ln|x + \\sqrt{x^2 + a^2}| + C \n{% endkatex %}\n\n{% katex %}\n\\int\\sqrt{a^2 - x^2}\\, dx \\\\\n令\\; x=asint \\quad dx=acostdt \\\\\n=\\int a^2 (cost)^2\\, dt \\\\\n=a^2 \\int \\dfrac{cos2t+1}{2}\\, dt \\\\\n=a^2(\\dfrac{sin2t}{4}+\\dfrac{t}{2})+ C \\\\\n回代 \\; sin2t=2sintcost=\\dfrac{2x\\sqrt{a^2-x^2}}{a^2} \\quad t=arcsin\\dfrac{x}{a} \\\\\n=\\dfrac{a^2}{2}arcsin\\dfrac{x}{a} + \\dfrac{x}{2}\\sqrt{a^2 - x^2} + C\n{% endkatex %}\n\n##### 8\n**平方差**\n{% katex %}\n\\int \\dfrac{1}{x^2-a^2}\\, dx \\\\\n=\\int \\dfrac{1}{(x+a)(x-a)}\\, dx \\\\\n=\\dfrac{1}{2a}[\\int \\dfrac{1}{x+a}\\,dx - \\int \\dfrac{1}{x-a}\\, dx]\\\\\n=\\dfrac{1}{2a}ln\\dfrac{x+a}{x-a} + C\n{% endkatex %}\n\n##### 9\n**三角函数变换**\n{% katex %}\n\\int (cosx)^2\\, dx=\\int \\dfrac{cos2x+1}{2}\\,dx=\\dfrac{sin2x}{4}+\\dfrac{x}{2}+ C\n{% endkatex %}\n{% katex %}\n\\int (sinx)^2\\, dx=\\int \\dfrac{1-cos2x}{2}\\, dx=\\dfrac{x}{2} - \\dfrac{sin2x}{4} + C\n{% endkatex %}\n{% katex %}\n\\int (tanx)^2\\, dx=\\int (secx)^2 - 1\\, dx=tanx - x + C\n{% endkatex %}\n{% katex %}\n\\int (cotx)^2\\, dx=\\int (cscx)^2 - 1\\, dx=-cotx - x + C\n{% endkatex %}\n","slug":"basic-integral","published":1,"updated":"2022-05-03T07:54:26.673Z","_id":"cl2pueu3z0001j6s617z773ox","comments":1,"layout":"post","photos":[],"link":"","content":"<h2 id=\"不定积分基本公式与推导\"><a href=\"#不定积分基本公式与推导\" class=\"headerlink\" title=\"不定积分基本公式与推导\"></a>不定积分基本公式与推导</h2><h5 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mtext> </mtext><msup><mi>a</mi><mi>x</mi></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msup><mi>a</mi><mi>x</mi></msup><mrow><mi>l</mi><mi>n</mi><mi>a</mi></mrow></mfrac></mstyle><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><msup><mi>a</mi><mi>x</mi></msup><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><msup><mi>a</mi><mi>x</mi></msup><mi>l</mi><mi>n</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\ a^x\\,dx=\\dfrac{a^x}{lna} + C,\\quad ({a^x})&#x27; = a^x lna</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.027392em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.341392em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span></span></span></span>\n<h5 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>tan</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mrow><mi mathvariant=\"normal\">∣</mi><mi>cos</mi><mo>⁡</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\tan x\\,dx=\\int\\dfrac{sinx}{cosx}\\,dx=-\\int\\dfrac{1}{cosx}\\,d(cosx)=-\\ln{|\\cos{x}|} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">tan</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mord\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>cot</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mrow><mi mathvariant=\"normal\">∣</mi><mi>sin</mi><mo>⁡</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\cot x\\,dx=\\int\\dfrac{cosx}{sinx}\\,dx=-\\int\\dfrac{1}{sinx}\\,d(sinx)=\\ln{|\\sin{x}|} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">cot</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mord\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mi>sec</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{cosx}\\,dx =\\int\\sec{x}\\,dx\\\\\n=\\int\\dfrac{cosx}{(cosx)^2}\\,dx\n=\\int\\dfrac{cosx}{1-(sinx)^2}\\,dx \\\\\n=\\int\\dfrac{1}{1-(sinx)^2}\\,d(sinx)=\\int\\dfrac{1}{(1+sinx)(1-sinx)}\\,d(sinx) \\\\\n=\\dfrac{1}{2}[\\int\\dfrac{1}{1+sinx}\\,d(sinx) - \\int\\dfrac{1}{1-sinx}\\,d(sinx)] \\\\\n=\\dfrac{1}{2}ln|\\dfrac{1+sinx}{1-sinx}| + C \\\\\n=\\dfrac{1}{2}ln|\\dfrac{(1+sinx)^2}{(cosx)^2}|=ln|\\dfrac{1+sinx}{cosx}| \\\\\n=ln|secx + tanx| + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">sec</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.10585em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.427108em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mi>csc</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{sinx}\\,dx =\\int\\csc{x}\\,dx \\\\\n=\\int\\dfrac{sinx}{(sinx)^2}\\,dx\n=\\int\\dfrac{sinx}{1-(cosx)^2}\\,dx \\\\\n=-\\int\\dfrac{1}{1-(cosx)^2}\\,d(cosx)=-\\int\\dfrac{1}{(1+cosx)(1-cosx)}\\,d(cosx) \\\\\n=-\\dfrac{1}{2}[\\int\\dfrac{1}{1+cosx}\\,d(cosx+1) - \\int\\dfrac{1}{1-cosx}\\,d(1-cosx)] \\\\\n=-\\dfrac{1}{2}ln|\\dfrac{1+cosx}{1-cosx}| \\\\\n=-\\dfrac{1}{2}ln\\dfrac{(sinx)^2}{(1-cosx)^2} \\\\\n=ln|\\dfrac{1-cosx}{sinx}| \\\\\n=ln|cscx + cotx| + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">csc</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.427108em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>x</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\int (secx)^2\\,dx=tanx + C,\\quad tanx&#x27;=(secx)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>t</mi><msup><mi>x</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\int (cscx)^2\\,dx=-cotx +C,\\quad cotx&#x27;=-(cscx)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>\n<h5 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int secx \\; tanx\\, dx= \\int \\dfrac{sinx}{(cosx)^2}\\,dx=\\int-\\dfrac{1}{(cosx)^2}\\,d(cosx)=secx+C, \\quad (secx)&#x27;=secx\\;tanx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int cscx \\; cotx \\,dx = \\int\\dfrac{cosx}{(sinx)^2}\\,dx=\\int\\dfrac{1}{(sinx)^2}\\,d(sinx)=-cscx + C, \\quad (cscx)&#x27; = cscx - cotx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span></span></span></span>\n<h5 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6\"></a>6</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mi>a</mi></mfrac></mstyle><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{a^2 + x^2}\\,dx=\\dfrac{1}{a}arctan\\dfrac{x}{a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{a^2 - x^2}}\\,dx=arcsin\\dfrac{x}{a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7\"></a>7</h5><p><strong>三角函数换元</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mtext>  </mtext><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mtext>  </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi></mrow></mfrac></mstyle><mtext>  </mtext><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>x</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>−</mo><mi>l</mi><mi>n</mi><mi>a</mi><mo>+</mo><msub><mi>C</mi><mn>1</mn></msub><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{x^2 - a^2}}\\,dx \\\\\n令\\; x=asect, \\quad dx=a\\;sect \\; tant \\; dt \\\\\n=\\int \\dfrac{1}{atant} \\; asect \\; tant\\, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C \\\\\n回代 \\; x sect=\\dfrac{x}{a} ,\\quad tant=\\dfrac{\\sqrt{x^2 - a^2}}{a} \\\\\n=ln | x + \\sqrt{x^2 - a^2}| - lna + C_1 \\\\\n=ln | x + \\sqrt{x^2 - a^2}| + C </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mtext>  </mtext><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext>  </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></mfrac></mstyle><mtext>  </mtext><mi>a</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo separator=\"true\">,</mo><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi>a</mi></mfrac></mstyle><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{x^2 + a^2}}\\,dx \\\\\n令\\; x=atant, \\quad dx=a\\;(sect)^2 \\; dt \\\\\n=\\int \\dfrac{1}{asect} \\; a(sect)^2, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C  \\\\\n回代 \\; sect = \\dfrac{\\sqrt{x^2 + a^2}}{a} \\; tant=\\dfrac{x}{a} \\\\\n=ln|x + \\sqrt{x^2 + a^2}| + C </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><msup><mi>a</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>t</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>t</mi><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">)</mo><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>t</mi><mo>=</mo><mn>2</mn><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>2</mn><mi>x</mi><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt></mrow><msup><mi>a</mi><mn>2</mn></msup></mfrac></mstyle><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msup><mi>a</mi><mn>2</mn></msup><mn>2</mn></mfrac></mstyle><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\sqrt{a^2 - x^2}\\, dx \\\\\n令\\; x=asint \\quad dx=acostdt \\\\\n=\\int a^2 (cost)^2\\, dt \\\\\n=a^2 \\int \\dfrac{cos2t+1}{2}\\, dt \\\\\n=a^2(\\dfrac{sin2t}{4}+\\dfrac{t}{2})+ C \\\\\n回代 \\; sin2t=2sintcost=\\dfrac{2x\\sqrt{a^2-x^2}}{a^2} \\quad t=arcsin\\dfrac{x}{a} \\\\\n=\\dfrac{a^2}{2}arcsin\\dfrac{x}{a} + \\dfrac{x}{2}\\sqrt{a^2 - x^2} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.219509em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.9780799999999998em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.29208em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.177108em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h5><p><strong>平方差</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>x</mi><mo>+</mo><mi>a</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>x</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mstyle><mi>l</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>x</mi><mo>+</mo><mi>a</mi></mrow><mrow><mi>x</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int \\dfrac{1}{x^2-a^2}\\, dx \\\\\n=\\int \\dfrac{1}{(x+a)(x-a)}\\, dx \\\\\n=\\dfrac{1}{2a}[\\int \\dfrac{1}{x+a}\\,dx - \\int \\dfrac{1}{x-a}\\, dx]\\\\\n=\\dfrac{1}{2a}ln\\dfrac{x+a}{x-a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603300000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n<h5 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h5><p><strong>三角函数变换</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (cosx)^2\\, dx=\\int \\dfrac{cos2x+1}{2}\\,dx=\\dfrac{sin2x}{4}+\\dfrac{x}{2}+ C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (sinx)^2\\, dx=\\int \\dfrac{1-cos2x}{2}\\, dx=\\dfrac{x}{2} - \\dfrac{sin2x}{4} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>−</mo><mi>x</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (tanx)^2\\, dx=\\int (secx)^2 - 1\\, dx=tanx - x + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mo>−</mo><mi>x</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (cotx)^2\\, dx=\\int (cscx)^2 - 1\\, dx=-cotx - x + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"不定积分基本公式与推导\"><a href=\"#不定积分基本公式与推导\" class=\"headerlink\" title=\"不定积分基本公式与推导\"></a>不定积分基本公式与推导</h2><h5 id=\"1\"><a href=\"#1\" class=\"headerlink\" title=\"1\"></a>1</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mtext> </mtext><msup><mi>a</mi><mi>x</mi></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msup><mi>a</mi><mi>x</mi></msup><mrow><mi>l</mi><mi>n</mi><mi>a</mi></mrow></mfrac></mstyle><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><msup><mi>a</mi><mi>x</mi></msup><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><msup><mi>a</mi><mi>x</mi></msup><mi>l</mi><mi>n</mi><mi>a</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\ a^x\\,dx=\\dfrac{a^x}{lna} + C,\\quad ({a^x})&#x27; = a^x lna</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\"> </span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.027392em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.341392em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span></span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.664392em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">x</span></span></span></span></span></span></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span></span></span></span>\n<h5 id=\"2\"><a href=\"#2\" class=\"headerlink\" title=\"2\"></a>2</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>tan</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>ln</mi><mo>⁡</mo><mrow><mi mathvariant=\"normal\">∣</mi><mi>cos</mi><mo>⁡</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\tan x\\,dx=\\int\\dfrac{sinx}{cosx}\\,dx=-\\int\\dfrac{1}{cosx}\\,d(cosx)=-\\ln{|\\cos{x}|} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">tan</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">cos</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mord\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>cot</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>ln</mi><mo>⁡</mo><mrow><mi mathvariant=\"normal\">∣</mi><mi>sin</mi><mo>⁡</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi></mrow><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\cot x\\,dx=\\int\\dfrac{cosx}{sinx}\\,dx=-\\int\\dfrac{1}{sinx}\\,d(sinx)=\\ln{|\\sin{x}|} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">cot</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">ln</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">sin</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mord\">∣</span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"3\"><a href=\"#3\" class=\"headerlink\" title=\"3\"></a>3</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mi>sec</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{cosx}\\,dx =\\int\\sec{x}\\,dx\\\\\n=\\int\\dfrac{cosx}{(cosx)^2}\\,dx\n=\\int\\dfrac{cosx}{1-(sinx)^2}\\,dx \\\\\n=\\int\\dfrac{1}{1-(sinx)^2}\\,d(sinx)=\\int\\dfrac{1}{(1+sinx)(1-sinx)}\\,d(sinx) \\\\\n=\\dfrac{1}{2}[\\int\\dfrac{1}{1+sinx}\\,d(sinx) - \\int\\dfrac{1}{1-sinx}\\,d(sinx)] \\\\\n=\\dfrac{1}{2}ln|\\dfrac{1+sinx}{1-sinx}| + C \\\\\n=\\dfrac{1}{2}ln|\\dfrac{(1+sinx)^2}{(cosx)^2}|=ln|\\dfrac{1+sinx}{cosx}| \\\\\n=ln|secx + tanx| + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">sec</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.10585em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.427108em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mi>csc</mi><mo>⁡</mo><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo>+</mo><mn>1</mn><mo stretchy=\"false\">)</mo><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>+</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mn>2</mn></mfrac></mstyle><mi>l</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><mrow><mo stretchy=\"false\">(</mo><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow></mfrac></mstyle><mi mathvariant=\"normal\">∣</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{sinx}\\,dx =\\int\\csc{x}\\,dx \\\\\n=\\int\\dfrac{sinx}{(sinx)^2}\\,dx\n=\\int\\dfrac{sinx}{1-(cosx)^2}\\,dx \\\\\n=-\\int\\dfrac{1}{1-(cosx)^2}\\,d(cosx)=-\\int\\dfrac{1}{(1+cosx)(1-cosx)}\\,d(cosx) \\\\\n=-\\dfrac{1}{2}[\\int\\dfrac{1}{1+cosx}\\,d(cosx+1) - \\int\\dfrac{1}{1-cosx}\\,d(1-cosx)] \\\\\n=-\\dfrac{1}{2}ln|\\dfrac{1+cosx}{1-cosx}| \\\\\n=-\\dfrac{1}{2}ln\\dfrac{(sinx)^2}{(1-cosx)^2} \\\\\n=ln|\\dfrac{1-cosx}{sinx}| \\\\\n=ln|cscx + cotx| + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">csc</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord\">1</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.427108em;vertical-align:-0.936em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord\">∣</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"4\"><a href=\"#4\" class=\"headerlink\" title=\"4\"></a>4</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mi>a</mi><mi>n</mi><msup><mi>x</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\int (secx)^2\\,dx=tanx + C,\\quad tanx&#x27;=(secx)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>c</mi><mi>o</mi><mi>t</mi><msup><mi>x</mi><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mo>−</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow><annotation encoding=\"application/x-tex\">\\int (cscx)^2\\,dx=-cotx +C,\\quad cotx&#x27;=-(cscx)^2</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.946332em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord\">−</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span>\n<h5 id=\"5\"><a href=\"#5\" class=\"headerlink\" title=\"5\"></a>5</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int secx \\; tanx\\, dx= \\int \\dfrac{sinx}{(cosx)^2}\\,dx=\\int-\\dfrac{1}{(cosx)^2}\\,d(cosx)=secx+C, \\quad (secx)&#x27;=secx\\;tanx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.27252em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\">−</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mtext>  </mtext><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi></mrow><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><mo stretchy=\"false\">)</mo><mo>=</mo><mo>−</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>+</mo><mi>C</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mo mathvariant=\"normal\" lspace=\"0em\" rspace=\"0em\">′</mo></msup><mo>=</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">\\int cscx \\; cotx \\,dx = \\int\\dfrac{cosx}{(sinx)^2}\\,dx=\\int\\dfrac{1}{(sinx)^2}\\,d(sinx)=-cscx + C, \\quad (cscx)&#x27; = cscx - cotx</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0435600000000003em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.001892em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.751892em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mtight\">′</span></span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.61508em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span></span></span></span>\n<h5 id=\"6\"><a href=\"#6\" class=\"headerlink\" title=\"6\"></a>6</h5><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>+</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mi>a</mi></mfrac></mstyle><mi>a</mi><mi>r</mi><mi>c</mi><mi>t</mi><mi>a</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{a^2 + x^2}\\,dx=\\dfrac{1}{a}arctan\\dfrac{x}{a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{a^2 - x^2}}\\,dx=arcsin\\dfrac{x}{a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"7\"><a href=\"#7\" class=\"headerlink\" title=\"7\"></a>7</h5><p><strong>三角函数换元</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mtext>  </mtext><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mtext>  </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi></mrow></mfrac></mstyle><mtext>  </mtext><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>x</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>−</mo><mi>l</mi><mi>n</mi><mi>a</mi><mo>+</mo><msub><mi>C</mi><mn>1</mn></msub><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{x^2 - a^2}}\\,dx \\\\\n令\\; x=asect, \\quad dx=a\\;sect \\; tant \\; dt \\\\\n=\\int \\dfrac{1}{atant} \\; asect \\; tant\\, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C \\\\\n回代 \\; x sect=\\dfrac{x}{a} ,\\quad tant=\\dfrac{\\sqrt{x^2 - a^2}}{a} \\\\\n=ln | x + \\sqrt{x^2 - a^2}| - lna + C_1 \\\\\n=ln | x + \\sqrt{x^2 - a^2}| + C </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.77777em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.30110799999999993em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo separator=\"true\">,</mo><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mtext>  </mtext><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext>  </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>a</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi></mrow></mfrac></mstyle><mtext>  </mtext><mi>a</mi><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo separator=\"true\">,</mo><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>+</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>s</mi><mi>e</mi><mi>c</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi>a</mi></mfrac></mstyle><mtext>  </mtext><mi>t</mi><mi>a</mi><mi>n</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mi>l</mi><mi>n</mi><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>+</mo><msqrt><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></msqrt><mi mathvariant=\"normal\">∣</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\dfrac{1}{\\sqrt{x^2 + a^2}}\\,dx \\\\\n令\\; x=atant, \\quad dx=a\\;(sect)^2 \\; dt \\\\\n=\\int \\dfrac{1}{asect} \\; a(sect)^2, dt \\\\\n=\\int sect\\, dt \\\\\n=ln|sect + tant| + C  \\\\\n回代 \\; sect = \\dfrac{\\sqrt{x^2 + a^2}}{a} \\; tant=\\dfrac{x}{a} \\\\\n=ln|x + \\sqrt{x^2 + a^2}| + C </annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.25144em;vertical-align:-0.93em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.196611em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.93em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.8888799999999999em;vertical-align:-0.19444em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.064108em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mpunct\">,</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.11112em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">∣</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.163389em;vertical-align:-0.25em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mtext>令</mtext><mtext>  </mtext><mi>x</mi><mo>=</mo><mi>a</mi><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mspace width=\"1em\"/><mi>d</mi><mi>x</mi><mo>=</mo><mi>a</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><msup><mi>a</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>t</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>t</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><msup><mi>a</mi><mn>2</mn></msup><mo stretchy=\"false\">(</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>t</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>t</mi><mn>2</mn></mfrac></mstyle><mo stretchy=\"false\">)</mo><mo>+</mo><mi>C</mi><mspace linebreak=\"newline\"></mspace><mtext>回代</mtext><mtext>  </mtext><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>t</mi><mo>=</mo><mn>2</mn><mi>s</mi><mi>i</mi><mi>n</mi><mi>t</mi><mi>c</mi><mi>o</mi><mi>s</mi><mi>t</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>2</mn><mi>x</mi><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt></mrow><msup><mi>a</mi><mn>2</mn></msup></mfrac></mstyle><mspace width=\"1em\"/><mi>t</mi><mo>=</mo><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><msup><mi>a</mi><mn>2</mn></msup><mn>2</mn></mfrac></mstyle><mi>a</mi><mi>r</mi><mi>c</mi><mi>s</mi><mi>i</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mi>a</mi></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><msqrt><mrow><msup><mi>a</mi><mn>2</mn></msup><mo>−</mo><msup><mi>x</mi><mn>2</mn></msup></mrow></msqrt><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int\\sqrt{a^2 - x^2}\\, dx \\\\\n令\\; x=asint \\quad dx=acostdt \\\\\n=\\int a^2 (cost)^2\\, dt \\\\\n=a^2 \\int \\dfrac{cos2t+1}{2}\\, dt \\\\\n=a^2(\\dfrac{sin2t}{4}+\\dfrac{t}{2})+ C \\\\\n回代 \\; sin2t=2sintcost=\\dfrac{2x\\sqrt{a^2-x^2}}{a^2} \\quad t=arcsin\\dfrac{x}{a} \\\\\n=\\dfrac{a^2}{2}arcsin\\dfrac{x}{a} + \\dfrac{x}{2}\\sqrt{a^2 - x^2} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.219509em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">令</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">t</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.9780799999999998em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.29208em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">t</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord cjk_fallback\">回</span><span class=\"mord cjk_fallback\">代</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.65952em;vertical-align:0em;\"></span><span class=\"mord\">2</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.276389em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.590389em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:1em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.177108em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.491108em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord sqrt\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.913389em;\"><span class=\"svg-align\" style=\"top:-3em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\" style=\"padding-left:0.833em;\"><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-2.873389em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"hide-tail\" style=\"min-width:0.853em;height:1.08em;\"><svg width='400em' height='1.08em' viewBox='0 0 400000 1080' preserveAspectRatio='xMinYMin slice'><path d='M95,702\nc-2.7,0,-7.17,-2.7,-13.5,-8c-5.8,-5.3,-9.5,-10,-9.5,-14\nc0,-2,0.3,-3.3,1,-4c1.3,-2.7,23.83,-20.7,67.5,-54\nc44.2,-33.3,65.8,-50.3,66.5,-51c1.3,-1.3,3,-2,5,-2c4.7,0,8.7,3.3,12,10\ns173,378,173,378c0.7,0,35.3,-71,104,-213c68.7,-142,137.5,-285,206.5,-429\nc69,-144,104.5,-217.7,106.5,-221\nl0 -0\nc5.3,-9.3,12,-14,20,-14\nH400000v40H845.2724\ns-225.272,467,-225.272,467s-235,486,-235,486c-2.7,4.7,-9,7,-19,7\nc-6,0,-10,-1,-12,-3s-194,-422,-194,-422s-65,47,-65,47z\nM834 80h400000v40h-400000z'/></svg></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.12661100000000003em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span>\n<h5 id=\"8\"><a href=\"#8\" class=\"headerlink\" title=\"8\"></a>8</h5><p><strong>平方差</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>−</mo><msup><mi>a</mi><mn>2</mn></msup></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mo stretchy=\"false\">(</mo><mi>x</mi><mo>+</mo><mi>a</mi><mo stretchy=\"false\">)</mo><mo stretchy=\"false\">(</mo><mi>x</mi><mo>−</mo><mi>a</mi><mo stretchy=\"false\">)</mo></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mstyle><mo stretchy=\"false\">[</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>x</mi><mo>+</mo><mi>a</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>−</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mi>x</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo stretchy=\"false\">]</mo><mspace linebreak=\"newline\"></mspace><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mn>1</mn><mrow><mn>2</mn><mi>a</mi></mrow></mfrac></mstyle><mi>l</mi><mi>n</mi><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>x</mi><mo>+</mo><mi>a</mi></mrow><mrow><mi>x</mi><mo>−</mo><mi>a</mi></mrow></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int \\dfrac{1}{x^2-a^2}\\, dx \\\\\n=\\int \\dfrac{1}{(x+a)(x-a)}\\, dx \\\\\n=\\dfrac{1}{2a}[\\int \\dfrac{1}{x+a}\\,dx - \\int \\dfrac{1}{x-a}\\, dx]\\\\\n=\\dfrac{1}{2a}ln\\dfrac{x+a}{x-a} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">a</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.740108em;\"><span style=\"top:-2.9890000000000003em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.25744em;vertical-align:-0.936em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mopen\">[</span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\">]</span></span><span class=\"mspace newline\"></span><span class=\"base\"><span class=\"strut\" style=\"height:0.36687em;vertical-align:0em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.09077em;vertical-align:-0.7693300000000001em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mord mathnormal\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathnormal\">n</span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2603300000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">a</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.7693300000000001em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n<h5 id=\"9\"><a href=\"#9\" class=\"headerlink\" title=\"9\"></a>9</h5><p><strong>三角函数变换</strong><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>s</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi><mo>+</mo><mn>1</mn></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (cosx)^2\\, dx=\\int \\dfrac{cos2x+1}{2}\\,dx=\\dfrac{sin2x}{4}+\\dfrac{x}{2}+ C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord\">1</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>i</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mn>1</mn><mo>−</mo><mi>c</mi><mi>o</mi><mi>s</mi><mn>2</mn><mi>x</mi></mrow><mn>2</mn></mfrac></mstyle><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mi>x</mi><mn>2</mn></mfrac></mstyle><mo>−</mo><mstyle displaystyle=\"true\" scriptlevel=\"0\"><mfrac><mrow><mi>s</mi><mi>i</mi><mi>n</mi><mn>2</mn><mi>x</mi></mrow><mn>4</mn></mfrac></mstyle><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (sinx)^2\\, dx=\\int \\dfrac{1-cos2x}{2}\\, dx=\\dfrac{x}{2} - \\dfrac{sin2x}{4} + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.00744em;vertical-align:-0.686em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.32144em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">s</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.7935600000000003em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.10756em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">2</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.02252em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3365200000000002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\">4</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">i</span><span class=\"mord mathnormal\">n</span><span class=\"mord\">2</span><span class=\"mord mathnormal\">x</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>s</mi><mi>e</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mi>t</mi><mi>a</mi><mi>n</mi><mi>x</mi><mo>−</mo><mi>x</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (tanx)^2\\, dx=\\int (secx)^2 - 1\\, dx=tanx - x + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">e</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">a</span><span class=\"mord mathnormal\">n</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span><br><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>∫</mo><mo stretchy=\"false\">(</mo><mi>c</mi><mi>s</mi><mi>c</mi><mi>x</mi><msup><mo stretchy=\"false\">)</mo><mn>2</mn></msup><mo>−</mo><mn>1</mn><mtext> </mtext><mi>d</mi><mi>x</mi><mo>=</mo><mo>−</mo><mi>c</mi><mi>o</mi><mi>t</mi><mi>x</mi><mo>−</mo><mi>x</mi><mo>+</mo><mi>C</mi></mrow><annotation encoding=\"application/x-tex\">\\int (cotx)^2\\, dx=\\int (cscx)^2 - 1\\, dx=-cotx - x + C</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1.120228em;vertical-align:-0.30612em;\"></span><span class=\"mop op-symbol small-op\" style=\"margin-right:0.19445em;position:relative;top:-0.0005599999999999772em;\">∫</span><span class=\"mopen\">(</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">s</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">x</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.8141079999999999em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">2</span></span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord\">1</span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathnormal\">d</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.69841em;vertical-align:-0.08333em;\"></span><span class=\"mord\">−</span><span class=\"mord mathnormal\">c</span><span class=\"mord mathnormal\">o</span><span class=\"mord mathnormal\">t</span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.66666em;vertical-align:-0.08333em;\"></span><span class=\"mord mathnormal\">x</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:0.68333em;vertical-align:0em;\"></span><span class=\"mord mathnormal\" style=\"margin-right:0.07153em;\">C</span></span></span></span></p>\n"},{"title":"初识比特币","date":"2022-01-22T17:01:56.000Z","toc":true,"_content":"\n![](./btc_cover.png)\n\n### 什么是比特币？\n\n> A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. \n>\n>一个纯正的点对点去中心化的加密数字货币，应能够通过在线支付将币从一方直接发送到另一方，而无需通过任何中心金融机构。\n\n比特币是一种加密货币（crypto-currency），实现自一个自称中本聪（Satoshi Nakamoto）的不明身份的人所发表的一篇论文（[比特币白皮书](https://btcpapers.com/)）\n\n与其说比特币是一种加密货币，不如说比特币是一种基于 P2P 网络的支付结算系统，这样更易于大家理解其本质。\n\n### 为什么要发明比特币？\n\n#### 中心化，基于信任模型\n\n> 酒花 App 平台买了两瓶精酿啤酒\n> 一个自称三方供应商的人加我微信，告知我其中一瓶酒没货了，可以加钱换其他的酒\n> 虽然这个人微信朋友圈都是精酿啤酒相关的内容，且明确知道我买的哪个酒没货了\n> 但是，我内心还是不信任这个人，更信任平台，于是我还是在平台换了一瓶酒\n\n平台就真的值得信任么？\n假如我下单的时候正好赶上平台服务器宕机，扣款成功了，但没收到货。由于平台系统做的不好，再也找不到那笔订单，不能证明我付过钱，也不能给我发货。\n这笔交易就没有人能说的清楚了，信任也就不存在了。\n\n**比特币要去解决信任问题**\n\n>What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. \n>\n>我们真正需要的是一种基于加密算法密码学原理而非基于信任的数字货币支付系统，不需要可信任第三方参与的情况下，允许双方直接进行支付交易\n\n![](./decentralized.png)\n\n\n#### 双花攻击（Double Spending Attack)\n\n「双花」即同一笔钱花了两次或多次。\n\n![](./double_spending.png)\n\n假设央行发行了一款数字货币，货币在软件中其实就是文件，完全可以复制。\n假如 A 在转给 B 100 元后，又复制了同一笔钱转给了 C，就是所谓的「双花」，双花攻击只通过验证数字货币的签名是不够的，还需要使用额外的手段。\n\n\n**比特币要去解决双花问题**\n\n> We propose a solution to the double-spending problem using a peer-to-peer network\n> \n>我们将在本文提出一种新方案，使用点对点去中心化网络去解决这个双花问题\n\n在**比特币交易**小节中，会详细解释比特币是如何解决双花问题的。\n\n### 比特币中的密码学\n\n#### 哈希算法（Hash Algorithm)\n\n哈希算法是用来做什么的呢？我们先来看一个小故事。\n\n**雍正到底是不是篡位登基的？**\n\n![篡改](./tamper.png)\n\n一直有一个传说称雍正不是康熙真正传位的皇帝，而是有人偷偷修改了遗诏，篡位登基的。  \n\n**假如康熙知道哈希函数**  \n\n![利用哈希防篡改](./anti_tamper.png)\n\n如果没有哈希函数，在康熙皇帝驾崩后，遗诏是死无对证，只能遗诏写什么，大臣就做什么。\n\n但有了哈希函数后就变得不一样了，康熙可以在活着的时候就可以提前写好遗诏，并用哈希函数计算出一个哈希串，交予大臣们。\n大臣们看到哈希串也不能猜出遗诏的内容到底是什么，只能等到遗诏公布的那天，再去计算一次哈希值，看与当初皇帝给的哈希串是否一致，来判断遗诏是否被人篡改了。\n如果修改了，就不会遵诏行事。\n\n通过这个小故事，可以简单总结出哈希的两个性质：\n\n1. 防篡改，输入稍有改动，输出千差万别\n2. 输出结果不可逆，只知道结果不能反推出输入是什么\n\n#### 比特币使用的哈希算法\n\nSHA256（Security Hash Algorithm），是一种密码哈希函数（Cryptographic Hash Function）。\n\n$任意输入 ==> SHA256 ==> 256位哈希$\n\n在比特币中，利用了SHA256的三个性质\n- 不可逆（Hiding）\n- 抗哈希碰撞（Collision .istance）\n- 哈希值不可预测（Puzzle friendly）\n\n##### 不可逆（Hiding）\n\nSHA256的特性：\n1. 输入长度任意\n2. 输出长度固定，256bit\n\n比如\n\n$全世界的图书 ==> SHA256 ==> 256 位哈希$\n\n如果这个过程可逆的话，我们就发现了一种无敌的压缩算法，可以把全世界的图书压成 256 位，再进行存储。\n\n##### 抗哈希碰撞（Collision .istance）\n\n根据[抽屉原理](https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776)，输入空间无限，输出空间有限，理论上一定会存在碰撞。\n\n但是，从长期经验看，没有什么人为的、高效的方式制造碰撞。\n\n只能通过暴力遍历输入空间的方式来寻找碰撞\n\n\n##### 哈希值不可预测（Puzzle friendly）\n\nPuzzle Friendly，直译为谜题友好性，是指事先给定一个哈希串，比如 00000000feacb46d... ，前 8 位都是 0，让你解谜题找到输入是什么。\n\n由于 SHA256 没有直接办法或通过找到一定规律来猜出输入是什么，只能通过暴力遍历输入空间的方式来找到答案。（其实一点都不友好）\n\n比如你找到一个输入 a，输出的前 7 位都是 0，感觉再简单调整一下输入就能找到答案了，其实不是的，修改输入后可能得到的答案一个 0 都没有。也就是说你的每一次计算是无记忆性的（Memoryless），只能通过大量地尝试，不断的寻找答案。\n\n除此之外，找到答案后，其他人验证答案却很简单，只需要把你的答案再用哈希函数计算一次即可。（difficult to solve, but easy to verify）\n\n比特币**挖矿过程**充分利用了 Puzzle friendly，后面我们会详细说明。\n\n\n#### 数字签名（Digital Signature）\n\n了解数字签名之前，需要先对非对称加密有一定认识。\n\n##### 什么是非对称加密？\n\n![非对称加密](./asymmetric_encryption.png)\n\nAlice 想通过非对称加密的方式发送一条消息给 Bob，他要怎么做呢？\n\n1. Bob 需要先生成公钥私钥对（public key, private key）\n2. Bob 的公钥是对所有人公开的，所以 Alice 可以拿到 Bob's public key\n3. Alice 使用 Bob's public key 对 Message 加密，并将密文通过网络传输给 Bob\n4. Bob 接收到密文后，使用自己的私钥 Bob's private key 解密，得到了 Message\n5. 完成通信\n\n由于 Bob's private key 是保存在 Bob 手里的，只要私钥不泄露，就是安全的。\n\n##### 3.3.2、什么是数字签名？\n\n还是 Alice 想要给 Bob 发送一条消息，并采用非对称加密的方式，Alice 凭什么相信 Bob 的公钥就是 Bob 的呢？有没有可能被其他人调包了呢？这就需要 Alice 用到数字签名的技术，来验证 Bob 的身份是否真实\n\n![数字签名](./digital_signature.png)\n\n1. Bob 用私钥生成数字签名\n2. Alice 用 Bob 的公钥验证签名\n3. 如果验证通过，则证明公钥一定是 Bob 的，因为签名只能由 Bob 的私钥生成\n\n### 四、比特币是如何交易的？\n\n#### 4.1、区块链\n\n在比特币系统中，交易是存在区块里的，那么区块链到底是什么呢？\n\n![](./what_is_block_chain.png)\n\n- 一个区块是由 block header 和 block body 组成\n- block header 中会存储前一个区块头的哈希值\n- block body 中会存储具体的交易信息（Transaction 简写为 Tx)\n\n区块链其实不是区块组成的链表结构，而是通过 (key,value) 数据库实现的。在数据库中，key 是区块头的哈希值，value 是区块内容。\n\n\n#### 账户\n\n在比特币中，账户就是由本机生成的公私钥对\n- 公钥的哈希值用作转账地址，相当于银行卡号\n- 私钥相当于银行密码，需要自己妥善保管，一旦丢失是无法找回的\n\n#### 防止双花\n\n现实中，A -> B 100元人民币的过程实际是 A 的钱包减少 100元，B 的钱包增加 100元，天然能防止「双花」（除非你把花出去的钱偷回来再花一次）。\n\n但是，比特币中没有账户系统，不会帮你记录用户的账户中余额还有多少。\n那么，比特币是如何验证「双花」的呢？\n\n##### 回溯币源\n\n比特币的每笔交易由**未花费的输出（UTXO Unspenting Transaction Output），本次交易的输入**拼接而成。每笔交易会去验证 UTXO 是否能支付足量的币，具体可以看下面的例子。\n\n![](./btc_transaction.png)\n\n1. coinbase 称作「铸币」交易，是矿工挖出新区块获得的出块奖励，假设是 A 获得了出块奖励的 10 BTC\n2. A 转给了 B 5 BTC，同时转给了 C 5 BTC，这时系统会去验证 A 有没有能力支付 10 BTC，会向前回溯找到 A BTC 的来源，于是找到了铸币交易，发现有 10 BTC，交易合法\n3. 同理 C 在转给 E 7BTC 时，需要找到之前交易中得到的 5 + 2 BTC\n\n转账者除了要证明币源，还需要将交易用自己的私钥签名，用于身份验证。\n\n\n### 比特币挖矿\n\n#### 为什么要挖矿？\n\n1. **产生比特币**，只有挖出新的区块，才会产生新的比特币。中本聪规定，最初出块奖励为 50 BTC，每隔 4 年出块奖励减半，所以比特币总量大概为 2100 万个\n2. **打包交易**，通过挖出新区块，打包记录新产生的交易\n3. **达成共识**，通过工作量证明（Proof of Work）+ 奖励机制，让系统中的节点达成共识，向好的方向发展\n\n#### 挖矿的过程\n\n>比特币挖矿的过程和实际挖金矿的过程很像：\n>- 金子的总量是有限的，越挖会越少，比特币也是如此\n>- 挖金子需要付出科技成本和体力劳动后才能得到回报，比特币也是需要付出算力、电力成本，才能收获比特币\n\n下面我们来简单了解一下，比特币挖矿的过程是怎样的。\n\n##### 找到最长合法链\n\n在比特币中的矿工指的是系统中的全节点，除了挖矿，还要负责维护全量的区块数据\n\n诚实的矿工会按照最长合法链规则挖矿\n- **最长**，顾名思义，矿工只沿着系统中最长的链向后挖\n- **合法**，验证区块信息是否被篡改，区块中记录的所有的交易是否合法。一旦矿工识别当前链不合规，便会马上找到另外的最长合法链，继续挖矿\n\n##### 挖矿解谜\n\n简单说，挖矿解谜就是矿工通过暴力哈希运算，找到符合要求的随机数 nonce，满足下面的公式\n\n$H(header || nonce) <= target$\n\n- target 是一串 256 位的哈希（前 k 位都是 0）\n- k 越大，target 越小，挖矿难度越高。就像打靶子一样，k 越大，表示靶子越小，越难命中\n- 增加算力，会增加挖到矿的概率，但不代表当前区块一定会被算力高的矿工挖到\n\n 中本聪设计出块时间在10分钟左右，每两周调整一次挖矿难度。比如上两周平均出块时间为 7 分钟，则会增大难度，否则会降低难度。\n\n##### 广播\n\n解谜成功后，需要迅速把组装好的区块向相邻节点广播，让自己挖的区块在最长合法链中得到确认，拿到出块奖励和交易手续费。\n\n\n##### 6次交易确认机制\n\n![](./6_confirms.png)\n\n网络是不可靠的，在广播阶段很有可能出现延时。\n所以交易上链后，并不是马上就生效的，中本聪设计了一个区块上链后需要再等 6 个区块上链后才能被真正确认。\n\n为什么要这样做？\n1. 防止双花，假如甲、乙矿工同时挖到了新区块，并且广播了出去。其中甲记录 A 转给 B 10BTC，乙记录了 A 转给 C 10BTC，事实上 A 只有 10BTC，如果两个区块都被认可，那就出现了双花。\n2. 为什么是 6 次？中本聪认为，6 个区块大概要花费一个小时才能挖出来，想要再做一次分叉攻击篡改，是需要较大成本的。\n\n#### 51%算力攻击\n\n![](./51%_attack.png)\n\n假设有某个组织拥有了全世界 51% 的算力，并且一直在沿着自己的链挖矿，理论上某个时间点，这个组织所挖的链就会变成最长的，广播后，这条链就会成为最长合法链，那么以前的交易就会被这个组织替换。\n\n- 51% 攻击只能将合法的交易替换上链，但是无法偷其他用户的比特币，因为诚实的节点会验证交易的签名。\n- 51% 攻击是可以发动双花攻击的，由于算力强大，会导致 6 次确认机制失效。比如 A => B (10BTC) 已经得到确认，其中 A 是攻击者，交易是 A 的签名，发动 51% 攻击后，完全可以修改为 A => C (10BTC)，C 可以是攻击者的另一个账户。\n- 51% 只是一个象征性的数字，并不一定算力一定要达到 51 才能攻击，有研究小组表明只要拥有 30% 的全网算力，就足以发动 51% 攻击。（为什么只需要30%？个人猜测是，其他算力之间还存在竞争关系，而这30%是团结一致的）\n\n曾有矿池（GHash.IO）算力超过了 51%，一度引起比特币价值暴跌，之后很多矿工自觉退出了矿池，来保证系统的安全。\n\n![](./mining_healthy.png)\n\n比特币系统在「安全性」「高价值」「健康挖矿」三个方面已经形成闭环。\n算力越高，想发动 51% 攻击就越困难，系统就越安全，随之比特币价格就会越高。\n使得想要发动攻击的人即使发动了攻击也不一定能赚到什么，还不如用所有算力稳稳挖矿收益高。\n\n### 比特币的缺点\n\n1. 工作量证明机制造成算力、电力的浪费\n2. 出块时间限定平均10分钟左右，一笔交易需要大概需要1小时才能得被系统确认\n3. 比特币私钥丢失之后，是没办法找回的，账户中的比特币永远都取不出来了\n4. 转账写错地址，无法回滚\n\n\n### 参考\n\n- 《零基础学区块链》\n- [北京大学肖臻老师的公开课](http://zhenxiao.com/blockchain/)\n- [比特币白皮书](https://btcpapers.com/)\n- 《图说区块链》\n- 《图解密码技术》\n","source":"_posts/bc-bitcoin-concept.md","raw":"---\ntitle: 初识比特币\ndate: 2022-01-23 01:01:56\ncategories: BlockChain\ntoc: true\n---\n\n![](./btc_cover.png)\n\n### 什么是比特币？\n\n> A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. \n>\n>一个纯正的点对点去中心化的加密数字货币，应能够通过在线支付将币从一方直接发送到另一方，而无需通过任何中心金融机构。\n\n比特币是一种加密货币（crypto-currency），实现自一个自称中本聪（Satoshi Nakamoto）的不明身份的人所发表的一篇论文（[比特币白皮书](https://btcpapers.com/)）\n\n与其说比特币是一种加密货币，不如说比特币是一种基于 P2P 网络的支付结算系统，这样更易于大家理解其本质。\n\n### 为什么要发明比特币？\n\n#### 中心化，基于信任模型\n\n> 酒花 App 平台买了两瓶精酿啤酒\n> 一个自称三方供应商的人加我微信，告知我其中一瓶酒没货了，可以加钱换其他的酒\n> 虽然这个人微信朋友圈都是精酿啤酒相关的内容，且明确知道我买的哪个酒没货了\n> 但是，我内心还是不信任这个人，更信任平台，于是我还是在平台换了一瓶酒\n\n平台就真的值得信任么？\n假如我下单的时候正好赶上平台服务器宕机，扣款成功了，但没收到货。由于平台系统做的不好，再也找不到那笔订单，不能证明我付过钱，也不能给我发货。\n这笔交易就没有人能说的清楚了，信任也就不存在了。\n\n**比特币要去解决信任问题**\n\n>What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. \n>\n>我们真正需要的是一种基于加密算法密码学原理而非基于信任的数字货币支付系统，不需要可信任第三方参与的情况下，允许双方直接进行支付交易\n\n![](./decentralized.png)\n\n\n#### 双花攻击（Double Spending Attack)\n\n「双花」即同一笔钱花了两次或多次。\n\n![](./double_spending.png)\n\n假设央行发行了一款数字货币，货币在软件中其实就是文件，完全可以复制。\n假如 A 在转给 B 100 元后，又复制了同一笔钱转给了 C，就是所谓的「双花」，双花攻击只通过验证数字货币的签名是不够的，还需要使用额外的手段。\n\n\n**比特币要去解决双花问题**\n\n> We propose a solution to the double-spending problem using a peer-to-peer network\n> \n>我们将在本文提出一种新方案，使用点对点去中心化网络去解决这个双花问题\n\n在**比特币交易**小节中，会详细解释比特币是如何解决双花问题的。\n\n### 比特币中的密码学\n\n#### 哈希算法（Hash Algorithm)\n\n哈希算法是用来做什么的呢？我们先来看一个小故事。\n\n**雍正到底是不是篡位登基的？**\n\n![篡改](./tamper.png)\n\n一直有一个传说称雍正不是康熙真正传位的皇帝，而是有人偷偷修改了遗诏，篡位登基的。  \n\n**假如康熙知道哈希函数**  \n\n![利用哈希防篡改](./anti_tamper.png)\n\n如果没有哈希函数，在康熙皇帝驾崩后，遗诏是死无对证，只能遗诏写什么，大臣就做什么。\n\n但有了哈希函数后就变得不一样了，康熙可以在活着的时候就可以提前写好遗诏，并用哈希函数计算出一个哈希串，交予大臣们。\n大臣们看到哈希串也不能猜出遗诏的内容到底是什么，只能等到遗诏公布的那天，再去计算一次哈希值，看与当初皇帝给的哈希串是否一致，来判断遗诏是否被人篡改了。\n如果修改了，就不会遵诏行事。\n\n通过这个小故事，可以简单总结出哈希的两个性质：\n\n1. 防篡改，输入稍有改动，输出千差万别\n2. 输出结果不可逆，只知道结果不能反推出输入是什么\n\n#### 比特币使用的哈希算法\n\nSHA256（Security Hash Algorithm），是一种密码哈希函数（Cryptographic Hash Function）。\n\n$任意输入 ==> SHA256 ==> 256位哈希$\n\n在比特币中，利用了SHA256的三个性质\n- 不可逆（Hiding）\n- 抗哈希碰撞（Collision .istance）\n- 哈希值不可预测（Puzzle friendly）\n\n##### 不可逆（Hiding）\n\nSHA256的特性：\n1. 输入长度任意\n2. 输出长度固定，256bit\n\n比如\n\n$全世界的图书 ==> SHA256 ==> 256 位哈希$\n\n如果这个过程可逆的话，我们就发现了一种无敌的压缩算法，可以把全世界的图书压成 256 位，再进行存储。\n\n##### 抗哈希碰撞（Collision .istance）\n\n根据[抽屉原理](https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776)，输入空间无限，输出空间有限，理论上一定会存在碰撞。\n\n但是，从长期经验看，没有什么人为的、高效的方式制造碰撞。\n\n只能通过暴力遍历输入空间的方式来寻找碰撞\n\n\n##### 哈希值不可预测（Puzzle friendly）\n\nPuzzle Friendly，直译为谜题友好性，是指事先给定一个哈希串，比如 00000000feacb46d... ，前 8 位都是 0，让你解谜题找到输入是什么。\n\n由于 SHA256 没有直接办法或通过找到一定规律来猜出输入是什么，只能通过暴力遍历输入空间的方式来找到答案。（其实一点都不友好）\n\n比如你找到一个输入 a，输出的前 7 位都是 0，感觉再简单调整一下输入就能找到答案了，其实不是的，修改输入后可能得到的答案一个 0 都没有。也就是说你的每一次计算是无记忆性的（Memoryless），只能通过大量地尝试，不断的寻找答案。\n\n除此之外，找到答案后，其他人验证答案却很简单，只需要把你的答案再用哈希函数计算一次即可。（difficult to solve, but easy to verify）\n\n比特币**挖矿过程**充分利用了 Puzzle friendly，后面我们会详细说明。\n\n\n#### 数字签名（Digital Signature）\n\n了解数字签名之前，需要先对非对称加密有一定认识。\n\n##### 什么是非对称加密？\n\n![非对称加密](./asymmetric_encryption.png)\n\nAlice 想通过非对称加密的方式发送一条消息给 Bob，他要怎么做呢？\n\n1. Bob 需要先生成公钥私钥对（public key, private key）\n2. Bob 的公钥是对所有人公开的，所以 Alice 可以拿到 Bob's public key\n3. Alice 使用 Bob's public key 对 Message 加密，并将密文通过网络传输给 Bob\n4. Bob 接收到密文后，使用自己的私钥 Bob's private key 解密，得到了 Message\n5. 完成通信\n\n由于 Bob's private key 是保存在 Bob 手里的，只要私钥不泄露，就是安全的。\n\n##### 3.3.2、什么是数字签名？\n\n还是 Alice 想要给 Bob 发送一条消息，并采用非对称加密的方式，Alice 凭什么相信 Bob 的公钥就是 Bob 的呢？有没有可能被其他人调包了呢？这就需要 Alice 用到数字签名的技术，来验证 Bob 的身份是否真实\n\n![数字签名](./digital_signature.png)\n\n1. Bob 用私钥生成数字签名\n2. Alice 用 Bob 的公钥验证签名\n3. 如果验证通过，则证明公钥一定是 Bob 的，因为签名只能由 Bob 的私钥生成\n\n### 四、比特币是如何交易的？\n\n#### 4.1、区块链\n\n在比特币系统中，交易是存在区块里的，那么区块链到底是什么呢？\n\n![](./what_is_block_chain.png)\n\n- 一个区块是由 block header 和 block body 组成\n- block header 中会存储前一个区块头的哈希值\n- block body 中会存储具体的交易信息（Transaction 简写为 Tx)\n\n区块链其实不是区块组成的链表结构，而是通过 (key,value) 数据库实现的。在数据库中，key 是区块头的哈希值，value 是区块内容。\n\n\n#### 账户\n\n在比特币中，账户就是由本机生成的公私钥对\n- 公钥的哈希值用作转账地址，相当于银行卡号\n- 私钥相当于银行密码，需要自己妥善保管，一旦丢失是无法找回的\n\n#### 防止双花\n\n现实中，A -> B 100元人民币的过程实际是 A 的钱包减少 100元，B 的钱包增加 100元，天然能防止「双花」（除非你把花出去的钱偷回来再花一次）。\n\n但是，比特币中没有账户系统，不会帮你记录用户的账户中余额还有多少。\n那么，比特币是如何验证「双花」的呢？\n\n##### 回溯币源\n\n比特币的每笔交易由**未花费的输出（UTXO Unspenting Transaction Output），本次交易的输入**拼接而成。每笔交易会去验证 UTXO 是否能支付足量的币，具体可以看下面的例子。\n\n![](./btc_transaction.png)\n\n1. coinbase 称作「铸币」交易，是矿工挖出新区块获得的出块奖励，假设是 A 获得了出块奖励的 10 BTC\n2. A 转给了 B 5 BTC，同时转给了 C 5 BTC，这时系统会去验证 A 有没有能力支付 10 BTC，会向前回溯找到 A BTC 的来源，于是找到了铸币交易，发现有 10 BTC，交易合法\n3. 同理 C 在转给 E 7BTC 时，需要找到之前交易中得到的 5 + 2 BTC\n\n转账者除了要证明币源，还需要将交易用自己的私钥签名，用于身份验证。\n\n\n### 比特币挖矿\n\n#### 为什么要挖矿？\n\n1. **产生比特币**，只有挖出新的区块，才会产生新的比特币。中本聪规定，最初出块奖励为 50 BTC，每隔 4 年出块奖励减半，所以比特币总量大概为 2100 万个\n2. **打包交易**，通过挖出新区块，打包记录新产生的交易\n3. **达成共识**，通过工作量证明（Proof of Work）+ 奖励机制，让系统中的节点达成共识，向好的方向发展\n\n#### 挖矿的过程\n\n>比特币挖矿的过程和实际挖金矿的过程很像：\n>- 金子的总量是有限的，越挖会越少，比特币也是如此\n>- 挖金子需要付出科技成本和体力劳动后才能得到回报，比特币也是需要付出算力、电力成本，才能收获比特币\n\n下面我们来简单了解一下，比特币挖矿的过程是怎样的。\n\n##### 找到最长合法链\n\n在比特币中的矿工指的是系统中的全节点，除了挖矿，还要负责维护全量的区块数据\n\n诚实的矿工会按照最长合法链规则挖矿\n- **最长**，顾名思义，矿工只沿着系统中最长的链向后挖\n- **合法**，验证区块信息是否被篡改，区块中记录的所有的交易是否合法。一旦矿工识别当前链不合规，便会马上找到另外的最长合法链，继续挖矿\n\n##### 挖矿解谜\n\n简单说，挖矿解谜就是矿工通过暴力哈希运算，找到符合要求的随机数 nonce，满足下面的公式\n\n$H(header || nonce) <= target$\n\n- target 是一串 256 位的哈希（前 k 位都是 0）\n- k 越大，target 越小，挖矿难度越高。就像打靶子一样，k 越大，表示靶子越小，越难命中\n- 增加算力，会增加挖到矿的概率，但不代表当前区块一定会被算力高的矿工挖到\n\n 中本聪设计出块时间在10分钟左右，每两周调整一次挖矿难度。比如上两周平均出块时间为 7 分钟，则会增大难度，否则会降低难度。\n\n##### 广播\n\n解谜成功后，需要迅速把组装好的区块向相邻节点广播，让自己挖的区块在最长合法链中得到确认，拿到出块奖励和交易手续费。\n\n\n##### 6次交易确认机制\n\n![](./6_confirms.png)\n\n网络是不可靠的，在广播阶段很有可能出现延时。\n所以交易上链后，并不是马上就生效的，中本聪设计了一个区块上链后需要再等 6 个区块上链后才能被真正确认。\n\n为什么要这样做？\n1. 防止双花，假如甲、乙矿工同时挖到了新区块，并且广播了出去。其中甲记录 A 转给 B 10BTC，乙记录了 A 转给 C 10BTC，事实上 A 只有 10BTC，如果两个区块都被认可，那就出现了双花。\n2. 为什么是 6 次？中本聪认为，6 个区块大概要花费一个小时才能挖出来，想要再做一次分叉攻击篡改，是需要较大成本的。\n\n#### 51%算力攻击\n\n![](./51%_attack.png)\n\n假设有某个组织拥有了全世界 51% 的算力，并且一直在沿着自己的链挖矿，理论上某个时间点，这个组织所挖的链就会变成最长的，广播后，这条链就会成为最长合法链，那么以前的交易就会被这个组织替换。\n\n- 51% 攻击只能将合法的交易替换上链，但是无法偷其他用户的比特币，因为诚实的节点会验证交易的签名。\n- 51% 攻击是可以发动双花攻击的，由于算力强大，会导致 6 次确认机制失效。比如 A => B (10BTC) 已经得到确认，其中 A 是攻击者，交易是 A 的签名，发动 51% 攻击后，完全可以修改为 A => C (10BTC)，C 可以是攻击者的另一个账户。\n- 51% 只是一个象征性的数字，并不一定算力一定要达到 51 才能攻击，有研究小组表明只要拥有 30% 的全网算力，就足以发动 51% 攻击。（为什么只需要30%？个人猜测是，其他算力之间还存在竞争关系，而这30%是团结一致的）\n\n曾有矿池（GHash.IO）算力超过了 51%，一度引起比特币价值暴跌，之后很多矿工自觉退出了矿池，来保证系统的安全。\n\n![](./mining_healthy.png)\n\n比特币系统在「安全性」「高价值」「健康挖矿」三个方面已经形成闭环。\n算力越高，想发动 51% 攻击就越困难，系统就越安全，随之比特币价格就会越高。\n使得想要发动攻击的人即使发动了攻击也不一定能赚到什么，还不如用所有算力稳稳挖矿收益高。\n\n### 比特币的缺点\n\n1. 工作量证明机制造成算力、电力的浪费\n2. 出块时间限定平均10分钟左右，一笔交易需要大概需要1小时才能得被系统确认\n3. 比特币私钥丢失之后，是没办法找回的，账户中的比特币永远都取不出来了\n4. 转账写错地址，无法回滚\n\n\n### 参考\n\n- 《零基础学区块链》\n- [北京大学肖臻老师的公开课](http://zhenxiao.com/blockchain/)\n- [比特币白皮书](https://btcpapers.com/)\n- 《图说区块链》\n- 《图解密码技术》\n","slug":"bc-bitcoin-concept","published":1,"updated":"2022-01-22T17:06:12.356Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2pueu410003j6s66ifl793m","content":"<img src=\"/2022/01/23/bc-bitcoin-concept/btc_cover.png\" class=\"\">\n<h3 id=\"什么是比特币？\"><a href=\"#什么是比特币？\" class=\"headerlink\" title=\"什么是比特币？\"></a>什么是比特币？</h3><blockquote>\n<p>A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. </p>\n<p>一个纯正的点对点去中心化的加密数字货币，应能够通过在线支付将币从一方直接发送到另一方，而无需通过任何中心金融机构。</p>\n</blockquote>\n<p>比特币是一种加密货币（crypto-currency），实现自一个自称中本聪（Satoshi Nakamoto）的不明身份的人所发表的一篇论文（<a href=\"https://btcpapers.com/\">比特币白皮书</a>）</p>\n<p>与其说比特币是一种加密货币，不如说比特币是一种基于 P2P 网络的支付结算系统，这样更易于大家理解其本质。</p>\n<h3 id=\"为什么要发明比特币？\"><a href=\"#为什么要发明比特币？\" class=\"headerlink\" title=\"为什么要发明比特币？\"></a>为什么要发明比特币？</h3><h4 id=\"中心化，基于信任模型\"><a href=\"#中心化，基于信任模型\" class=\"headerlink\" title=\"中心化，基于信任模型\"></a>中心化，基于信任模型</h4><blockquote>\n<p>酒花 App 平台买了两瓶精酿啤酒<br>一个自称三方供应商的人加我微信，告知我其中一瓶酒没货了，可以加钱换其他的酒<br>虽然这个人微信朋友圈都是精酿啤酒相关的内容，且明确知道我买的哪个酒没货了<br>但是，我内心还是不信任这个人，更信任平台，于是我还是在平台换了一瓶酒</p>\n</blockquote>\n<p>平台就真的值得信任么？<br>假如我下单的时候正好赶上平台服务器宕机，扣款成功了，但没收到货。由于平台系统做的不好，再也找不到那笔订单，不能证明我付过钱，也不能给我发货。<br>这笔交易就没有人能说的清楚了，信任也就不存在了。</p>\n<p><strong>比特币要去解决信任问题</strong></p>\n<blockquote>\n<p>What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. </p>\n<p>我们真正需要的是一种基于加密算法密码学原理而非基于信任的数字货币支付系统，不需要可信任第三方参与的情况下，允许双方直接进行支付交易</p>\n</blockquote>\n<img src=\"/2022/01/23/bc-bitcoin-concept/decentralized.png\" class=\"\">\n<h4 id=\"双花攻击（Double-Spending-Attack\"><a href=\"#双花攻击（Double-Spending-Attack\" class=\"headerlink\" title=\"双花攻击（Double Spending Attack)\"></a>双花攻击（Double Spending Attack)</h4><p>「双花」即同一笔钱花了两次或多次。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/double_spending.png\" class=\"\">\n<p>假设央行发行了一款数字货币，货币在软件中其实就是文件，完全可以复制。<br>假如 A 在转给 B 100 元后，又复制了同一笔钱转给了 C，就是所谓的「双花」，双花攻击只通过验证数字货币的签名是不够的，还需要使用额外的手段。</p>\n<p><strong>比特币要去解决双花问题</strong></p>\n<blockquote>\n<p>We propose a solution to the double-spending problem using a peer-to-peer network</p>\n<p>我们将在本文提出一种新方案，使用点对点去中心化网络去解决这个双花问题</p>\n</blockquote>\n<p>在<strong>比特币交易</strong>小节中，会详细解释比特币是如何解决双花问题的。</p>\n<h3 id=\"比特币中的密码学\"><a href=\"#比特币中的密码学\" class=\"headerlink\" title=\"比特币中的密码学\"></a>比特币中的密码学</h3><h4 id=\"哈希算法（Hash-Algorithm\"><a href=\"#哈希算法（Hash-Algorithm\" class=\"headerlink\" title=\"哈希算法（Hash Algorithm)\"></a>哈希算法（Hash Algorithm)</h4><p>哈希算法是用来做什么的呢？我们先来看一个小故事。</p>\n<p><strong>雍正到底是不是篡位登基的？</strong></p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/tamper.png\" class=\"\" title=\"篡改\">\n<p>一直有一个传说称雍正不是康熙真正传位的皇帝，而是有人偷偷修改了遗诏，篡位登基的。  </p>\n<p><strong>假如康熙知道哈希函数</strong>  </p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/anti_tamper.png\" class=\"\" title=\"利用哈希防篡改\">\n<p>如果没有哈希函数，在康熙皇帝驾崩后，遗诏是死无对证，只能遗诏写什么，大臣就做什么。</p>\n<p>但有了哈希函数后就变得不一样了，康熙可以在活着的时候就可以提前写好遗诏，并用哈希函数计算出一个哈希串，交予大臣们。<br>大臣们看到哈希串也不能猜出遗诏的内容到底是什么，只能等到遗诏公布的那天，再去计算一次哈希值，看与当初皇帝给的哈希串是否一致，来判断遗诏是否被人篡改了。<br>如果修改了，就不会遵诏行事。</p>\n<p>通过这个小故事，可以简单总结出哈希的两个性质：</p>\n<ol>\n<li>防篡改，输入稍有改动，输出千差万别</li>\n<li>输出结果不可逆，只知道结果不能反推出输入是什么</li>\n</ol>\n<h4 id=\"比特币使用的哈希算法\"><a href=\"#比特币使用的哈希算法\" class=\"headerlink\" title=\"比特币使用的哈希算法\"></a>比特币使用的哈希算法</h4><p>SHA256（Security Hash Algorithm），是一种密码哈希函数（Cryptographic Hash Function）。</p>\n<p>$任意输入 ==&gt; SHA256 ==&gt; 256位哈希$</p>\n<p>在比特币中，利用了SHA256的三个性质</p>\n<ul>\n<li>不可逆（Hiding）</li>\n<li>抗哈希碰撞（Collision .istance）</li>\n<li>哈希值不可预测（Puzzle friendly）</li>\n</ul>\n<h5 id=\"不可逆（Hiding）\"><a href=\"#不可逆（Hiding）\" class=\"headerlink\" title=\"不可逆（Hiding）\"></a>不可逆（Hiding）</h5><p>SHA256的特性：</p>\n<ol>\n<li>输入长度任意</li>\n<li>输出长度固定，256bit</li>\n</ol>\n<p>比如</p>\n<p>$全世界的图书 ==&gt; SHA256 ==&gt; 256 位哈希$</p>\n<p>如果这个过程可逆的话，我们就发现了一种无敌的压缩算法，可以把全世界的图书压成 256 位，再进行存储。</p>\n<h5 id=\"抗哈希碰撞（Collision-istance）\"><a href=\"#抗哈希碰撞（Collision-istance）\" class=\"headerlink\" title=\"抗哈希碰撞（Collision .istance）\"></a>抗哈希碰撞（Collision .istance）</h5><p>根据<a href=\"https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776\">抽屉原理</a>，输入空间无限，输出空间有限，理论上一定会存在碰撞。</p>\n<p>但是，从长期经验看，没有什么人为的、高效的方式制造碰撞。</p>\n<p>只能通过暴力遍历输入空间的方式来寻找碰撞</p>\n<h5 id=\"哈希值不可预测（Puzzle-friendly）\"><a href=\"#哈希值不可预测（Puzzle-friendly）\" class=\"headerlink\" title=\"哈希值不可预测（Puzzle friendly）\"></a>哈希值不可预测（Puzzle friendly）</h5><p>Puzzle Friendly，直译为谜题友好性，是指事先给定一个哈希串，比如 00000000feacb46d… ，前 8 位都是 0，让你解谜题找到输入是什么。</p>\n<p>由于 SHA256 没有直接办法或通过找到一定规律来猜出输入是什么，只能通过暴力遍历输入空间的方式来找到答案。（其实一点都不友好）</p>\n<p>比如你找到一个输入 a，输出的前 7 位都是 0，感觉再简单调整一下输入就能找到答案了，其实不是的，修改输入后可能得到的答案一个 0 都没有。也就是说你的每一次计算是无记忆性的（Memoryless），只能通过大量地尝试，不断的寻找答案。</p>\n<p>除此之外，找到答案后，其他人验证答案却很简单，只需要把你的答案再用哈希函数计算一次即可。（difficult to solve, but easy to verify）</p>\n<p>比特币<strong>挖矿过程</strong>充分利用了 Puzzle friendly，后面我们会详细说明。</p>\n<h4 id=\"数字签名（Digital-Signature）\"><a href=\"#数字签名（Digital-Signature）\" class=\"headerlink\" title=\"数字签名（Digital Signature）\"></a>数字签名（Digital Signature）</h4><p>了解数字签名之前，需要先对非对称加密有一定认识。</p>\n<h5 id=\"什么是非对称加密？\"><a href=\"#什么是非对称加密？\" class=\"headerlink\" title=\"什么是非对称加密？\"></a>什么是非对称加密？</h5><img src=\"/2022/01/23/bc-bitcoin-concept/asymmetric_encryption.png\" class=\"\" title=\"非对称加密\">\n<p>Alice 想通过非对称加密的方式发送一条消息给 Bob，他要怎么做呢？</p>\n<ol>\n<li>Bob 需要先生成公钥私钥对（public key, private key）</li>\n<li>Bob 的公钥是对所有人公开的，所以 Alice 可以拿到 Bob’s public key</li>\n<li>Alice 使用 Bob’s public key 对 Message 加密，并将密文通过网络传输给 Bob</li>\n<li>Bob 接收到密文后，使用自己的私钥 Bob’s private key 解密，得到了 Message</li>\n<li>完成通信</li>\n</ol>\n<p>由于 Bob’s private key 是保存在 Bob 手里的，只要私钥不泄露，就是安全的。</p>\n<h5 id=\"3-3-2、什么是数字签名？\"><a href=\"#3-3-2、什么是数字签名？\" class=\"headerlink\" title=\"3.3.2、什么是数字签名？\"></a>3.3.2、什么是数字签名？</h5><p>还是 Alice 想要给 Bob 发送一条消息，并采用非对称加密的方式，Alice 凭什么相信 Bob 的公钥就是 Bob 的呢？有没有可能被其他人调包了呢？这就需要 Alice 用到数字签名的技术，来验证 Bob 的身份是否真实</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/digital_signature.png\" class=\"\" title=\"数字签名\">\n<ol>\n<li>Bob 用私钥生成数字签名</li>\n<li>Alice 用 Bob 的公钥验证签名</li>\n<li>如果验证通过，则证明公钥一定是 Bob 的，因为签名只能由 Bob 的私钥生成</li>\n</ol>\n<h3 id=\"四、比特币是如何交易的？\"><a href=\"#四、比特币是如何交易的？\" class=\"headerlink\" title=\"四、比特币是如何交易的？\"></a>四、比特币是如何交易的？</h3><h4 id=\"4-1、区块链\"><a href=\"#4-1、区块链\" class=\"headerlink\" title=\"4.1、区块链\"></a>4.1、区块链</h4><p>在比特币系统中，交易是存在区块里的，那么区块链到底是什么呢？</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/what_is_block_chain.png\" class=\"\">\n<ul>\n<li>一个区块是由 block header 和 block body 组成</li>\n<li>block header 中会存储前一个区块头的哈希值</li>\n<li>block body 中会存储具体的交易信息（Transaction 简写为 Tx)</li>\n</ul>\n<p>区块链其实不是区块组成的链表结构，而是通过 (key,value) 数据库实现的。在数据库中，key 是区块头的哈希值，value 是区块内容。</p>\n<h4 id=\"账户\"><a href=\"#账户\" class=\"headerlink\" title=\"账户\"></a>账户</h4><p>在比特币中，账户就是由本机生成的公私钥对</p>\n<ul>\n<li>公钥的哈希值用作转账地址，相当于银行卡号</li>\n<li>私钥相当于银行密码，需要自己妥善保管，一旦丢失是无法找回的</li>\n</ul>\n<h4 id=\"防止双花\"><a href=\"#防止双花\" class=\"headerlink\" title=\"防止双花\"></a>防止双花</h4><p>现实中，A -&gt; B 100元人民币的过程实际是 A 的钱包减少 100元，B 的钱包增加 100元，天然能防止「双花」（除非你把花出去的钱偷回来再花一次）。</p>\n<p>但是，比特币中没有账户系统，不会帮你记录用户的账户中余额还有多少。<br>那么，比特币是如何验证「双花」的呢？</p>\n<h5 id=\"回溯币源\"><a href=\"#回溯币源\" class=\"headerlink\" title=\"回溯币源\"></a>回溯币源</h5><p>比特币的每笔交易由<strong>未花费的输出（UTXO Unspenting Transaction Output），本次交易的输入</strong>拼接而成。每笔交易会去验证 UTXO 是否能支付足量的币，具体可以看下面的例子。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/btc_transaction.png\" class=\"\">\n<ol>\n<li>coinbase 称作「铸币」交易，是矿工挖出新区块获得的出块奖励，假设是 A 获得了出块奖励的 10 BTC</li>\n<li>A 转给了 B 5 BTC，同时转给了 C 5 BTC，这时系统会去验证 A 有没有能力支付 10 BTC，会向前回溯找到 A BTC 的来源，于是找到了铸币交易，发现有 10 BTC，交易合法</li>\n<li>同理 C 在转给 E 7BTC 时，需要找到之前交易中得到的 5 + 2 BTC</li>\n</ol>\n<p>转账者除了要证明币源，还需要将交易用自己的私钥签名，用于身份验证。</p>\n<h3 id=\"比特币挖矿\"><a href=\"#比特币挖矿\" class=\"headerlink\" title=\"比特币挖矿\"></a>比特币挖矿</h3><h4 id=\"为什么要挖矿？\"><a href=\"#为什么要挖矿？\" class=\"headerlink\" title=\"为什么要挖矿？\"></a>为什么要挖矿？</h4><ol>\n<li><strong>产生比特币</strong>，只有挖出新的区块，才会产生新的比特币。中本聪规定，最初出块奖励为 50 BTC，每隔 4 年出块奖励减半，所以比特币总量大概为 2100 万个</li>\n<li><strong>打包交易</strong>，通过挖出新区块，打包记录新产生的交易</li>\n<li><strong>达成共识</strong>，通过工作量证明（Proof of Work）+ 奖励机制，让系统中的节点达成共识，向好的方向发展</li>\n</ol>\n<h4 id=\"挖矿的过程\"><a href=\"#挖矿的过程\" class=\"headerlink\" title=\"挖矿的过程\"></a>挖矿的过程</h4><blockquote>\n<p>比特币挖矿的过程和实际挖金矿的过程很像：</p>\n<ul>\n<li>金子的总量是有限的，越挖会越少，比特币也是如此</li>\n<li>挖金子需要付出科技成本和体力劳动后才能得到回报，比特币也是需要付出算力、电力成本，才能收获比特币</li>\n</ul>\n</blockquote>\n<p>下面我们来简单了解一下，比特币挖矿的过程是怎样的。</p>\n<h5 id=\"找到最长合法链\"><a href=\"#找到最长合法链\" class=\"headerlink\" title=\"找到最长合法链\"></a>找到最长合法链</h5><p>在比特币中的矿工指的是系统中的全节点，除了挖矿，还要负责维护全量的区块数据</p>\n<p>诚实的矿工会按照最长合法链规则挖矿</p>\n<ul>\n<li><strong>最长</strong>，顾名思义，矿工只沿着系统中最长的链向后挖</li>\n<li><strong>合法</strong>，验证区块信息是否被篡改，区块中记录的所有的交易是否合法。一旦矿工识别当前链不合规，便会马上找到另外的最长合法链，继续挖矿</li>\n</ul>\n<h5 id=\"挖矿解谜\"><a href=\"#挖矿解谜\" class=\"headerlink\" title=\"挖矿解谜\"></a>挖矿解谜</h5><p>简单说，挖矿解谜就是矿工通过暴力哈希运算，找到符合要求的随机数 nonce，满足下面的公式</p>\n<p>$H(header || nonce) &lt;= target$</p>\n<ul>\n<li>target 是一串 256 位的哈希（前 k 位都是 0）</li>\n<li>k 越大，target 越小，挖矿难度越高。就像打靶子一样，k 越大，表示靶子越小，越难命中</li>\n<li><p>增加算力，会增加挖到矿的概率，但不代表当前区块一定会被算力高的矿工挖到</p>\n<p>中本聪设计出块时间在10分钟左右，每两周调整一次挖矿难度。比如上两周平均出块时间为 7 分钟，则会增大难度，否则会降低难度。</p>\n</li>\n</ul>\n<h5 id=\"广播\"><a href=\"#广播\" class=\"headerlink\" title=\"广播\"></a>广播</h5><p>解谜成功后，需要迅速把组装好的区块向相邻节点广播，让自己挖的区块在最长合法链中得到确认，拿到出块奖励和交易手续费。</p>\n<h5 id=\"6次交易确认机制\"><a href=\"#6次交易确认机制\" class=\"headerlink\" title=\"6次交易确认机制\"></a>6次交易确认机制</h5><img src=\"/2022/01/23/bc-bitcoin-concept/6_confirms.png\" class=\"\">\n<p>网络是不可靠的，在广播阶段很有可能出现延时。<br>所以交易上链后，并不是马上就生效的，中本聪设计了一个区块上链后需要再等 6 个区块上链后才能被真正确认。</p>\n<p>为什么要这样做？</p>\n<ol>\n<li>防止双花，假如甲、乙矿工同时挖到了新区块，并且广播了出去。其中甲记录 A 转给 B 10BTC，乙记录了 A 转给 C 10BTC，事实上 A 只有 10BTC，如果两个区块都被认可，那就出现了双花。</li>\n<li>为什么是 6 次？中本聪认为，6 个区块大概要花费一个小时才能挖出来，想要再做一次分叉攻击篡改，是需要较大成本的。</li>\n</ol>\n<h4 id=\"51-算力攻击\"><a href=\"#51-算力攻击\" class=\"headerlink\" title=\"51%算力攻击\"></a>51%算力攻击</h4><img src=\"/2022/01/23/bc-bitcoin-concept/51%25_attack.png\" class=\"\">\n<p>假设有某个组织拥有了全世界 51% 的算力，并且一直在沿着自己的链挖矿，理论上某个时间点，这个组织所挖的链就会变成最长的，广播后，这条链就会成为最长合法链，那么以前的交易就会被这个组织替换。</p>\n<ul>\n<li>51% 攻击只能将合法的交易替换上链，但是无法偷其他用户的比特币，因为诚实的节点会验证交易的签名。</li>\n<li>51% 攻击是可以发动双花攻击的，由于算力强大，会导致 6 次确认机制失效。比如 A =&gt; B (10BTC) 已经得到确认，其中 A 是攻击者，交易是 A 的签名，发动 51% 攻击后，完全可以修改为 A =&gt; C (10BTC)，C 可以是攻击者的另一个账户。</li>\n<li>51% 只是一个象征性的数字，并不一定算力一定要达到 51 才能攻击，有研究小组表明只要拥有 30% 的全网算力，就足以发动 51% 攻击。（为什么只需要30%？个人猜测是，其他算力之间还存在竞争关系，而这30%是团结一致的）</li>\n</ul>\n<p>曾有矿池（GHash.IO）算力超过了 51%，一度引起比特币价值暴跌，之后很多矿工自觉退出了矿池，来保证系统的安全。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/mining_healthy.png\" class=\"\">\n<p>比特币系统在「安全性」「高价值」「健康挖矿」三个方面已经形成闭环。<br>算力越高，想发动 51% 攻击就越困难，系统就越安全，随之比特币价格就会越高。<br>使得想要发动攻击的人即使发动了攻击也不一定能赚到什么，还不如用所有算力稳稳挖矿收益高。</p>\n<h3 id=\"比特币的缺点\"><a href=\"#比特币的缺点\" class=\"headerlink\" title=\"比特币的缺点\"></a>比特币的缺点</h3><ol>\n<li>工作量证明机制造成算力、电力的浪费</li>\n<li>出块时间限定平均10分钟左右，一笔交易需要大概需要1小时才能得被系统确认</li>\n<li>比特币私钥丢失之后，是没办法找回的，账户中的比特币永远都取不出来了</li>\n<li>转账写错地址，无法回滚</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li>《零基础学区块链》</li>\n<li><a href=\"http://zhenxiao.com/blockchain/\">北京大学肖臻老师的公开课</a></li>\n<li><a href=\"https://btcpapers.com/\">比特币白皮书</a></li>\n<li>《图说区块链》</li>\n<li>《图解密码技术》</li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<img src=\"/2022/01/23/bc-bitcoin-concept/btc_cover.png\" class=\"\">\n<h3 id=\"什么是比特币？\"><a href=\"#什么是比特币？\" class=\"headerlink\" title=\"什么是比特币？\"></a>什么是比特币？</h3><blockquote>\n<p>A purely peer-to-peer version of electronic cash would allow online payments to be sent directly from one party to another without going through a financial institution. </p>\n<p>一个纯正的点对点去中心化的加密数字货币，应能够通过在线支付将币从一方直接发送到另一方，而无需通过任何中心金融机构。</p>\n</blockquote>\n<p>比特币是一种加密货币（crypto-currency），实现自一个自称中本聪（Satoshi Nakamoto）的不明身份的人所发表的一篇论文（<a href=\"https://btcpapers.com/\">比特币白皮书</a>）</p>\n<p>与其说比特币是一种加密货币，不如说比特币是一种基于 P2P 网络的支付结算系统，这样更易于大家理解其本质。</p>\n<h3 id=\"为什么要发明比特币？\"><a href=\"#为什么要发明比特币？\" class=\"headerlink\" title=\"为什么要发明比特币？\"></a>为什么要发明比特币？</h3><h4 id=\"中心化，基于信任模型\"><a href=\"#中心化，基于信任模型\" class=\"headerlink\" title=\"中心化，基于信任模型\"></a>中心化，基于信任模型</h4><blockquote>\n<p>酒花 App 平台买了两瓶精酿啤酒<br>一个自称三方供应商的人加我微信，告知我其中一瓶酒没货了，可以加钱换其他的酒<br>虽然这个人微信朋友圈都是精酿啤酒相关的内容，且明确知道我买的哪个酒没货了<br>但是，我内心还是不信任这个人，更信任平台，于是我还是在平台换了一瓶酒</p>\n</blockquote>\n<p>平台就真的值得信任么？<br>假如我下单的时候正好赶上平台服务器宕机，扣款成功了，但没收到货。由于平台系统做的不好，再也找不到那笔订单，不能证明我付过钱，也不能给我发货。<br>这笔交易就没有人能说的清楚了，信任也就不存在了。</p>\n<p><strong>比特币要去解决信任问题</strong></p>\n<blockquote>\n<p>What is needed is an electronic payment system based on cryptographic proof instead of trust, allowing any two willing parties to transact directly with each other without the need for a trusted third party. </p>\n<p>我们真正需要的是一种基于加密算法密码学原理而非基于信任的数字货币支付系统，不需要可信任第三方参与的情况下，允许双方直接进行支付交易</p>\n</blockquote>\n<img src=\"/2022/01/23/bc-bitcoin-concept/decentralized.png\" class=\"\">\n<h4 id=\"双花攻击（Double-Spending-Attack\"><a href=\"#双花攻击（Double-Spending-Attack\" class=\"headerlink\" title=\"双花攻击（Double Spending Attack)\"></a>双花攻击（Double Spending Attack)</h4><p>「双花」即同一笔钱花了两次或多次。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/double_spending.png\" class=\"\">\n<p>假设央行发行了一款数字货币，货币在软件中其实就是文件，完全可以复制。<br>假如 A 在转给 B 100 元后，又复制了同一笔钱转给了 C，就是所谓的「双花」，双花攻击只通过验证数字货币的签名是不够的，还需要使用额外的手段。</p>\n<p><strong>比特币要去解决双花问题</strong></p>\n<blockquote>\n<p>We propose a solution to the double-spending problem using a peer-to-peer network</p>\n<p>我们将在本文提出一种新方案，使用点对点去中心化网络去解决这个双花问题</p>\n</blockquote>\n<p>在<strong>比特币交易</strong>小节中，会详细解释比特币是如何解决双花问题的。</p>\n<h3 id=\"比特币中的密码学\"><a href=\"#比特币中的密码学\" class=\"headerlink\" title=\"比特币中的密码学\"></a>比特币中的密码学</h3><h4 id=\"哈希算法（Hash-Algorithm\"><a href=\"#哈希算法（Hash-Algorithm\" class=\"headerlink\" title=\"哈希算法（Hash Algorithm)\"></a>哈希算法（Hash Algorithm)</h4><p>哈希算法是用来做什么的呢？我们先来看一个小故事。</p>\n<p><strong>雍正到底是不是篡位登基的？</strong></p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/tamper.png\" class=\"\" title=\"篡改\">\n<p>一直有一个传说称雍正不是康熙真正传位的皇帝，而是有人偷偷修改了遗诏，篡位登基的。  </p>\n<p><strong>假如康熙知道哈希函数</strong>  </p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/anti_tamper.png\" class=\"\" title=\"利用哈希防篡改\">\n<p>如果没有哈希函数，在康熙皇帝驾崩后，遗诏是死无对证，只能遗诏写什么，大臣就做什么。</p>\n<p>但有了哈希函数后就变得不一样了，康熙可以在活着的时候就可以提前写好遗诏，并用哈希函数计算出一个哈希串，交予大臣们。<br>大臣们看到哈希串也不能猜出遗诏的内容到底是什么，只能等到遗诏公布的那天，再去计算一次哈希值，看与当初皇帝给的哈希串是否一致，来判断遗诏是否被人篡改了。<br>如果修改了，就不会遵诏行事。</p>\n<p>通过这个小故事，可以简单总结出哈希的两个性质：</p>\n<ol>\n<li>防篡改，输入稍有改动，输出千差万别</li>\n<li>输出结果不可逆，只知道结果不能反推出输入是什么</li>\n</ol>\n<h4 id=\"比特币使用的哈希算法\"><a href=\"#比特币使用的哈希算法\" class=\"headerlink\" title=\"比特币使用的哈希算法\"></a>比特币使用的哈希算法</h4><p>SHA256（Security Hash Algorithm），是一种密码哈希函数（Cryptographic Hash Function）。</p>\n<p>$任意输入 ==&gt; SHA256 ==&gt; 256位哈希$</p>\n<p>在比特币中，利用了SHA256的三个性质</p>\n<ul>\n<li>不可逆（Hiding）</li>\n<li>抗哈希碰撞（Collision .istance）</li>\n<li>哈希值不可预测（Puzzle friendly）</li>\n</ul>\n<h5 id=\"不可逆（Hiding）\"><a href=\"#不可逆（Hiding）\" class=\"headerlink\" title=\"不可逆（Hiding）\"></a>不可逆（Hiding）</h5><p>SHA256的特性：</p>\n<ol>\n<li>输入长度任意</li>\n<li>输出长度固定，256bit</li>\n</ol>\n<p>比如</p>\n<p>$全世界的图书 ==&gt; SHA256 ==&gt; 256 位哈希$</p>\n<p>如果这个过程可逆的话，我们就发现了一种无敌的压缩算法，可以把全世界的图书压成 256 位，再进行存储。</p>\n<h5 id=\"抗哈希碰撞（Collision-istance）\"><a href=\"#抗哈希碰撞（Collision-istance）\" class=\"headerlink\" title=\"抗哈希碰撞（Collision .istance）\"></a>抗哈希碰撞（Collision .istance）</h5><p>根据<a href=\"https://baike.baidu.com/item/%E6%8A%BD%E5%B1%89%E5%8E%9F%E7%90%86/233776\">抽屉原理</a>，输入空间无限，输出空间有限，理论上一定会存在碰撞。</p>\n<p>但是，从长期经验看，没有什么人为的、高效的方式制造碰撞。</p>\n<p>只能通过暴力遍历输入空间的方式来寻找碰撞</p>\n<h5 id=\"哈希值不可预测（Puzzle-friendly）\"><a href=\"#哈希值不可预测（Puzzle-friendly）\" class=\"headerlink\" title=\"哈希值不可预测（Puzzle friendly）\"></a>哈希值不可预测（Puzzle friendly）</h5><p>Puzzle Friendly，直译为谜题友好性，是指事先给定一个哈希串，比如 00000000feacb46d… ，前 8 位都是 0，让你解谜题找到输入是什么。</p>\n<p>由于 SHA256 没有直接办法或通过找到一定规律来猜出输入是什么，只能通过暴力遍历输入空间的方式来找到答案。（其实一点都不友好）</p>\n<p>比如你找到一个输入 a，输出的前 7 位都是 0，感觉再简单调整一下输入就能找到答案了，其实不是的，修改输入后可能得到的答案一个 0 都没有。也就是说你的每一次计算是无记忆性的（Memoryless），只能通过大量地尝试，不断的寻找答案。</p>\n<p>除此之外，找到答案后，其他人验证答案却很简单，只需要把你的答案再用哈希函数计算一次即可。（difficult to solve, but easy to verify）</p>\n<p>比特币<strong>挖矿过程</strong>充分利用了 Puzzle friendly，后面我们会详细说明。</p>\n<h4 id=\"数字签名（Digital-Signature）\"><a href=\"#数字签名（Digital-Signature）\" class=\"headerlink\" title=\"数字签名（Digital Signature）\"></a>数字签名（Digital Signature）</h4><p>了解数字签名之前，需要先对非对称加密有一定认识。</p>\n<h5 id=\"什么是非对称加密？\"><a href=\"#什么是非对称加密？\" class=\"headerlink\" title=\"什么是非对称加密？\"></a>什么是非对称加密？</h5><img src=\"/2022/01/23/bc-bitcoin-concept/asymmetric_encryption.png\" class=\"\" title=\"非对称加密\">\n<p>Alice 想通过非对称加密的方式发送一条消息给 Bob，他要怎么做呢？</p>\n<ol>\n<li>Bob 需要先生成公钥私钥对（public key, private key）</li>\n<li>Bob 的公钥是对所有人公开的，所以 Alice 可以拿到 Bob’s public key</li>\n<li>Alice 使用 Bob’s public key 对 Message 加密，并将密文通过网络传输给 Bob</li>\n<li>Bob 接收到密文后，使用自己的私钥 Bob’s private key 解密，得到了 Message</li>\n<li>完成通信</li>\n</ol>\n<p>由于 Bob’s private key 是保存在 Bob 手里的，只要私钥不泄露，就是安全的。</p>\n<h5 id=\"3-3-2、什么是数字签名？\"><a href=\"#3-3-2、什么是数字签名？\" class=\"headerlink\" title=\"3.3.2、什么是数字签名？\"></a>3.3.2、什么是数字签名？</h5><p>还是 Alice 想要给 Bob 发送一条消息，并采用非对称加密的方式，Alice 凭什么相信 Bob 的公钥就是 Bob 的呢？有没有可能被其他人调包了呢？这就需要 Alice 用到数字签名的技术，来验证 Bob 的身份是否真实</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/digital_signature.png\" class=\"\" title=\"数字签名\">\n<ol>\n<li>Bob 用私钥生成数字签名</li>\n<li>Alice 用 Bob 的公钥验证签名</li>\n<li>如果验证通过，则证明公钥一定是 Bob 的，因为签名只能由 Bob 的私钥生成</li>\n</ol>\n<h3 id=\"四、比特币是如何交易的？\"><a href=\"#四、比特币是如何交易的？\" class=\"headerlink\" title=\"四、比特币是如何交易的？\"></a>四、比特币是如何交易的？</h3><h4 id=\"4-1、区块链\"><a href=\"#4-1、区块链\" class=\"headerlink\" title=\"4.1、区块链\"></a>4.1、区块链</h4><p>在比特币系统中，交易是存在区块里的，那么区块链到底是什么呢？</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/what_is_block_chain.png\" class=\"\">\n<ul>\n<li>一个区块是由 block header 和 block body 组成</li>\n<li>block header 中会存储前一个区块头的哈希值</li>\n<li>block body 中会存储具体的交易信息（Transaction 简写为 Tx)</li>\n</ul>\n<p>区块链其实不是区块组成的链表结构，而是通过 (key,value) 数据库实现的。在数据库中，key 是区块头的哈希值，value 是区块内容。</p>\n<h4 id=\"账户\"><a href=\"#账户\" class=\"headerlink\" title=\"账户\"></a>账户</h4><p>在比特币中，账户就是由本机生成的公私钥对</p>\n<ul>\n<li>公钥的哈希值用作转账地址，相当于银行卡号</li>\n<li>私钥相当于银行密码，需要自己妥善保管，一旦丢失是无法找回的</li>\n</ul>\n<h4 id=\"防止双花\"><a href=\"#防止双花\" class=\"headerlink\" title=\"防止双花\"></a>防止双花</h4><p>现实中，A -&gt; B 100元人民币的过程实际是 A 的钱包减少 100元，B 的钱包增加 100元，天然能防止「双花」（除非你把花出去的钱偷回来再花一次）。</p>\n<p>但是，比特币中没有账户系统，不会帮你记录用户的账户中余额还有多少。<br>那么，比特币是如何验证「双花」的呢？</p>\n<h5 id=\"回溯币源\"><a href=\"#回溯币源\" class=\"headerlink\" title=\"回溯币源\"></a>回溯币源</h5><p>比特币的每笔交易由<strong>未花费的输出（UTXO Unspenting Transaction Output），本次交易的输入</strong>拼接而成。每笔交易会去验证 UTXO 是否能支付足量的币，具体可以看下面的例子。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/btc_transaction.png\" class=\"\">\n<ol>\n<li>coinbase 称作「铸币」交易，是矿工挖出新区块获得的出块奖励，假设是 A 获得了出块奖励的 10 BTC</li>\n<li>A 转给了 B 5 BTC，同时转给了 C 5 BTC，这时系统会去验证 A 有没有能力支付 10 BTC，会向前回溯找到 A BTC 的来源，于是找到了铸币交易，发现有 10 BTC，交易合法</li>\n<li>同理 C 在转给 E 7BTC 时，需要找到之前交易中得到的 5 + 2 BTC</li>\n</ol>\n<p>转账者除了要证明币源，还需要将交易用自己的私钥签名，用于身份验证。</p>\n<h3 id=\"比特币挖矿\"><a href=\"#比特币挖矿\" class=\"headerlink\" title=\"比特币挖矿\"></a>比特币挖矿</h3><h4 id=\"为什么要挖矿？\"><a href=\"#为什么要挖矿？\" class=\"headerlink\" title=\"为什么要挖矿？\"></a>为什么要挖矿？</h4><ol>\n<li><strong>产生比特币</strong>，只有挖出新的区块，才会产生新的比特币。中本聪规定，最初出块奖励为 50 BTC，每隔 4 年出块奖励减半，所以比特币总量大概为 2100 万个</li>\n<li><strong>打包交易</strong>，通过挖出新区块，打包记录新产生的交易</li>\n<li><strong>达成共识</strong>，通过工作量证明（Proof of Work）+ 奖励机制，让系统中的节点达成共识，向好的方向发展</li>\n</ol>\n<h4 id=\"挖矿的过程\"><a href=\"#挖矿的过程\" class=\"headerlink\" title=\"挖矿的过程\"></a>挖矿的过程</h4><blockquote>\n<p>比特币挖矿的过程和实际挖金矿的过程很像：</p>\n<ul>\n<li>金子的总量是有限的，越挖会越少，比特币也是如此</li>\n<li>挖金子需要付出科技成本和体力劳动后才能得到回报，比特币也是需要付出算力、电力成本，才能收获比特币</li>\n</ul>\n</blockquote>\n<p>下面我们来简单了解一下，比特币挖矿的过程是怎样的。</p>\n<h5 id=\"找到最长合法链\"><a href=\"#找到最长合法链\" class=\"headerlink\" title=\"找到最长合法链\"></a>找到最长合法链</h5><p>在比特币中的矿工指的是系统中的全节点，除了挖矿，还要负责维护全量的区块数据</p>\n<p>诚实的矿工会按照最长合法链规则挖矿</p>\n<ul>\n<li><strong>最长</strong>，顾名思义，矿工只沿着系统中最长的链向后挖</li>\n<li><strong>合法</strong>，验证区块信息是否被篡改，区块中记录的所有的交易是否合法。一旦矿工识别当前链不合规，便会马上找到另外的最长合法链，继续挖矿</li>\n</ul>\n<h5 id=\"挖矿解谜\"><a href=\"#挖矿解谜\" class=\"headerlink\" title=\"挖矿解谜\"></a>挖矿解谜</h5><p>简单说，挖矿解谜就是矿工通过暴力哈希运算，找到符合要求的随机数 nonce，满足下面的公式</p>\n<p>$H(header || nonce) &lt;= target$</p>\n<ul>\n<li>target 是一串 256 位的哈希（前 k 位都是 0）</li>\n<li>k 越大，target 越小，挖矿难度越高。就像打靶子一样，k 越大，表示靶子越小，越难命中</li>\n<li><p>增加算力，会增加挖到矿的概率，但不代表当前区块一定会被算力高的矿工挖到</p>\n<p>中本聪设计出块时间在10分钟左右，每两周调整一次挖矿难度。比如上两周平均出块时间为 7 分钟，则会增大难度，否则会降低难度。</p>\n</li>\n</ul>\n<h5 id=\"广播\"><a href=\"#广播\" class=\"headerlink\" title=\"广播\"></a>广播</h5><p>解谜成功后，需要迅速把组装好的区块向相邻节点广播，让自己挖的区块在最长合法链中得到确认，拿到出块奖励和交易手续费。</p>\n<h5 id=\"6次交易确认机制\"><a href=\"#6次交易确认机制\" class=\"headerlink\" title=\"6次交易确认机制\"></a>6次交易确认机制</h5><img src=\"/2022/01/23/bc-bitcoin-concept/6_confirms.png\" class=\"\">\n<p>网络是不可靠的，在广播阶段很有可能出现延时。<br>所以交易上链后，并不是马上就生效的，中本聪设计了一个区块上链后需要再等 6 个区块上链后才能被真正确认。</p>\n<p>为什么要这样做？</p>\n<ol>\n<li>防止双花，假如甲、乙矿工同时挖到了新区块，并且广播了出去。其中甲记录 A 转给 B 10BTC，乙记录了 A 转给 C 10BTC，事实上 A 只有 10BTC，如果两个区块都被认可，那就出现了双花。</li>\n<li>为什么是 6 次？中本聪认为，6 个区块大概要花费一个小时才能挖出来，想要再做一次分叉攻击篡改，是需要较大成本的。</li>\n</ol>\n<h4 id=\"51-算力攻击\"><a href=\"#51-算力攻击\" class=\"headerlink\" title=\"51%算力攻击\"></a>51%算力攻击</h4><img src=\"/2022/01/23/bc-bitcoin-concept/51%25_attack.png\" class=\"\">\n<p>假设有某个组织拥有了全世界 51% 的算力，并且一直在沿着自己的链挖矿，理论上某个时间点，这个组织所挖的链就会变成最长的，广播后，这条链就会成为最长合法链，那么以前的交易就会被这个组织替换。</p>\n<ul>\n<li>51% 攻击只能将合法的交易替换上链，但是无法偷其他用户的比特币，因为诚实的节点会验证交易的签名。</li>\n<li>51% 攻击是可以发动双花攻击的，由于算力强大，会导致 6 次确认机制失效。比如 A =&gt; B (10BTC) 已经得到确认，其中 A 是攻击者，交易是 A 的签名，发动 51% 攻击后，完全可以修改为 A =&gt; C (10BTC)，C 可以是攻击者的另一个账户。</li>\n<li>51% 只是一个象征性的数字，并不一定算力一定要达到 51 才能攻击，有研究小组表明只要拥有 30% 的全网算力，就足以发动 51% 攻击。（为什么只需要30%？个人猜测是，其他算力之间还存在竞争关系，而这30%是团结一致的）</li>\n</ul>\n<p>曾有矿池（GHash.IO）算力超过了 51%，一度引起比特币价值暴跌，之后很多矿工自觉退出了矿池，来保证系统的安全。</p>\n<img src=\"/2022/01/23/bc-bitcoin-concept/mining_healthy.png\" class=\"\">\n<p>比特币系统在「安全性」「高价值」「健康挖矿」三个方面已经形成闭环。<br>算力越高，想发动 51% 攻击就越困难，系统就越安全，随之比特币价格就会越高。<br>使得想要发动攻击的人即使发动了攻击也不一定能赚到什么，还不如用所有算力稳稳挖矿收益高。</p>\n<h3 id=\"比特币的缺点\"><a href=\"#比特币的缺点\" class=\"headerlink\" title=\"比特币的缺点\"></a>比特币的缺点</h3><ol>\n<li>工作量证明机制造成算力、电力的浪费</li>\n<li>出块时间限定平均10分钟左右，一笔交易需要大概需要1小时才能得被系统确认</li>\n<li>比特币私钥丢失之后，是没办法找回的，账户中的比特币永远都取不出来了</li>\n<li>转账写错地址，无法回滚</li>\n</ol>\n<h3 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h3><ul>\n<li>《零基础学区块链》</li>\n<li><a href=\"http://zhenxiao.com/blockchain/\">北京大学肖臻老师的公开课</a></li>\n<li><a href=\"https://btcpapers.com/\">比特币白皮书</a></li>\n<li>《图说区块链》</li>\n<li>《图解密码技术》</li>\n</ul>\n"},{"title":"Kotlin 协程的创建过程","date":"2022-01-22T16:55:34.000Z","toc":true,"_content":"\n![](covers/kotlin_cover.png)\n\n### 创建并启动协程\n\n```kotlin\nfun create.main() {\n    //1. 创建协程体\n    val coroutine = suspend {\n        println(\"in coroutine\")\n        5\n    }.createCoroutine(object: Continuation<Int> {\n        override fun resumeWith(result: Result<Int>) {\n            println(\"coroutine end: $result\")\n        }\n\n        override val context: CoroutineContext\n            get() = EmptyCoroutineContext\n\n    })\n\n    //2. 执行协程\n    coroutine.resume(Unit)\n}\n```\n\n**上面代码的输出结果：**\n```console\nin coroutine\ncoroutine end: Success(5)\n```\n\n### 协程的执行过程\n\n![](./call_stack.png)\n\n调用栈流程如下\n\n![](./call_process.png)\n\n1. 我们通过 suspend block#createCoroutine 得到的 coroutine 实际是 SafeContinuation 对象 \n2. SafeContinuation 实际上是代理类，其中的 delegate 属性才是真正的 Continuation 对象 \n3. suspend block 中的代码在 BaseContinuationImpl 中执行 \n4. 我们的匿名内部类对象 Continuation 被回调\n\n### suspend block 是如何变为协程体被执行的？\n\n我们分析调用栈得知，resumeWith 最终是在 BaseContinuationImpl 中执行的，下面来看看代码\n\n```kotlin\n@SinceKotlin(\"1.3\")\ninternal abstract class BaseContinuationImpl(\n    public val completion: Continuation<Any?>?\n) : Continuation<Any?>, CoroutineStackFrame, Serializable {\n    public final override fun resumeWith(result: Result<Any?>) {\n        var current = this\n        var param = result\n        while (true) {\n            probeCoroutineResumed(current)\n            with(current) {\n                val completion = completion!!\n                val outcome: Result<Any?> =\n                    try {\n                        val outcome = invokeSuspend(param) //1.这里执行了 suspend block\n                        if (outcome === COROUTINE_SUSPENDED) return\n                        Result.success(outcome)\n                    } catch (exception: Throwable) {\n                        Result.failure(exception)\n                    }\n                releaseIntercepted()\n                if (completion is BaseContinuationImpl) {\n                    current = completion\n                    param = outcome\n                } else {\n                    completion.resumeWith(outcome) //2.这里回调了我们的匿名内部类\n                    return\n                }\n            }\n        }\n    }\n\n    protected abstract fun invokeSuspend(result: Result<Any?>): Any? //3. 抽象方法\n}\n```\n* 在代码注释 1. 处，调用 current.invokeSuspend，执行了我们定义的协程体，证明 suspend block 其实是 BaseContinuationImpl 的子类 \n* 在 2. 处，协程体执行完毕后，我们的代码收到了完成回调 \n* 在 3. 处，可以发现 invokeSuspend 是个抽象方法，suspend block 就是这个方法的具体实现\n\n下面我通过断点，进一步分析 suspend block 是通过哪个子类执行的。\n\n![](./break_point.png)\n\n可以看到 current 是名为 {文件}${方法}${变量}$1 格式的对象，证明 kotlin 编译器遇到 suspend 关键字后会帮我们生成一个 BaseContinuationImpl 的子类\n\n那么，这个子类到底是什么呢？将 kt 编译为 .class 再通过 jadx 打开后，得到的 java 代码如下\n\n```java\npublic final class CreateCoroutineKt {\n    public static final void create.main() {\n        Continuation coroutine = ContinuationKt.createCoroutine(new CreateCoroutineKt$create.main$coroutine$1(null), new CreateCoroutineKt$create.main$coroutine$2());\n        Unit unit = Unit.INSTANCE;\n        Result.Companion companion = Result.Companion;\n        coroutine.resumeWith(Result.constructor-impl(unit));\n    }\n}\n```\n\n```java\nfinal class CreateCoroutineKt$create.main$coroutine$1 extends SuspendLambda implements Function1<Continuation<? super Integer>, Object> {\n    int label;\n\n    CreateCoroutineKt$create.main$coroutine$1(Continuation<? super CreateCoroutineKt$create.main$coroutine$1> continuation) {\n        super(1, continuation);\n    }\n\n    @NotNull\n    public final Continuation<Unit> create(@NotNull Continuation<?> continuation) {\n        return new CreateCoroutineKt$create.main$coroutine$1(continuation);\n    }\n\n    @Nullable\n    public final Object invoke(@Nullable Continuation<? super Integer> continuation) {\n        return create(continuation).invokeSuspend(Unit.INSTANCE);\n    }\n\n    @Nullable\n    public final Object invokeSuspend(@NotNull Object obj) {\n        IntrinsicsKt.getCOROUTINE_SUSPENDED();\n        switch (this.label) {\n            case 0:\n                ResultKt.throwOnFailure(obj);\n                System.out.println((Object) \"in coroutine\"); //协程体的逻辑\n                return Boxing.boxInt(5);\n            default:\n                throw new IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\");\n        }\n    }\n}\n```\n\n明显看出，kt 编译器帮助我们把 suspend 关键字变为了 SuspendLambda 的 子类，并重写了 invokeSuspend 方法，不难猜出 SuspendLambda 继承自 BaseContinuationImp\n\n### 总结\n\n用一个类图简单的总结一个协程创建并执行的过程。\n\n![](./uml.png)\n1. suspend block(lambda) 在编译时会转变为 SuspendLambda 的匿名子类，并把 block 中的逻辑通过重写 invokeSuspend 实现\n2. 调用 suspend_lambda.createCoroutine 会得到 SafeContinuation 对象，这只是一个代理类，代理的对象正是我们传入的 SuspendLambda\n3. createCoroutine 的参数是 completion，代表协程执行完毕的回调\n4. 最终调用到了 BaseContinuationImpl 的 resumeWith，完成协程的调用，调用完毕的回调\n","source":"_posts/kt-coroutine-create.md","raw":"---\ntitle: Kotlin 协程的创建过程\ndate: 2022-01-23 00:55:34\ncategories: Kotlin\ntags: Kotlin协程\ntoc: true\n---\n\n![](covers/kotlin_cover.png)\n\n### 创建并启动协程\n\n```kotlin\nfun create.main() {\n    //1. 创建协程体\n    val coroutine = suspend {\n        println(\"in coroutine\")\n        5\n    }.createCoroutine(object: Continuation<Int> {\n        override fun resumeWith(result: Result<Int>) {\n            println(\"coroutine end: $result\")\n        }\n\n        override val context: CoroutineContext\n            get() = EmptyCoroutineContext\n\n    })\n\n    //2. 执行协程\n    coroutine.resume(Unit)\n}\n```\n\n**上面代码的输出结果：**\n```console\nin coroutine\ncoroutine end: Success(5)\n```\n\n### 协程的执行过程\n\n![](./call_stack.png)\n\n调用栈流程如下\n\n![](./call_process.png)\n\n1. 我们通过 suspend block#createCoroutine 得到的 coroutine 实际是 SafeContinuation 对象 \n2. SafeContinuation 实际上是代理类，其中的 delegate 属性才是真正的 Continuation 对象 \n3. suspend block 中的代码在 BaseContinuationImpl 中执行 \n4. 我们的匿名内部类对象 Continuation 被回调\n\n### suspend block 是如何变为协程体被执行的？\n\n我们分析调用栈得知，resumeWith 最终是在 BaseContinuationImpl 中执行的，下面来看看代码\n\n```kotlin\n@SinceKotlin(\"1.3\")\ninternal abstract class BaseContinuationImpl(\n    public val completion: Continuation<Any?>?\n) : Continuation<Any?>, CoroutineStackFrame, Serializable {\n    public final override fun resumeWith(result: Result<Any?>) {\n        var current = this\n        var param = result\n        while (true) {\n            probeCoroutineResumed(current)\n            with(current) {\n                val completion = completion!!\n                val outcome: Result<Any?> =\n                    try {\n                        val outcome = invokeSuspend(param) //1.这里执行了 suspend block\n                        if (outcome === COROUTINE_SUSPENDED) return\n                        Result.success(outcome)\n                    } catch (exception: Throwable) {\n                        Result.failure(exception)\n                    }\n                releaseIntercepted()\n                if (completion is BaseContinuationImpl) {\n                    current = completion\n                    param = outcome\n                } else {\n                    completion.resumeWith(outcome) //2.这里回调了我们的匿名内部类\n                    return\n                }\n            }\n        }\n    }\n\n    protected abstract fun invokeSuspend(result: Result<Any?>): Any? //3. 抽象方法\n}\n```\n* 在代码注释 1. 处，调用 current.invokeSuspend，执行了我们定义的协程体，证明 suspend block 其实是 BaseContinuationImpl 的子类 \n* 在 2. 处，协程体执行完毕后，我们的代码收到了完成回调 \n* 在 3. 处，可以发现 invokeSuspend 是个抽象方法，suspend block 就是这个方法的具体实现\n\n下面我通过断点，进一步分析 suspend block 是通过哪个子类执行的。\n\n![](./break_point.png)\n\n可以看到 current 是名为 {文件}${方法}${变量}$1 格式的对象，证明 kotlin 编译器遇到 suspend 关键字后会帮我们生成一个 BaseContinuationImpl 的子类\n\n那么，这个子类到底是什么呢？将 kt 编译为 .class 再通过 jadx 打开后，得到的 java 代码如下\n\n```java\npublic final class CreateCoroutineKt {\n    public static final void create.main() {\n        Continuation coroutine = ContinuationKt.createCoroutine(new CreateCoroutineKt$create.main$coroutine$1(null), new CreateCoroutineKt$create.main$coroutine$2());\n        Unit unit = Unit.INSTANCE;\n        Result.Companion companion = Result.Companion;\n        coroutine.resumeWith(Result.constructor-impl(unit));\n    }\n}\n```\n\n```java\nfinal class CreateCoroutineKt$create.main$coroutine$1 extends SuspendLambda implements Function1<Continuation<? super Integer>, Object> {\n    int label;\n\n    CreateCoroutineKt$create.main$coroutine$1(Continuation<? super CreateCoroutineKt$create.main$coroutine$1> continuation) {\n        super(1, continuation);\n    }\n\n    @NotNull\n    public final Continuation<Unit> create(@NotNull Continuation<?> continuation) {\n        return new CreateCoroutineKt$create.main$coroutine$1(continuation);\n    }\n\n    @Nullable\n    public final Object invoke(@Nullable Continuation<? super Integer> continuation) {\n        return create(continuation).invokeSuspend(Unit.INSTANCE);\n    }\n\n    @Nullable\n    public final Object invokeSuspend(@NotNull Object obj) {\n        IntrinsicsKt.getCOROUTINE_SUSPENDED();\n        switch (this.label) {\n            case 0:\n                ResultKt.throwOnFailure(obj);\n                System.out.println((Object) \"in coroutine\"); //协程体的逻辑\n                return Boxing.boxInt(5);\n            default:\n                throw new IllegalStateException(\"call to 'resume' before 'invoke' with coroutine\");\n        }\n    }\n}\n```\n\n明显看出，kt 编译器帮助我们把 suspend 关键字变为了 SuspendLambda 的 子类，并重写了 invokeSuspend 方法，不难猜出 SuspendLambda 继承自 BaseContinuationImp\n\n### 总结\n\n用一个类图简单的总结一个协程创建并执行的过程。\n\n![](./uml.png)\n1. suspend block(lambda) 在编译时会转变为 SuspendLambda 的匿名子类，并把 block 中的逻辑通过重写 invokeSuspend 实现\n2. 调用 suspend_lambda.createCoroutine 会得到 SafeContinuation 对象，这只是一个代理类，代理的对象正是我们传入的 SuspendLambda\n3. createCoroutine 的参数是 completion，代表协程执行完毕的回调\n4. 最终调用到了 BaseContinuationImpl 的 resumeWith，完成协程的调用，调用完毕的回调\n","slug":"kt-coroutine-create","published":1,"updated":"2022-01-22T17:12:12.542Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2pueu430005j6s6hdk46vwl","content":"\n<h3 id=\"创建并启动协程\"><a href=\"#创建并启动协程\" class=\"headerlink\" title=\"创建并启动协程\"></a>创建并启动协程</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> create.<span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 创建协程体</span></span><br><span class=\"line\">    <span class=\"keyword\">val</span> coroutine = <span class=\"keyword\">suspend</span> &#123;</span><br><span class=\"line\">        println(<span class=\"string\">&quot;in coroutine&quot;</span>)</span><br><span class=\"line\">        <span class=\"number\">5</span></span><br><span class=\"line\">    &#125;.createCoroutine(<span class=\"keyword\">object</span>: Continuation&lt;<span class=\"built_in\">Int</span>&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">resumeWith</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Int</span>&gt;)</span></span> &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;coroutine end: <span class=\"variable\">$result</span>&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"keyword\">val</span> context: CoroutineContext</span><br><span class=\"line\">            <span class=\"keyword\">get</span>() = EmptyCoroutineContext</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 执行协程</span></span><br><span class=\"line\">    coroutine.resume(<span class=\"built_in\">Unit</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>上面代码的输出结果：</strong><br><figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">in coroutine</span><br><span class=\"line\">coroutine end: Success(5)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"协程的执行过程\"><a href=\"#协程的执行过程\" class=\"headerlink\" title=\"协程的执行过程\"></a>协程的执行过程</h3><img src=\"/2022/01/23/kt-coroutine-create/call_stack.png\" class=\"\">\n<p>调用栈流程如下</p>\n<img src=\"/2022/01/23/kt-coroutine-create/call_process.png\" class=\"\">\n<ol>\n<li>我们通过 suspend block#createCoroutine 得到的 coroutine 实际是 SafeContinuation 对象 </li>\n<li>SafeContinuation 实际上是代理类，其中的 delegate 属性才是真正的 Continuation 对象 </li>\n<li>suspend block 中的代码在 BaseContinuationImpl 中执行 </li>\n<li>我们的匿名内部类对象 Continuation 被回调</li>\n</ol>\n<h3 id=\"suspend-block-是如何变为协程体被执行的？\"><a href=\"#suspend-block-是如何变为协程体被执行的？\" class=\"headerlink\" title=\"suspend block 是如何变为协程体被执行的？\"></a>suspend block 是如何变为协程体被执行的？</h3><p>我们分析调用栈得知，resumeWith 最终是在 BaseContinuationImpl 中执行的，下面来看看代码</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SinceKotlin(<span class=\"meta-string\">&quot;1.3&quot;</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseContinuationImpl</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">val</span> completion: Continuation&lt;Any?&gt;?</span><br><span class=\"line\">) : Continuation&lt;Any?&gt;, CoroutineStackFrame, Serializable &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">resumeWith</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Any</span>?&gt;)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> current = <span class=\"keyword\">this</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> param = result</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            probeCoroutineResumed(current)</span><br><span class=\"line\">            with(current) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">val</span> completion = completion!!</span><br><span class=\"line\">                <span class=\"keyword\">val</span> outcome: Result&lt;Any?&gt; =</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">val</span> outcome = invokeSuspend(param) <span class=\"comment\">//1.这里执行了 suspend block</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (outcome === COROUTINE_SUSPENDED) <span class=\"keyword\">return</span></span><br><span class=\"line\">                        Result.success(outcome)</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (exception: Throwable) &#123;</span><br><span class=\"line\">                        Result.failure(exception)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                releaseIntercepted()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (completion <span class=\"keyword\">is</span> BaseContinuationImpl) &#123;</span><br><span class=\"line\">                    current = completion</span><br><span class=\"line\">                    param = outcome</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    completion.resumeWith(outcome) <span class=\"comment\">//2.这里回调了我们的匿名内部类</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">invokeSuspend</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Any</span>?&gt;)</span></span>: Any? <span class=\"comment\">//3. 抽象方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在代码注释 1. 处，调用 current.invokeSuspend，执行了我们定义的协程体，证明 suspend block 其实是 BaseContinuationImpl 的子类 </li>\n<li>在 2. 处，协程体执行完毕后，我们的代码收到了完成回调 </li>\n<li>在 3. 处，可以发现 invokeSuspend 是个抽象方法，suspend block 就是这个方法的具体实现</li>\n</ul>\n<p>下面我通过断点，进一步分析 suspend block 是通过哪个子类执行的。</p>\n<img src=\"/2022/01/23/kt-coroutine-create/break_point.png\" class=\"\">\n<p>可以看到 current 是名为 {文件}${方法}${变量}$1 格式的对象，证明 kotlin 编译器遇到 suspend 关键字后会帮我们生成一个 BaseContinuationImpl 的子类</p>\n<p>那么，这个子类到底是什么呢？将 kt 编译为 .class 再通过 jadx 打开后，得到的 java 代码如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCoroutineKt</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> create.main() &#123;</span><br><span class=\"line\">        Continuation coroutine = ContinuationKt.createCoroutine(<span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(<span class=\"keyword\">null</span>), <span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">2</span>());</span><br><span class=\"line\">        Unit unit = Unit.INSTANCE;</span><br><span class=\"line\">        Result.Companion companion = Result.Companion;</span><br><span class=\"line\">        coroutine.resumeWith(Result.constructor-impl(unit));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCoroutineKt</span>$<span class=\"title\">create</span>.<span class=\"title\">main</span>$<span class=\"title\">coroutine</span>$1 <span class=\"keyword\">extends</span> <span class=\"title\">SuspendLambda</span> <span class=\"keyword\">implements</span> <span class=\"title\">Function1</span>&lt;<span class=\"title\">Continuation</span>&lt;? <span class=\"title\">super</span> <span class=\"title\">Integer</span>&gt;, <span class=\"title\">Object</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> label;</span><br><span class=\"line\"></span><br><span class=\"line\">    CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(Continuation&lt;? <span class=\"keyword\">super</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>&gt; continuation) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"number\">1</span>, continuation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Continuation&lt;Unit&gt; <span class=\"title\">create</span><span class=\"params\">(<span class=\"meta\">@NotNull</span> Continuation&lt;?&gt; continuation)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(continuation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">invoke</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> Continuation&lt;? <span class=\"keyword\">super</span> Integer&gt; continuation)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> create(continuation).invokeSuspend(Unit.INSTANCE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">invokeSuspend</span><span class=\"params\">(<span class=\"meta\">@NotNull</span> Object obj)</span> </span>&#123;</span><br><span class=\"line\">        IntrinsicsKt.getCOROUTINE_SUSPENDED();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">this</span>.label) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                ResultKt.throwOnFailure(obj);</span><br><span class=\"line\">                System.out.println((Object) <span class=\"string\">&quot;in coroutine&quot;</span>); <span class=\"comment\">//协程体的逻辑</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boxing.boxInt(<span class=\"number\">5</span>);</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">&quot;call to &#x27;resume&#x27; before &#x27;invoke&#x27; with coroutine&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>明显看出，kt 编译器帮助我们把 suspend 关键字变为了 SuspendLambda 的 子类，并重写了 invokeSuspend 方法，不难猜出 SuspendLambda 继承自 BaseContinuationImp</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>用一个类图简单的总结一个协程创建并执行的过程。</p>\n<img src=\"/2022/01/23/kt-coroutine-create/uml.png\" class=\"\">\n<ol>\n<li>suspend block(lambda) 在编译时会转变为 SuspendLambda 的匿名子类，并把 block 中的逻辑通过重写 invokeSuspend 实现</li>\n<li>调用 suspend_lambda.createCoroutine 会得到 SafeContinuation 对象，这只是一个代理类，代理的对象正是我们传入的 SuspendLambda</li>\n<li>createCoroutine 的参数是 completion，代表协程执行完毕的回调</li>\n<li>最终调用到了 BaseContinuationImpl 的 resumeWith，完成协程的调用，调用完毕的回调</li>\n</ol>\n","site":{"data":{}},"excerpt":"","more":"\n<h3 id=\"创建并启动协程\"><a href=\"#创建并启动协程\" class=\"headerlink\" title=\"创建并启动协程\"></a>创建并启动协程</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> create.<span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">//1. 创建协程体</span></span><br><span class=\"line\">    <span class=\"keyword\">val</span> coroutine = <span class=\"keyword\">suspend</span> &#123;</span><br><span class=\"line\">        println(<span class=\"string\">&quot;in coroutine&quot;</span>)</span><br><span class=\"line\">        <span class=\"number\">5</span></span><br><span class=\"line\">    &#125;.createCoroutine(<span class=\"keyword\">object</span>: Continuation&lt;<span class=\"built_in\">Int</span>&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">resumeWith</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Int</span>&gt;)</span></span> &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;coroutine end: <span class=\"variable\">$result</span>&quot;</span>)</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"keyword\">val</span> context: CoroutineContext</span><br><span class=\"line\">            <span class=\"keyword\">get</span>() = EmptyCoroutineContext</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">//2. 执行协程</span></span><br><span class=\"line\">    coroutine.resume(<span class=\"built_in\">Unit</span>)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><strong>上面代码的输出结果：</strong><br><figure class=\"highlight console\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">in coroutine</span><br><span class=\"line\">coroutine end: Success(5)</span><br></pre></td></tr></table></figure></p>\n<h3 id=\"协程的执行过程\"><a href=\"#协程的执行过程\" class=\"headerlink\" title=\"协程的执行过程\"></a>协程的执行过程</h3><img src=\"/2022/01/23/kt-coroutine-create/call_stack.png\" class=\"\">\n<p>调用栈流程如下</p>\n<img src=\"/2022/01/23/kt-coroutine-create/call_process.png\" class=\"\">\n<ol>\n<li>我们通过 suspend block#createCoroutine 得到的 coroutine 实际是 SafeContinuation 对象 </li>\n<li>SafeContinuation 实际上是代理类，其中的 delegate 属性才是真正的 Continuation 对象 </li>\n<li>suspend block 中的代码在 BaseContinuationImpl 中执行 </li>\n<li>我们的匿名内部类对象 Continuation 被回调</li>\n</ol>\n<h3 id=\"suspend-block-是如何变为协程体被执行的？\"><a href=\"#suspend-block-是如何变为协程体被执行的？\" class=\"headerlink\" title=\"suspend block 是如何变为协程体被执行的？\"></a>suspend block 是如何变为协程体被执行的？</h3><p>我们分析调用栈得知，resumeWith 最终是在 BaseContinuationImpl 中执行的，下面来看看代码</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@SinceKotlin(<span class=\"meta-string\">&quot;1.3&quot;</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"keyword\">abstract</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">BaseContinuationImpl</span></span>(</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">val</span> completion: Continuation&lt;Any?&gt;?</span><br><span class=\"line\">) : Continuation&lt;Any?&gt;, CoroutineStackFrame, Serializable &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">resumeWith</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Any</span>?&gt;)</span></span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> current = <span class=\"keyword\">this</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> param = result</span><br><span class=\"line\">        <span class=\"keyword\">while</span> (<span class=\"literal\">true</span>) &#123;</span><br><span class=\"line\">            probeCoroutineResumed(current)</span><br><span class=\"line\">            with(current) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">val</span> completion = completion!!</span><br><span class=\"line\">                <span class=\"keyword\">val</span> outcome: Result&lt;Any?&gt; =</span><br><span class=\"line\">                    <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                        <span class=\"keyword\">val</span> outcome = invokeSuspend(param) <span class=\"comment\">//1.这里执行了 suspend block</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (outcome === COROUTINE_SUSPENDED) <span class=\"keyword\">return</span></span><br><span class=\"line\">                        Result.success(outcome)</span><br><span class=\"line\">                    &#125; <span class=\"keyword\">catch</span> (exception: Throwable) &#123;</span><br><span class=\"line\">                        Result.failure(exception)</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                releaseIntercepted()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (completion <span class=\"keyword\">is</span> BaseContinuationImpl) &#123;</span><br><span class=\"line\">                    current = completion</span><br><span class=\"line\">                    param = outcome</span><br><span class=\"line\">                &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                    completion.resumeWith(outcome) <span class=\"comment\">//2.这里回调了我们的匿名内部类</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"keyword\">abstract</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">invokeSuspend</span><span class=\"params\">(result: <span class=\"type\">Result</span>&lt;<span class=\"type\">Any</span>?&gt;)</span></span>: Any? <span class=\"comment\">//3. 抽象方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>在代码注释 1. 处，调用 current.invokeSuspend，执行了我们定义的协程体，证明 suspend block 其实是 BaseContinuationImpl 的子类 </li>\n<li>在 2. 处，协程体执行完毕后，我们的代码收到了完成回调 </li>\n<li>在 3. 处，可以发现 invokeSuspend 是个抽象方法，suspend block 就是这个方法的具体实现</li>\n</ul>\n<p>下面我通过断点，进一步分析 suspend block 是通过哪个子类执行的。</p>\n<img src=\"/2022/01/23/kt-coroutine-create/break_point.png\" class=\"\">\n<p>可以看到 current 是名为 {文件}${方法}${变量}$1 格式的对象，证明 kotlin 编译器遇到 suspend 关键字后会帮我们生成一个 BaseContinuationImpl 的子类</p>\n<p>那么，这个子类到底是什么呢？将 kt 编译为 .class 再通过 jadx 打开后，得到的 java 代码如下</p>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCoroutineKt</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">final</span> <span class=\"keyword\">void</span> create.main() &#123;</span><br><span class=\"line\">        Continuation coroutine = ContinuationKt.createCoroutine(<span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(<span class=\"keyword\">null</span>), <span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">2</span>());</span><br><span class=\"line\">        Unit unit = Unit.INSTANCE;</span><br><span class=\"line\">        Result.Companion companion = Result.Companion;</span><br><span class=\"line\">        coroutine.resumeWith(Result.constructor-impl(unit));</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight java\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">final</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">CreateCoroutineKt</span>$<span class=\"title\">create</span>.<span class=\"title\">main</span>$<span class=\"title\">coroutine</span>$1 <span class=\"keyword\">extends</span> <span class=\"title\">SuspendLambda</span> <span class=\"keyword\">implements</span> <span class=\"title\">Function1</span>&lt;<span class=\"title\">Continuation</span>&lt;? <span class=\"title\">super</span> <span class=\"title\">Integer</span>&gt;, <span class=\"title\">Object</span>&gt; </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> label;</span><br><span class=\"line\"></span><br><span class=\"line\">    CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(Continuation&lt;? <span class=\"keyword\">super</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>&gt; continuation) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">super</span>(<span class=\"number\">1</span>, continuation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@NotNull</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Continuation&lt;Unit&gt; <span class=\"title\">create</span><span class=\"params\">(<span class=\"meta\">@NotNull</span> Continuation&lt;?&gt; continuation)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">new</span> CreateCoroutineKt$create.main$coroutine$<span class=\"number\">1</span>(continuation);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">invoke</span><span class=\"params\">(<span class=\"meta\">@Nullable</span> Continuation&lt;? <span class=\"keyword\">super</span> Integer&gt; continuation)</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> create(continuation).invokeSuspend(Unit.INSTANCE);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Nullable</span></span><br><span class=\"line\">    <span class=\"function\"><span class=\"keyword\">public</span> <span class=\"keyword\">final</span> Object <span class=\"title\">invokeSuspend</span><span class=\"params\">(<span class=\"meta\">@NotNull</span> Object obj)</span> </span>&#123;</span><br><span class=\"line\">        IntrinsicsKt.getCOROUTINE_SUSPENDED();</span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (<span class=\"keyword\">this</span>.label) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">0</span>:</span><br><span class=\"line\">                ResultKt.throwOnFailure(obj);</span><br><span class=\"line\">                System.out.println((Object) <span class=\"string\">&quot;in coroutine&quot;</span>); <span class=\"comment\">//协程体的逻辑</span></span><br><span class=\"line\">                <span class=\"keyword\">return</span> Boxing.boxInt(<span class=\"number\">5</span>);</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> <span class=\"keyword\">new</span> IllegalStateException(<span class=\"string\">&quot;call to &#x27;resume&#x27; before &#x27;invoke&#x27; with coroutine&quot;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>明显看出，kt 编译器帮助我们把 suspend 关键字变为了 SuspendLambda 的 子类，并重写了 invokeSuspend 方法，不难猜出 SuspendLambda 继承自 BaseContinuationImp</p>\n<h3 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h3><p>用一个类图简单的总结一个协程创建并执行的过程。</p>\n<img src=\"/2022/01/23/kt-coroutine-create/uml.png\" class=\"\">\n<ol>\n<li>suspend block(lambda) 在编译时会转变为 SuspendLambda 的匿名子类，并把 block 中的逻辑通过重写 invokeSuspend 实现</li>\n<li>调用 suspend_lambda.createCoroutine 会得到 SafeContinuation 对象，这只是一个代理类，代理的对象正是我们传入的 SuspendLambda</li>\n<li>createCoroutine 的参数是 completion，代表协程执行完毕的回调</li>\n<li>最终调用到了 BaseContinuationImpl 的 resumeWith，完成协程的调用，调用完毕的回调</li>\n</ol>\n"},{"title":"Kotlin Lambda 函数中的 Receiver 是什么？","date":"2022-01-22T13:31:48.000Z","toc":true,"_content":"\n### 一、示例代码\n\n先来看一段示例代码，初步了解 Receiver 是什么\n\n```kotlin\nimport java.lang.StringBuilder\n\nfun main() {\n    println(\"\".buildString {\n        this.append(\"a\")\n        append(\"b\")\n        append(\"c\")\n    })\n}\n\nfun String.buildString(action: StringBuilder.() -> Unit): String {\n    val sb = StringBuilder()\n    sb.action()\n    return sb.toString()\n}\n```\n上述代码可以为 String 增加一个扩展函数 buildString，可以直接在 buildString {} 作用域中使用 StringBuilder 的 append 或其他方法，省去了我们自己 new StringBuilder 的过程\n\n下面是对代码的详细解释\n![](./define_receiver.png)\n* 形如 T.() -> R 的函数，就是 Receiver 类型\n* 需要通过调用 [T的对象].() 的方式，来把 [T的对象] 作为 this 传到 lambda 作用域中\n\n![](./call_receiver.png)\n* 调用扩展函数时，可以显式用 this 访问传进来的对象\n* 也可隐式调用\n\n### 二、上述代码翻译成 java 是什么样的？\n\n通过 jadx 工具将 class 转为 java后，代码如下\n\n![](./jadx_1.png)\n\n* main 方法中原本的 lambda 被转为了 `buildString(\"\", ReceiverKt$main$1.INSTANCE)`，ReceiverKt$main$1 是什么我们稍后分析\n* buildString 方法接收了一个 Function1 类型的对象，证明 ReceiverKt$main$1 是 kt 帮我们生成的并且实现了 Function1\n* buildString 内部逻辑就是创建了一个 StringBuilder，然后调用 function1.invoke(sb)\n\n\n下面来看看 ReceiverKt$main$1 是什么\n![](./jadx_2.png)\n\n很简单，就是通过 invoke 调用我们 buildString lambda 里的内容\n\n### 三、另一个代码示例\n\n下面我们来看一段和上面例子很像的代码\n```kotlin\nfun main() {\n    println(\"\".buildString_ {sb: StringBuilder ->\n        sb.append(\"d\")\n        sb.append(\"e\")\n        sb.append(\"f\")\n    })\n}\n\nfun String.buildString_(action: (stringbuilder: StringBuilder) -> Unit): String {\n    val sb = StringBuilder()\n    action(sb)\n    return sb.toString()\n}\n```\n和第一段代码的区别是\n* buildString 参数变为了 (StringBuilder) -> Unit，我们将 StringBuilder 对象作为 lambda 的参数传入了\n* 调用的地方需要使用 it 或者自己定义一个参数名来使用 StringBuilder 对象\n\n这段代码转为 Java 后是什么样的呢？\n\n![](./jadx_3.png)\n\n![](./jadx_4.png)\n\n![](./jadx_5.png)\n\n可以看到使用 Receiver 的方式和使用给 lambda 函数定义参数的方式转为 Java 代码后只是在 invoke 参数的变量名有区别，仅此而已。\n\n### 四、小结\n\n1. 定义 lambda Receiver，调用方可以在 lambda 作用域中使用 this 访问 Receiver 对象\n2. 定义 lambda 带参函数，调用方可以在 lambda 作用域中自己定义对象变量名或者使用默认的 it\n3. 上述两种方式转为 Java 并没有什么本质区别，只是变量名上的不同\n\n### 五、kotlin 标准库里的操作符哪些用到了 Receiver？\n\n在了解 Receiver 的原理后，可以让我们更好地理解 kotlin 标准库里的操作符\n\n#### 1.apply\n\n```kotlin\n@kotlin.internal.InlineOnly\npublic inline fun <T> T.apply(block: T.() -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block()\n    return this\n}\n```\n使用 apply 后，我们可以在 lambda 使用 this，比如\n```kotlin\nval str = \"abc\"\nstr.apply { \n    println(this.length)\n}\n```\n\n#### 2.with\n```kotlin\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return receiver.block()\n}\n```\nwith 和 apply 的区别是，需要把 receiver 显示地传给 with，比如\n\n```kotlin\nval str = \"abc\"\nwith(str) {\n    println(this.length)\n}\n```\n- - -\n\n**如需转载，请注明原文出处，谢谢！**\n\n","source":"_posts/kt-receiver.md","raw":"---\ntitle: Kotlin Lambda 函数中的 Receiver 是什么？\ndate: 2022-01-22 21:31:48\ncategories: Kotlin\ntags: Kotlin基础\ntoc: true\n---\n\n### 一、示例代码\n\n先来看一段示例代码，初步了解 Receiver 是什么\n\n```kotlin\nimport java.lang.StringBuilder\n\nfun main() {\n    println(\"\".buildString {\n        this.append(\"a\")\n        append(\"b\")\n        append(\"c\")\n    })\n}\n\nfun String.buildString(action: StringBuilder.() -> Unit): String {\n    val sb = StringBuilder()\n    sb.action()\n    return sb.toString()\n}\n```\n上述代码可以为 String 增加一个扩展函数 buildString，可以直接在 buildString {} 作用域中使用 StringBuilder 的 append 或其他方法，省去了我们自己 new StringBuilder 的过程\n\n下面是对代码的详细解释\n![](./define_receiver.png)\n* 形如 T.() -> R 的函数，就是 Receiver 类型\n* 需要通过调用 [T的对象].() 的方式，来把 [T的对象] 作为 this 传到 lambda 作用域中\n\n![](./call_receiver.png)\n* 调用扩展函数时，可以显式用 this 访问传进来的对象\n* 也可隐式调用\n\n### 二、上述代码翻译成 java 是什么样的？\n\n通过 jadx 工具将 class 转为 java后，代码如下\n\n![](./jadx_1.png)\n\n* main 方法中原本的 lambda 被转为了 `buildString(\"\", ReceiverKt$main$1.INSTANCE)`，ReceiverKt$main$1 是什么我们稍后分析\n* buildString 方法接收了一个 Function1 类型的对象，证明 ReceiverKt$main$1 是 kt 帮我们生成的并且实现了 Function1\n* buildString 内部逻辑就是创建了一个 StringBuilder，然后调用 function1.invoke(sb)\n\n\n下面来看看 ReceiverKt$main$1 是什么\n![](./jadx_2.png)\n\n很简单，就是通过 invoke 调用我们 buildString lambda 里的内容\n\n### 三、另一个代码示例\n\n下面我们来看一段和上面例子很像的代码\n```kotlin\nfun main() {\n    println(\"\".buildString_ {sb: StringBuilder ->\n        sb.append(\"d\")\n        sb.append(\"e\")\n        sb.append(\"f\")\n    })\n}\n\nfun String.buildString_(action: (stringbuilder: StringBuilder) -> Unit): String {\n    val sb = StringBuilder()\n    action(sb)\n    return sb.toString()\n}\n```\n和第一段代码的区别是\n* buildString 参数变为了 (StringBuilder) -> Unit，我们将 StringBuilder 对象作为 lambda 的参数传入了\n* 调用的地方需要使用 it 或者自己定义一个参数名来使用 StringBuilder 对象\n\n这段代码转为 Java 后是什么样的呢？\n\n![](./jadx_3.png)\n\n![](./jadx_4.png)\n\n![](./jadx_5.png)\n\n可以看到使用 Receiver 的方式和使用给 lambda 函数定义参数的方式转为 Java 代码后只是在 invoke 参数的变量名有区别，仅此而已。\n\n### 四、小结\n\n1. 定义 lambda Receiver，调用方可以在 lambda 作用域中使用 this 访问 Receiver 对象\n2. 定义 lambda 带参函数，调用方可以在 lambda 作用域中自己定义对象变量名或者使用默认的 it\n3. 上述两种方式转为 Java 并没有什么本质区别，只是变量名上的不同\n\n### 五、kotlin 标准库里的操作符哪些用到了 Receiver？\n\n在了解 Receiver 的原理后，可以让我们更好地理解 kotlin 标准库里的操作符\n\n#### 1.apply\n\n```kotlin\n@kotlin.internal.InlineOnly\npublic inline fun <T> T.apply(block: T.() -> Unit): T {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    block()\n    return this\n}\n```\n使用 apply 后，我们可以在 lambda 使用 this，比如\n```kotlin\nval str = \"abc\"\nstr.apply { \n    println(this.length)\n}\n```\n\n#### 2.with\n```kotlin\n@kotlin.internal.InlineOnly\npublic inline fun <T, R> with(receiver: T, block: T.() -> R): R {\n    contract {\n        callsInPlace(block, InvocationKind.EXACTLY_ONCE)\n    }\n    return receiver.block()\n}\n```\nwith 和 apply 的区别是，需要把 receiver 显示地传给 with，比如\n\n```kotlin\nval str = \"abc\"\nwith(str) {\n    println(this.length)\n}\n```\n- - -\n\n**如需转载，请注明原文出处，谢谢！**\n\n","slug":"kt-receiver","published":1,"updated":"2022-01-22T16:47:10.945Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2pueu430006j6s65in9fbc9","content":"<h3 id=\"一、示例代码\"><a href=\"#一、示例代码\" class=\"headerlink\" title=\"一、示例代码\"></a>一、示例代码</h3><p>先来看一段示例代码，初步了解 Receiver 是什么</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    println(<span class=\"string\">&quot;&quot;</span>.buildString &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.append(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">        append(<span class=\"string\">&quot;b&quot;</span>)</span><br><span class=\"line\">        append(<span class=\"string\">&quot;c&quot;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> String.<span class=\"title\">buildString</span><span class=\"params\">(action: <span class=\"type\">StringBuilder</span>.() -&gt; <span class=\"type\">Unit</span>)</span></span>: String &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> sb = StringBuilder()</span><br><span class=\"line\">    sb.action()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sb.toString()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述代码可以为 String 增加一个扩展函数 buildString，可以直接在 buildString {} 作用域中使用 StringBuilder 的 append 或其他方法，省去了我们自己 new StringBuilder 的过程</p>\n<p>下面是对代码的详细解释<br><img src=\"/2022/01/22/kt-receiver/define_receiver.png\" class=\"\"></p>\n<ul>\n<li>形如 T.() -&gt; R 的函数，就是 Receiver 类型</li>\n<li>需要通过调用 [T的对象].() 的方式，来把 [T的对象] 作为 this 传到 lambda 作用域中</li>\n</ul>\n<img src=\"/2022/01/22/kt-receiver/call_receiver.png\" class=\"\">\n<ul>\n<li>调用扩展函数时，可以显式用 this 访问传进来的对象</li>\n<li>也可隐式调用</li>\n</ul>\n<h3 id=\"二、上述代码翻译成-java-是什么样的？\"><a href=\"#二、上述代码翻译成-java-是什么样的？\" class=\"headerlink\" title=\"二、上述代码翻译成 java 是什么样的？\"></a>二、上述代码翻译成 java 是什么样的？</h3><p>通过 jadx 工具将 class 转为 java后，代码如下</p>\n<img src=\"/2022/01/22/kt-receiver/jadx_1.png\" class=\"\">\n<ul>\n<li>main 方法中原本的 lambda 被转为了 <code>buildString(&quot;&quot;, ReceiverKt$main$1.INSTANCE)</code>，ReceiverKt$main$1 是什么我们稍后分析</li>\n<li>buildString 方法接收了一个 Function1 类型的对象，证明 ReceiverKt$main$1 是 kt 帮我们生成的并且实现了 Function1</li>\n<li>buildString 内部逻辑就是创建了一个 StringBuilder，然后调用 function1.invoke(sb)</li>\n</ul>\n<p>下面来看看 ReceiverKt$main$1 是什么<br><img src=\"/2022/01/22/kt-receiver/jadx_2.png\" class=\"\"></p>\n<p>很简单，就是通过 invoke 调用我们 buildString lambda 里的内容</p>\n<h3 id=\"三、另一个代码示例\"><a href=\"#三、另一个代码示例\" class=\"headerlink\" title=\"三、另一个代码示例\"></a>三、另一个代码示例</h3><p>下面我们来看一段和上面例子很像的代码<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    println(<span class=\"string\">&quot;&quot;</span>.buildString_ &#123;sb: StringBuilder -&gt;</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;d&quot;</span>)</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;e&quot;</span>)</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;f&quot;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> String.<span class=\"title\">buildString_</span><span class=\"params\">(action: (<span class=\"type\">stringbuilder</span>: <span class=\"type\">StringBuilder</span>) -&gt; <span class=\"type\">Unit</span>)</span></span>: String &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> sb = StringBuilder()</span><br><span class=\"line\">    action(sb)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sb.toString()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>和第一段代码的区别是</p>\n<ul>\n<li>buildString 参数变为了 (StringBuilder) -&gt; Unit，我们将 StringBuilder 对象作为 lambda 的参数传入了</li>\n<li>调用的地方需要使用 it 或者自己定义一个参数名来使用 StringBuilder 对象</li>\n</ul>\n<p>这段代码转为 Java 后是什么样的呢？</p>\n<img src=\"/2022/01/22/kt-receiver/jadx_3.png\" class=\"\">\n<img src=\"/2022/01/22/kt-receiver/jadx_4.png\" class=\"\">\n<img src=\"/2022/01/22/kt-receiver/jadx_5.png\" class=\"\">\n<p>可以看到使用 Receiver 的方式和使用给 lambda 函数定义参数的方式转为 Java 代码后只是在 invoke 参数的变量名有区别，仅此而已。</p>\n<h3 id=\"四、小结\"><a href=\"#四、小结\" class=\"headerlink\" title=\"四、小结\"></a>四、小结</h3><ol>\n<li>定义 lambda Receiver，调用方可以在 lambda 作用域中使用 this 访问 Receiver 对象</li>\n<li>定义 lambda 带参函数，调用方可以在 lambda 作用域中自己定义对象变量名或者使用默认的 it</li>\n<li>上述两种方式转为 Java 并没有什么本质区别，只是变量名上的不同</li>\n</ol>\n<h3 id=\"五、kotlin-标准库里的操作符哪些用到了-Receiver？\"><a href=\"#五、kotlin-标准库里的操作符哪些用到了-Receiver？\" class=\"headerlink\" title=\"五、kotlin 标准库里的操作符哪些用到了 Receiver？\"></a>五、kotlin 标准库里的操作符哪些用到了 Receiver？</h3><p>在了解 Receiver 的原理后，可以让我们更好地理解 kotlin 标准库里的操作符</p>\n<h4 id=\"1-apply\"><a href=\"#1-apply\" class=\"headerlink\" title=\"1.apply\"></a>1.apply</h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> T.<span class=\"title\">apply</span><span class=\"params\">(block: <span class=\"type\">T</span>.() -&gt; <span class=\"type\">Unit</span>)</span></span>: T &#123;</span><br><span class=\"line\">    contract &#123;</span><br><span class=\"line\">        callsInPlace(block, InvocationKind.EXACTLY_ONCE)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    block()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用 apply 后，我们可以在 lambda 使用 this，比如<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> str = <span class=\"string\">&quot;abc&quot;</span></span><br><span class=\"line\">str.apply &#123; </span><br><span class=\"line\">    println(<span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-with\"><a href=\"#2-with\" class=\"headerlink\" title=\"2.with\"></a>2.with</h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, R&gt;</span> <span class=\"title\">with</span><span class=\"params\">(receiver: <span class=\"type\">T</span>, block: <span class=\"type\">T</span>.() -&gt; <span class=\"type\">R</span>)</span></span>: R &#123;</span><br><span class=\"line\">    contract &#123;</span><br><span class=\"line\">        callsInPlace(block, InvocationKind.EXACTLY_ONCE)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> receiver.block()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>with 和 apply 的区别是，需要把 receiver 显示地传给 with，比如</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> str = <span class=\"string\">&quot;abc&quot;</span></span><br><span class=\"line\">with(str) &#123;</span><br><span class=\"line\">    println(<span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>如需转载，请注明原文出处，谢谢！</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h3 id=\"一、示例代码\"><a href=\"#一、示例代码\" class=\"headerlink\" title=\"一、示例代码\"></a>一、示例代码</h3><p>先来看一段示例代码，初步了解 Receiver 是什么</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.lang.StringBuilder</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    println(<span class=\"string\">&quot;&quot;</span>.buildString &#123;</span><br><span class=\"line\">        <span class=\"keyword\">this</span>.append(<span class=\"string\">&quot;a&quot;</span>)</span><br><span class=\"line\">        append(<span class=\"string\">&quot;b&quot;</span>)</span><br><span class=\"line\">        append(<span class=\"string\">&quot;c&quot;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> String.<span class=\"title\">buildString</span><span class=\"params\">(action: <span class=\"type\">StringBuilder</span>.() -&gt; <span class=\"type\">Unit</span>)</span></span>: String &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> sb = StringBuilder()</span><br><span class=\"line\">    sb.action()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sb.toString()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>上述代码可以为 String 增加一个扩展函数 buildString，可以直接在 buildString {} 作用域中使用 StringBuilder 的 append 或其他方法，省去了我们自己 new StringBuilder 的过程</p>\n<p>下面是对代码的详细解释<br><img src=\"/2022/01/22/kt-receiver/define_receiver.png\" class=\"\"></p>\n<ul>\n<li>形如 T.() -&gt; R 的函数，就是 Receiver 类型</li>\n<li>需要通过调用 [T的对象].() 的方式，来把 [T的对象] 作为 this 传到 lambda 作用域中</li>\n</ul>\n<img src=\"/2022/01/22/kt-receiver/call_receiver.png\" class=\"\">\n<ul>\n<li>调用扩展函数时，可以显式用 this 访问传进来的对象</li>\n<li>也可隐式调用</li>\n</ul>\n<h3 id=\"二、上述代码翻译成-java-是什么样的？\"><a href=\"#二、上述代码翻译成-java-是什么样的？\" class=\"headerlink\" title=\"二、上述代码翻译成 java 是什么样的？\"></a>二、上述代码翻译成 java 是什么样的？</h3><p>通过 jadx 工具将 class 转为 java后，代码如下</p>\n<img src=\"/2022/01/22/kt-receiver/jadx_1.png\" class=\"\">\n<ul>\n<li>main 方法中原本的 lambda 被转为了 <code>buildString(&quot;&quot;, ReceiverKt$main$1.INSTANCE)</code>，ReceiverKt$main$1 是什么我们稍后分析</li>\n<li>buildString 方法接收了一个 Function1 类型的对象，证明 ReceiverKt$main$1 是 kt 帮我们生成的并且实现了 Function1</li>\n<li>buildString 内部逻辑就是创建了一个 StringBuilder，然后调用 function1.invoke(sb)</li>\n</ul>\n<p>下面来看看 ReceiverKt$main$1 是什么<br><img src=\"/2022/01/22/kt-receiver/jadx_2.png\" class=\"\"></p>\n<p>很简单，就是通过 invoke 调用我们 buildString lambda 里的内容</p>\n<h3 id=\"三、另一个代码示例\"><a href=\"#三、另一个代码示例\" class=\"headerlink\" title=\"三、另一个代码示例\"></a>三、另一个代码示例</h3><p>下面我们来看一段和上面例子很像的代码<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">main</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    println(<span class=\"string\">&quot;&quot;</span>.buildString_ &#123;sb: StringBuilder -&gt;</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;d&quot;</span>)</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;e&quot;</span>)</span><br><span class=\"line\">        sb.append(<span class=\"string\">&quot;f&quot;</span>)</span><br><span class=\"line\">    &#125;)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> String.<span class=\"title\">buildString_</span><span class=\"params\">(action: (<span class=\"type\">stringbuilder</span>: <span class=\"type\">StringBuilder</span>) -&gt; <span class=\"type\">Unit</span>)</span></span>: String &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> sb = StringBuilder()</span><br><span class=\"line\">    action(sb)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> sb.toString()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>和第一段代码的区别是</p>\n<ul>\n<li>buildString 参数变为了 (StringBuilder) -&gt; Unit，我们将 StringBuilder 对象作为 lambda 的参数传入了</li>\n<li>调用的地方需要使用 it 或者自己定义一个参数名来使用 StringBuilder 对象</li>\n</ul>\n<p>这段代码转为 Java 后是什么样的呢？</p>\n<img src=\"/2022/01/22/kt-receiver/jadx_3.png\" class=\"\">\n<img src=\"/2022/01/22/kt-receiver/jadx_4.png\" class=\"\">\n<img src=\"/2022/01/22/kt-receiver/jadx_5.png\" class=\"\">\n<p>可以看到使用 Receiver 的方式和使用给 lambda 函数定义参数的方式转为 Java 代码后只是在 invoke 参数的变量名有区别，仅此而已。</p>\n<h3 id=\"四、小结\"><a href=\"#四、小结\" class=\"headerlink\" title=\"四、小结\"></a>四、小结</h3><ol>\n<li>定义 lambda Receiver，调用方可以在 lambda 作用域中使用 this 访问 Receiver 对象</li>\n<li>定义 lambda 带参函数，调用方可以在 lambda 作用域中自己定义对象变量名或者使用默认的 it</li>\n<li>上述两种方式转为 Java 并没有什么本质区别，只是变量名上的不同</li>\n</ol>\n<h3 id=\"五、kotlin-标准库里的操作符哪些用到了-Receiver？\"><a href=\"#五、kotlin-标准库里的操作符哪些用到了-Receiver？\" class=\"headerlink\" title=\"五、kotlin 标准库里的操作符哪些用到了 Receiver？\"></a>五、kotlin 标准库里的操作符哪些用到了 Receiver？</h3><p>在了解 Receiver 的原理后，可以让我们更好地理解 kotlin 标准库里的操作符</p>\n<h4 id=\"1-apply\"><a href=\"#1-apply\" class=\"headerlink\" title=\"1.apply\"></a>1.apply</h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> T.<span class=\"title\">apply</span><span class=\"params\">(block: <span class=\"type\">T</span>.() -&gt; <span class=\"type\">Unit</span>)</span></span>: T &#123;</span><br><span class=\"line\">    contract &#123;</span><br><span class=\"line\">        callsInPlace(block, InvocationKind.EXACTLY_ONCE)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    block()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>使用 apply 后，我们可以在 lambda 使用 this，比如<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> str = <span class=\"string\">&quot;abc&quot;</span></span><br><span class=\"line\">str.apply &#123; </span><br><span class=\"line\">    println(<span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure></p>\n<h4 id=\"2-with\"><a href=\"#2-with\" class=\"headerlink\" title=\"2.with\"></a>2.with</h4><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, R&gt;</span> <span class=\"title\">with</span><span class=\"params\">(receiver: <span class=\"type\">T</span>, block: <span class=\"type\">T</span>.() -&gt; <span class=\"type\">R</span>)</span></span>: R &#123;</span><br><span class=\"line\">    contract &#123;</span><br><span class=\"line\">        callsInPlace(block, InvocationKind.EXACTLY_ONCE)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> receiver.block()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>with 和 apply 的区别是，需要把 receiver 显示地传给 with，比如</p>\n<figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">val</span> str = <span class=\"string\">&quot;abc&quot;</span></span><br><span class=\"line\">with(str) &#123;</span><br><span class=\"line\">    println(<span class=\"keyword\">this</span>.length)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<hr>\n<p><strong>如需转载，请注明原文出处，谢谢！</strong></p>\n"},{"title":"Kotlin Sequence 原理","date":"2022-01-22T14:01:56.000Z","toc":true,"_content":"\n## 一、Sequence 和 List 的区别\n\n以下内容出自[官方示例](https://kotlinlang.org/docs/sequences.html#sequence)\n\n### 1. List\n```kotlin\nfun list() {\n    val words = \"The quick brown fox jumps over the lazy dog\".split(\" \")\n    val wordList = words.toList()\n    val lengthList = wordList.filter{ println(\"filter $it\"); it.length > 3}\n        .map { println(\"map ${it.length}\"); it.length }\n        .take(4)\n    println(\"Lengths of first 4 words longer than 3 chars\")\n    println(lengthList)\n}\n```\n运行结果如下\n```\nfilter The\nfilter quick\nfilter brown\nfilter fox\nfilter jumps\nfilter over\nfilter the\nfilter lazy\nfilter dog\nmap 5\nmap 5\nmap 5\nmap 4\nmap 4\nLengths of first 4 words longer than 3 chars\n[5, 5, 5, 4]\n```\n运行过程\n![](./list_words.png)\n\n### 2. Sequence\n\n```kotlin\nfun sequence() {\n    val words = \"The quick brown fox jumps over the lazy dog\".split(\" \")\n    val wordSeq = words.asSequence()\n    val lengthSeq = wordSeq\n        .filter {\n            println(\"filter $it\")\n            it.length > 3\n        }\n        .map {\n            println(\"map ${it.length}\")\n            it.length\n        }\n        .take(4)\n\n    println(\"Lengths of first 4 words longer than 3 chars\")\n    println(lengthSeq.toList())\n}\n```\n运行结果如下\n```\nLengths of first 4 words longer than 3 chars\nfilter The\nfilter quick\nmap 5\nfilter brown\nmap 5\nfilter fox\nfilter jumps\nmap 5\nfilter over\nmap 4\n[5, 5, 5, 4]\n```\n运行过程\n![](./sequence_words.png)\n\n### 3. 区别\n1. 直观来看，sequence 执行的步骤少于 list\n2. list 的操作符会立即执行，sequence 的操作符可以理解为**先声明**，后面执行 toList 的时候才会触发\n3. list filter 操作符处理了全量数据，然后 map 映射 filter 之后的所有数据，sequence 则是每条数据经过 filter -> map 流水线处理，不合格的数据不会向后执行\n\n## 二、Sequence 原理\n\n下面我们具体看看\n1. 为什么 sequence 能做到先声明，后触发\n2. 为什么 sequence 能实现流水线的效果，避免操作浪费\n\n下面的图描述了，声明操作符到触发流程的过程，我们逐一剖析每一步都做了什么\n![](./sequence.png)\n\n我们按照代码真正执行的顺序来分析，有助于理解，执行顺序正和我们声明操作的顺序相反\n\n### take & toList\n最后的操作符是 take(4)，然后将其转为了 List。  \n首先来看看 take\n```kotlin\n//take(4) 操作符其实对应的会生成一个 TakeSequence 对象\npublic fun <T> Sequence<T>.take(n: Int): Sequence<T> {\n    require(n >= 0) { \"Requested element count $n is less than zero.\" }\n    return when {\n        n == 0 -> emptySequence()\n        this is DropTakeSequence -> this.take(n)\n        else -> TakeSequence(this, n)\n    }\n}\n\ninternal class TakeSequence<T>(\n    private val sequence: Sequence<T>, //传入了上一个Sequence，也就是 map 对应的 Sequence\n    private val count: Int\n) : Sequence<T>, DropTakeSequence<T> {\n\n    init {\n        require(count >= 0) { \"count must be non-negative, but was $count.\" }\n    }\n\n    override fun drop(n: Int): Sequence<T> = if (n >= count) emptySequence() else SubSequence(sequence, n, count)\n    override fun take(n: Int): Sequence<T> = if (n >= count) this else TakeSequence(sequence, n)\n\n    override fun iterator(): Iterator<T> = object : Iterator<T> {\n        var left = count\n        val iterator = sequence.iterator() //map 对应的 Sequence 的 iterator\n\n        override fun next(): T {\n            if (left == 0)\n                throw NoSuchElementException()\n            left--\n            return iterator.next()\n        }\n\n        override fun hasNext(): Boolean { //通过 left，决定取 list 中的前几个数据\n            return left > 0 && iterator.hasNext() //看上一个 iterator 中是否有数据\n        }\n    }\n}\n```\n代码中的注释已经详细解释了逻辑，其中重点是：\n1. 操作符会对应一个 Sequence 对象去处理迭代逻辑\n2. TakeSequence 在构造的时候，传入了上一个 Sequence 对象\n3. TakeSequence 的 hasNext 返回什么取决于上一个 iterator 的 hasNext\n\n下面来看看 toList 做了什么\n```kotlin\npublic fun <T> Sequence<T>.toList(): List<T> {\n    return this.toMutableList().optimizeReadOnlyList()\n}\n\npublic fun <T, C : MutableCollection<in T>> Sequence<T>.toCollection(destination: C): C {\n    for (item in this) {\n        destination.add(item)\n    }\n    return destination\n}\n```\noptimizeReadOnlyList 只是做了一次类型转换，将 mutable 转为 immutable。\ntoMutableList 最终会调用到 toCollection，这里面就正式开始了 iterator 的逻辑，也就是走到了 TakeSequence 里面的迭代逻辑。\n\n从 TakeSequence 迭代逻辑里知道，它会继续调用上一个 Sequence 的迭代器逻辑，  \n所以，我们大致能猜出，Sequence 是通过类似责任链的方式，完成了流水线操作，我们继续分析。\n\n### map\n\n```kotlin\npublic fun <T, R> Sequence<T>.map(transform: (T) -> R): Sequence<R> {\n    return TransformingSequence(this, transform)\n}\n\ninternal class TransformingSequence<T, R>\nconstructor(\n    private val sequence: Sequence<T>, //传入了上一个 Sequence，filter 对应的 Sequence\n    private val transformer: (T) -> R) : Sequence<R> {\n    override fun iterator(): Iterator<R> = object : Iterator<R> {\n        val iterator = sequence.iterator()\n        override fun next(): R {\n            return transformer(iterator.next())//这里调用我们的 map 逻辑\n        }\n\n        override fun hasNext(): Boolean {\n            return iterator.hasNext() //调用了上一个 iterator 的 hasNext\n        }\n    }\n\n    internal fun <E> flatten(iterator: (R) -> Iterator<E>): Sequence<E> {\n        return FlatteningSequence<T, R, E>(sequence, transformer, iterator)\n    }\n}\n\n```\n果不其然，map 对应的 Sequence 是 TransformingSequence，并且迭代过程仍然会先调用上一个 Sequence 的 iterator，这基本印证了我们的猜想，继续分析。\n\n### filter\n\n```kotlin\npublic fun <T> Sequence<T>.filter(predicate: (T) -> Boolean): Sequence<T> {\n    return FilteringSequence(this, true, predicate)\n}\n\ninternal class FilteringSequence<T>(\n    private val sequence: Sequence<T>,//传入上一个 Sequence，asSequence\n    private val sendWhen: Boolean = true,\n    private val predicate: (T) -> Boolean\n) : Sequence<T> {\n    override fun iterator(): Iterator<T> = object : Iterator<T> {\n        val iterator = sequence.iterator() //上一个 Sequence 的 iterator\n        var nextState: Int = -1 \n        var nextItem: T? = null\n\n        private fun calcNext() {\n            while (iterator.hasNext()) {//上一个 iterator 是否有数据\n                val item = iterator.next()\n                if (predicate(item) == sendWhen) {//这里调用了我们的过滤逻辑\n                    nextItem = item\n                    nextState = 1\n                    return\n                }\n            }\n            nextState = 0\n        }\n\n        override fun next(): T {\n            if (nextState == -1)\n                calcNext()\n            if (nextState == 0)\n                throw NoSuchElementException()\n            val result = nextItem\n            nextItem = null\n            nextState = -1\n            @Suppress(\"UNCHECKED_CAST\")\n            return result as T\n        }\n\n        override fun hasNext(): Boolean {\n            if (nextState == -1)\n                calcNext()\n            return nextState == 1\n        }\n    }\n}\n```\n除了过滤逻辑和 map 不一致，其他是一样的。\n\n### asSequence\n\n```kotlin\npublic fun <T> Iterable<T>.asSequence(): Sequence<T> {\n    return Sequence { this.iterator() }\n}\n\n@kotlin.internal.InlineOnly\npublic inline fun <T> Sequence(crossinline iterator: () -> Iterator<T>): Sequence<T> = object : Sequence<T> {\n    override fun iterator(): Iterator<T> = iterator()\n}\n```\n源码比较简单，就是 new 了一个 Sequence 的匿名对象，并且将 list 的 iterator 作为参数传了进去。  \n所以，流水线最后调用的是 list 的 iterator。\n\n## 三、总结\n\n\n![](./sequence.png)\n\n再看开始的流程图，回答提出的两个问题\n\n### 1.为什么 sequence 能做到先声明，后触发\n\n因为操作符并不会触发迭代逻辑，只有最后的 toList 才会真正触发\n\n\n### 2.为什么 sequence 能实现流水线的效果，避免操作浪费\n\n因为我们在声明操作符的时候，将 Sequence 对象组装了成了一个链，迭代的时候会从最后一个声明的 iterator 递归地调到第一个声明的 iterator，保证执行顺序是我们声明的顺序。   \n并且，如果迭代的某一环不满足条件，就不会继续走到下一个迭代里，也就避免了操作的浪费。\n\n- - -\n\n**如需转载，请注明原文出处，谢谢！**\n","source":"_posts/kt-sequence.md","raw":"---\ntitle: Kotlin Sequence 原理\ndate: 2022-01-22 22:01:56\ncategories: Kotlin\ntags: Kotlin基础\ntoc: true\n---\n\n## 一、Sequence 和 List 的区别\n\n以下内容出自[官方示例](https://kotlinlang.org/docs/sequences.html#sequence)\n\n### 1. List\n```kotlin\nfun list() {\n    val words = \"The quick brown fox jumps over the lazy dog\".split(\" \")\n    val wordList = words.toList()\n    val lengthList = wordList.filter{ println(\"filter $it\"); it.length > 3}\n        .map { println(\"map ${it.length}\"); it.length }\n        .take(4)\n    println(\"Lengths of first 4 words longer than 3 chars\")\n    println(lengthList)\n}\n```\n运行结果如下\n```\nfilter The\nfilter quick\nfilter brown\nfilter fox\nfilter jumps\nfilter over\nfilter the\nfilter lazy\nfilter dog\nmap 5\nmap 5\nmap 5\nmap 4\nmap 4\nLengths of first 4 words longer than 3 chars\n[5, 5, 5, 4]\n```\n运行过程\n![](./list_words.png)\n\n### 2. Sequence\n\n```kotlin\nfun sequence() {\n    val words = \"The quick brown fox jumps over the lazy dog\".split(\" \")\n    val wordSeq = words.asSequence()\n    val lengthSeq = wordSeq\n        .filter {\n            println(\"filter $it\")\n            it.length > 3\n        }\n        .map {\n            println(\"map ${it.length}\")\n            it.length\n        }\n        .take(4)\n\n    println(\"Lengths of first 4 words longer than 3 chars\")\n    println(lengthSeq.toList())\n}\n```\n运行结果如下\n```\nLengths of first 4 words longer than 3 chars\nfilter The\nfilter quick\nmap 5\nfilter brown\nmap 5\nfilter fox\nfilter jumps\nmap 5\nfilter over\nmap 4\n[5, 5, 5, 4]\n```\n运行过程\n![](./sequence_words.png)\n\n### 3. 区别\n1. 直观来看，sequence 执行的步骤少于 list\n2. list 的操作符会立即执行，sequence 的操作符可以理解为**先声明**，后面执行 toList 的时候才会触发\n3. list filter 操作符处理了全量数据，然后 map 映射 filter 之后的所有数据，sequence 则是每条数据经过 filter -> map 流水线处理，不合格的数据不会向后执行\n\n## 二、Sequence 原理\n\n下面我们具体看看\n1. 为什么 sequence 能做到先声明，后触发\n2. 为什么 sequence 能实现流水线的效果，避免操作浪费\n\n下面的图描述了，声明操作符到触发流程的过程，我们逐一剖析每一步都做了什么\n![](./sequence.png)\n\n我们按照代码真正执行的顺序来分析，有助于理解，执行顺序正和我们声明操作的顺序相反\n\n### take & toList\n最后的操作符是 take(4)，然后将其转为了 List。  \n首先来看看 take\n```kotlin\n//take(4) 操作符其实对应的会生成一个 TakeSequence 对象\npublic fun <T> Sequence<T>.take(n: Int): Sequence<T> {\n    require(n >= 0) { \"Requested element count $n is less than zero.\" }\n    return when {\n        n == 0 -> emptySequence()\n        this is DropTakeSequence -> this.take(n)\n        else -> TakeSequence(this, n)\n    }\n}\n\ninternal class TakeSequence<T>(\n    private val sequence: Sequence<T>, //传入了上一个Sequence，也就是 map 对应的 Sequence\n    private val count: Int\n) : Sequence<T>, DropTakeSequence<T> {\n\n    init {\n        require(count >= 0) { \"count must be non-negative, but was $count.\" }\n    }\n\n    override fun drop(n: Int): Sequence<T> = if (n >= count) emptySequence() else SubSequence(sequence, n, count)\n    override fun take(n: Int): Sequence<T> = if (n >= count) this else TakeSequence(sequence, n)\n\n    override fun iterator(): Iterator<T> = object : Iterator<T> {\n        var left = count\n        val iterator = sequence.iterator() //map 对应的 Sequence 的 iterator\n\n        override fun next(): T {\n            if (left == 0)\n                throw NoSuchElementException()\n            left--\n            return iterator.next()\n        }\n\n        override fun hasNext(): Boolean { //通过 left，决定取 list 中的前几个数据\n            return left > 0 && iterator.hasNext() //看上一个 iterator 中是否有数据\n        }\n    }\n}\n```\n代码中的注释已经详细解释了逻辑，其中重点是：\n1. 操作符会对应一个 Sequence 对象去处理迭代逻辑\n2. TakeSequence 在构造的时候，传入了上一个 Sequence 对象\n3. TakeSequence 的 hasNext 返回什么取决于上一个 iterator 的 hasNext\n\n下面来看看 toList 做了什么\n```kotlin\npublic fun <T> Sequence<T>.toList(): List<T> {\n    return this.toMutableList().optimizeReadOnlyList()\n}\n\npublic fun <T, C : MutableCollection<in T>> Sequence<T>.toCollection(destination: C): C {\n    for (item in this) {\n        destination.add(item)\n    }\n    return destination\n}\n```\noptimizeReadOnlyList 只是做了一次类型转换，将 mutable 转为 immutable。\ntoMutableList 最终会调用到 toCollection，这里面就正式开始了 iterator 的逻辑，也就是走到了 TakeSequence 里面的迭代逻辑。\n\n从 TakeSequence 迭代逻辑里知道，它会继续调用上一个 Sequence 的迭代器逻辑，  \n所以，我们大致能猜出，Sequence 是通过类似责任链的方式，完成了流水线操作，我们继续分析。\n\n### map\n\n```kotlin\npublic fun <T, R> Sequence<T>.map(transform: (T) -> R): Sequence<R> {\n    return TransformingSequence(this, transform)\n}\n\ninternal class TransformingSequence<T, R>\nconstructor(\n    private val sequence: Sequence<T>, //传入了上一个 Sequence，filter 对应的 Sequence\n    private val transformer: (T) -> R) : Sequence<R> {\n    override fun iterator(): Iterator<R> = object : Iterator<R> {\n        val iterator = sequence.iterator()\n        override fun next(): R {\n            return transformer(iterator.next())//这里调用我们的 map 逻辑\n        }\n\n        override fun hasNext(): Boolean {\n            return iterator.hasNext() //调用了上一个 iterator 的 hasNext\n        }\n    }\n\n    internal fun <E> flatten(iterator: (R) -> Iterator<E>): Sequence<E> {\n        return FlatteningSequence<T, R, E>(sequence, transformer, iterator)\n    }\n}\n\n```\n果不其然，map 对应的 Sequence 是 TransformingSequence，并且迭代过程仍然会先调用上一个 Sequence 的 iterator，这基本印证了我们的猜想，继续分析。\n\n### filter\n\n```kotlin\npublic fun <T> Sequence<T>.filter(predicate: (T) -> Boolean): Sequence<T> {\n    return FilteringSequence(this, true, predicate)\n}\n\ninternal class FilteringSequence<T>(\n    private val sequence: Sequence<T>,//传入上一个 Sequence，asSequence\n    private val sendWhen: Boolean = true,\n    private val predicate: (T) -> Boolean\n) : Sequence<T> {\n    override fun iterator(): Iterator<T> = object : Iterator<T> {\n        val iterator = sequence.iterator() //上一个 Sequence 的 iterator\n        var nextState: Int = -1 \n        var nextItem: T? = null\n\n        private fun calcNext() {\n            while (iterator.hasNext()) {//上一个 iterator 是否有数据\n                val item = iterator.next()\n                if (predicate(item) == sendWhen) {//这里调用了我们的过滤逻辑\n                    nextItem = item\n                    nextState = 1\n                    return\n                }\n            }\n            nextState = 0\n        }\n\n        override fun next(): T {\n            if (nextState == -1)\n                calcNext()\n            if (nextState == 0)\n                throw NoSuchElementException()\n            val result = nextItem\n            nextItem = null\n            nextState = -1\n            @Suppress(\"UNCHECKED_CAST\")\n            return result as T\n        }\n\n        override fun hasNext(): Boolean {\n            if (nextState == -1)\n                calcNext()\n            return nextState == 1\n        }\n    }\n}\n```\n除了过滤逻辑和 map 不一致，其他是一样的。\n\n### asSequence\n\n```kotlin\npublic fun <T> Iterable<T>.asSequence(): Sequence<T> {\n    return Sequence { this.iterator() }\n}\n\n@kotlin.internal.InlineOnly\npublic inline fun <T> Sequence(crossinline iterator: () -> Iterator<T>): Sequence<T> = object : Sequence<T> {\n    override fun iterator(): Iterator<T> = iterator()\n}\n```\n源码比较简单，就是 new 了一个 Sequence 的匿名对象，并且将 list 的 iterator 作为参数传了进去。  \n所以，流水线最后调用的是 list 的 iterator。\n\n## 三、总结\n\n\n![](./sequence.png)\n\n再看开始的流程图，回答提出的两个问题\n\n### 1.为什么 sequence 能做到先声明，后触发\n\n因为操作符并不会触发迭代逻辑，只有最后的 toList 才会真正触发\n\n\n### 2.为什么 sequence 能实现流水线的效果，避免操作浪费\n\n因为我们在声明操作符的时候，将 Sequence 对象组装了成了一个链，迭代的时候会从最后一个声明的 iterator 递归地调到第一个声明的 iterator，保证执行顺序是我们声明的顺序。   \n并且，如果迭代的某一环不满足条件，就不会继续走到下一个迭代里，也就避免了操作的浪费。\n\n- - -\n\n**如需转载，请注明原文出处，谢谢！**\n","slug":"kt-sequence","published":1,"updated":"2022-01-22T16:47:05.055Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cl2pueu440008j6s6f9sj5k2u","content":"<h2 id=\"一、Sequence-和-List-的区别\"><a href=\"#一、Sequence-和-List-的区别\" class=\"headerlink\" title=\"一、Sequence 和 List 的区别\"></a>一、Sequence 和 List 的区别</h2><p>以下内容出自<a href=\"https://kotlinlang.org/docs/sequences.html#sequence\">官方示例</a></p>\n<h3 id=\"1-List\"><a href=\"#1-List\" class=\"headerlink\" title=\"1. List\"></a>1. List</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">list</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> words = <span class=\"string\">&quot;The quick brown fox jumps over the lazy dog&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">val</span> wordList = words.toList()</span><br><span class=\"line\">    <span class=\"keyword\">val</span> lengthList = wordList.filter&#123; println(<span class=\"string\">&quot;filter <span class=\"variable\">$it</span>&quot;</span>); it.length &gt; <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">        .map &#123; println(<span class=\"string\">&quot;map <span class=\"subst\">$&#123;it.length&#125;</span>&quot;</span>); it.length &#125;</span><br><span class=\"line\">        .take(<span class=\"number\">4</span>)</span><br><span class=\"line\">    println(<span class=\"string\">&quot;Lengths of first 4 words longer than 3 chars&quot;</span>)</span><br><span class=\"line\">    println(lengthList)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter The</span><br><span class=\"line\">filter quick</span><br><span class=\"line\">filter brown</span><br><span class=\"line\">filter fox</span><br><span class=\"line\">filter jumps</span><br><span class=\"line\">filter over</span><br><span class=\"line\">filter the</span><br><span class=\"line\">filter lazy</span><br><span class=\"line\">filter dog</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 4</span><br><span class=\"line\">map 4</span><br><span class=\"line\">Lengths of first 4 words longer than 3 chars</span><br><span class=\"line\">[5, 5, 5, 4]</span><br></pre></td></tr></table></figure><br>运行过程<br><img src=\"/2022/01/22/kt-sequence/list_words.png\" class=\"\"></p>\n<h3 id=\"2-Sequence\"><a href=\"#2-Sequence\" class=\"headerlink\" title=\"2. Sequence\"></a>2. Sequence</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">sequence</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> words = <span class=\"string\">&quot;The quick brown fox jumps over the lazy dog&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">val</span> wordSeq = words.asSequence()</span><br><span class=\"line\">    <span class=\"keyword\">val</span> lengthSeq = wordSeq</span><br><span class=\"line\">        .filter &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;filter <span class=\"variable\">$it</span>&quot;</span>)</span><br><span class=\"line\">            it.length &gt; <span class=\"number\">3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .map &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;map <span class=\"subst\">$&#123;it.length&#125;</span>&quot;</span>)</span><br><span class=\"line\">            it.length</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .take(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    println(<span class=\"string\">&quot;Lengths of first 4 words longer than 3 chars&quot;</span>)</span><br><span class=\"line\">    println(lengthSeq.toList())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lengths of first 4 words longer than 3 chars</span><br><span class=\"line\">filter The</span><br><span class=\"line\">filter quick</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter brown</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter fox</span><br><span class=\"line\">filter jumps</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter over</span><br><span class=\"line\">map 4</span><br><span class=\"line\">[5, 5, 5, 4]</span><br></pre></td></tr></table></figure><br>运行过程<br><img src=\"/2022/01/22/kt-sequence/sequence_words.png\" class=\"\"></p>\n<h3 id=\"3-区别\"><a href=\"#3-区别\" class=\"headerlink\" title=\"3. 区别\"></a>3. 区别</h3><ol>\n<li>直观来看，sequence 执行的步骤少于 list</li>\n<li>list 的操作符会立即执行，sequence 的操作符可以理解为<strong>先声明</strong>，后面执行 toList 的时候才会触发</li>\n<li>list filter 操作符处理了全量数据，然后 map 映射 filter 之后的所有数据，sequence 则是每条数据经过 filter -&gt; map 流水线处理，不合格的数据不会向后执行</li>\n</ol>\n<h2 id=\"二、Sequence-原理\"><a href=\"#二、Sequence-原理\" class=\"headerlink\" title=\"二、Sequence 原理\"></a>二、Sequence 原理</h2><p>下面我们具体看看</p>\n<ol>\n<li>为什么 sequence 能做到先声明，后触发</li>\n<li>为什么 sequence 能实现流水线的效果，避免操作浪费</li>\n</ol>\n<p>下面的图描述了，声明操作符到触发流程的过程，我们逐一剖析每一步都做了什么<br><img src=\"/2022/01/22/kt-sequence/sequence.png\" class=\"\"></p>\n<p>我们按照代码真正执行的顺序来分析，有助于理解，执行顺序正和我们声明操作的顺序相反</p>\n<h3 id=\"take-amp-toList\"><a href=\"#take-amp-toList\" class=\"headerlink\" title=\"take &amp; toList\"></a>take &amp; toList</h3><p>最后的操作符是 take(4)，然后将其转为了 List。<br>首先来看看 take<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//take(4) 操作符其实对应的会生成一个 TakeSequence 对象</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">take</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    require(n &gt;= <span class=\"number\">0</span>) &#123; <span class=\"string\">&quot;Requested element count <span class=\"variable\">$n</span> is less than zero.&quot;</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">when</span> &#123;</span><br><span class=\"line\">        n == <span class=\"number\">0</span> -&gt; emptySequence()</span><br><span class=\"line\">        <span class=\"keyword\">this</span> <span class=\"keyword\">is</span> DropTakeSequence -&gt; <span class=\"keyword\">this</span>.take(n)</span><br><span class=\"line\">        <span class=\"keyword\">else</span> -&gt; TakeSequence(<span class=\"keyword\">this</span>, n)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TakeSequence</span>&lt;<span class=\"type\">T</span>&gt;</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;, <span class=\"comment\">//传入了上一个Sequence，也就是 map 对应的 Sequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> count: <span class=\"built_in\">Int</span></span><br><span class=\"line\">) : Sequence&lt;T&gt;, DropTakeSequence&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span> &#123;</span><br><span class=\"line\">        require(count &gt;= <span class=\"number\">0</span>) &#123; <span class=\"string\">&quot;count must be non-negative, but was <span class=\"variable\">$count</span>.&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">drop</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">if</span> (n &gt;= count) emptySequence() <span class=\"keyword\">else</span> SubSequence(sequence, n, count)</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">take</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">if</span> (n &gt;= count) <span class=\"keyword\">this</span> <span class=\"keyword\">else</span> TakeSequence(sequence, n)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = <span class=\"keyword\">object</span> : Iterator&lt;T&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> left = count</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator() <span class=\"comment\">//map 对应的 Sequence 的 iterator</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: T &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> NoSuchElementException()</span><br><span class=\"line\">            left--</span><br><span class=\"line\">            <span class=\"keyword\">return</span> iterator.next()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123; <span class=\"comment\">//通过 left，决定取 list 中的前几个数据</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> left &gt; <span class=\"number\">0</span> &amp;&amp; iterator.hasNext() <span class=\"comment\">//看上一个 iterator 中是否有数据</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>代码中的注释已经详细解释了逻辑，其中重点是：</p>\n<ol>\n<li>操作符会对应一个 Sequence 对象去处理迭代逻辑</li>\n<li>TakeSequence 在构造的时候，传入了上一个 Sequence 对象</li>\n<li>TakeSequence 的 hasNext 返回什么取决于上一个 iterator 的 hasNext</li>\n</ol>\n<p>下面来看看 toList 做了什么<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">toList</span><span class=\"params\">()</span></span>: List&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.toMutableList().optimizeReadOnlyList()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, C : MutableCollection&lt;in T&gt;</span>&gt; Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">toCollection</span><span class=\"params\">(destination: <span class=\"type\">C</span>)</span></span>: C &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (item <span class=\"keyword\">in</span> <span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        destination.add(item)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> destination</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>optimizeReadOnlyList 只是做了一次类型转换，将 mutable 转为 immutable。<br>toMutableList 最终会调用到 toCollection，这里面就正式开始了 iterator 的逻辑，也就是走到了 TakeSequence 里面的迭代逻辑。</p>\n<p>从 TakeSequence 迭代逻辑里知道，它会继续调用上一个 Sequence 的迭代器逻辑，<br>所以，我们大致能猜出，Sequence 是通过类似责任链的方式，完成了流水线操作，我们继续分析。</p>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, R&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">map</span><span class=\"params\">(transform: (<span class=\"type\">T</span>) -&gt; <span class=\"type\">R</span>)</span></span>: Sequence&lt;R&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> TransformingSequence(<span class=\"keyword\">this</span>, transform)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TransformingSequence</span>&lt;<span class=\"type\">T, R</span>&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">constructor</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;, <span class=\"comment\">//传入了上一个 Sequence，filter 对应的 Sequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> transformer: (T) -&gt; R) : Sequence&lt;R&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;R&gt; = <span class=\"keyword\">object</span> : Iterator&lt;R&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator()</span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: R &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> transformer(iterator.next())<span class=\"comment\">//这里调用我们的 map 逻辑</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> iterator.hasNext() <span class=\"comment\">//调用了上一个 iterator 的 hasNext</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">internal</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;E&gt;</span> <span class=\"title\">flatten</span><span class=\"params\">(iterator: (<span class=\"type\">R</span>) -&gt; <span class=\"type\">Iterator</span>&lt;<span class=\"type\">E</span>&gt;)</span></span>: Sequence&lt;E&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FlatteningSequence&lt;T, R, E&gt;(sequence, transformer, iterator)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>果不其然，map 对应的 Sequence 是 TransformingSequence，并且迭代过程仍然会先调用上一个 Sequence 的 iterator，这基本印证了我们的猜想，继续分析。</p>\n<h3 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">filter</span><span class=\"params\">(predicate: (<span class=\"type\">T</span>) -&gt; <span class=\"type\">Boolean</span>)</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> FilteringSequence(<span class=\"keyword\">this</span>, <span class=\"literal\">true</span>, predicate)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilteringSequence</span>&lt;<span class=\"type\">T</span>&gt;</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;,<span class=\"comment\">//传入上一个 Sequence，asSequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sendWhen: <span class=\"built_in\">Boolean</span> = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> predicate: (T) -&gt; <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">) : Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = <span class=\"keyword\">object</span> : Iterator&lt;T&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator() <span class=\"comment\">//上一个 Sequence 的 iterator</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> nextState: <span class=\"built_in\">Int</span> = -<span class=\"number\">1</span> </span><br><span class=\"line\">        <span class=\"keyword\">var</span> nextItem: T? = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">calcNext</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;<span class=\"comment\">//上一个 iterator 是否有数据</span></span><br><span class=\"line\">                <span class=\"keyword\">val</span> item = iterator.next()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (predicate(item) == sendWhen) &#123;<span class=\"comment\">//这里调用了我们的过滤逻辑</span></span><br><span class=\"line\">                    nextItem = item</span><br><span class=\"line\">                    nextState = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            nextState = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: T &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == -<span class=\"number\">1</span>)</span><br><span class=\"line\">                calcNext()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> NoSuchElementException()</span><br><span class=\"line\">            <span class=\"keyword\">val</span> result = nextItem</span><br><span class=\"line\">            nextItem = <span class=\"literal\">null</span></span><br><span class=\"line\">            nextState = -<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"meta\">@Suppress(<span class=\"meta-string\">&quot;UNCHECKED_CAST&quot;</span>)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> result <span class=\"keyword\">as</span> T</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == -<span class=\"number\">1</span>)</span><br><span class=\"line\">                calcNext()</span><br><span class=\"line\">            <span class=\"keyword\">return</span> nextState == <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>除了过滤逻辑和 map 不一致，其他是一样的。</p>\n<h3 id=\"asSequence\"><a href=\"#asSequence\" class=\"headerlink\" title=\"asSequence\"></a>asSequence</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Iterable<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">asSequence</span><span class=\"params\">()</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Sequence &#123; <span class=\"keyword\">this</span>.iterator() &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> <span class=\"title\">Sequence</span><span class=\"params\">(<span class=\"keyword\">crossinline</span> iterator: () -&gt; <span class=\"type\">Iterator</span>&lt;<span class=\"type\">T</span>&gt;)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">object</span> : Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = iterator()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>源码比较简单，就是 new 了一个 Sequence 的匿名对象，并且将 list 的 iterator 作为参数传了进去。<br>所以，流水线最后调用的是 list 的 iterator。</p>\n<h2 id=\"三、总结\"><a href=\"#三、总结\" class=\"headerlink\" title=\"三、总结\"></a>三、总结</h2><img src=\"/2022/01/22/kt-sequence/sequence.png\" class=\"\">\n<p>再看开始的流程图，回答提出的两个问题</p>\n<h3 id=\"1-为什么-sequence-能做到先声明，后触发\"><a href=\"#1-为什么-sequence-能做到先声明，后触发\" class=\"headerlink\" title=\"1.为什么 sequence 能做到先声明，后触发\"></a>1.为什么 sequence 能做到先声明，后触发</h3><p>因为操作符并不会触发迭代逻辑，只有最后的 toList 才会真正触发</p>\n<h3 id=\"2-为什么-sequence-能实现流水线的效果，避免操作浪费\"><a href=\"#2-为什么-sequence-能实现流水线的效果，避免操作浪费\" class=\"headerlink\" title=\"2.为什么 sequence 能实现流水线的效果，避免操作浪费\"></a>2.为什么 sequence 能实现流水线的效果，避免操作浪费</h3><p>因为我们在声明操作符的时候，将 Sequence 对象组装了成了一个链，迭代的时候会从最后一个声明的 iterator 递归地调到第一个声明的 iterator，保证执行顺序是我们声明的顺序。<br>并且，如果迭代的某一环不满足条件，就不会继续走到下一个迭代里，也就避免了操作的浪费。</p>\n<hr>\n<p><strong>如需转载，请注明原文出处，谢谢！</strong></p>\n","site":{"data":{}},"excerpt":"","more":"<h2 id=\"一、Sequence-和-List-的区别\"><a href=\"#一、Sequence-和-List-的区别\" class=\"headerlink\" title=\"一、Sequence 和 List 的区别\"></a>一、Sequence 和 List 的区别</h2><p>以下内容出自<a href=\"https://kotlinlang.org/docs/sequences.html#sequence\">官方示例</a></p>\n<h3 id=\"1-List\"><a href=\"#1-List\" class=\"headerlink\" title=\"1. List\"></a>1. List</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">list</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> words = <span class=\"string\">&quot;The quick brown fox jumps over the lazy dog&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">val</span> wordList = words.toList()</span><br><span class=\"line\">    <span class=\"keyword\">val</span> lengthList = wordList.filter&#123; println(<span class=\"string\">&quot;filter <span class=\"variable\">$it</span>&quot;</span>); it.length &gt; <span class=\"number\">3</span>&#125;</span><br><span class=\"line\">        .map &#123; println(<span class=\"string\">&quot;map <span class=\"subst\">$&#123;it.length&#125;</span>&quot;</span>); it.length &#125;</span><br><span class=\"line\">        .take(<span class=\"number\">4</span>)</span><br><span class=\"line\">    println(<span class=\"string\">&quot;Lengths of first 4 words longer than 3 chars&quot;</span>)</span><br><span class=\"line\">    println(lengthList)</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">filter The</span><br><span class=\"line\">filter quick</span><br><span class=\"line\">filter brown</span><br><span class=\"line\">filter fox</span><br><span class=\"line\">filter jumps</span><br><span class=\"line\">filter over</span><br><span class=\"line\">filter the</span><br><span class=\"line\">filter lazy</span><br><span class=\"line\">filter dog</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 5</span><br><span class=\"line\">map 4</span><br><span class=\"line\">map 4</span><br><span class=\"line\">Lengths of first 4 words longer than 3 chars</span><br><span class=\"line\">[5, 5, 5, 4]</span><br></pre></td></tr></table></figure><br>运行过程<br><img src=\"/2022/01/22/kt-sequence/list_words.png\" class=\"\"></p>\n<h3 id=\"2-Sequence\"><a href=\"#2-Sequence\" class=\"headerlink\" title=\"2. Sequence\"></a>2. Sequence</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">sequence</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">val</span> words = <span class=\"string\">&quot;The quick brown fox jumps over the lazy dog&quot;</span>.split(<span class=\"string\">&quot; &quot;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">val</span> wordSeq = words.asSequence()</span><br><span class=\"line\">    <span class=\"keyword\">val</span> lengthSeq = wordSeq</span><br><span class=\"line\">        .filter &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;filter <span class=\"variable\">$it</span>&quot;</span>)</span><br><span class=\"line\">            it.length &gt; <span class=\"number\">3</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .map &#123;</span><br><span class=\"line\">            println(<span class=\"string\">&quot;map <span class=\"subst\">$&#123;it.length&#125;</span>&quot;</span>)</span><br><span class=\"line\">            it.length</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        .take(<span class=\"number\">4</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    println(<span class=\"string\">&quot;Lengths of first 4 words longer than 3 chars&quot;</span>)</span><br><span class=\"line\">    println(lengthSeq.toList())</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果如下<br><figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Lengths of first 4 words longer than 3 chars</span><br><span class=\"line\">filter The</span><br><span class=\"line\">filter quick</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter brown</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter fox</span><br><span class=\"line\">filter jumps</span><br><span class=\"line\">map 5</span><br><span class=\"line\">filter over</span><br><span class=\"line\">map 4</span><br><span class=\"line\">[5, 5, 5, 4]</span><br></pre></td></tr></table></figure><br>运行过程<br><img src=\"/2022/01/22/kt-sequence/sequence_words.png\" class=\"\"></p>\n<h3 id=\"3-区别\"><a href=\"#3-区别\" class=\"headerlink\" title=\"3. 区别\"></a>3. 区别</h3><ol>\n<li>直观来看，sequence 执行的步骤少于 list</li>\n<li>list 的操作符会立即执行，sequence 的操作符可以理解为<strong>先声明</strong>，后面执行 toList 的时候才会触发</li>\n<li>list filter 操作符处理了全量数据，然后 map 映射 filter 之后的所有数据，sequence 则是每条数据经过 filter -&gt; map 流水线处理，不合格的数据不会向后执行</li>\n</ol>\n<h2 id=\"二、Sequence-原理\"><a href=\"#二、Sequence-原理\" class=\"headerlink\" title=\"二、Sequence 原理\"></a>二、Sequence 原理</h2><p>下面我们具体看看</p>\n<ol>\n<li>为什么 sequence 能做到先声明，后触发</li>\n<li>为什么 sequence 能实现流水线的效果，避免操作浪费</li>\n</ol>\n<p>下面的图描述了，声明操作符到触发流程的过程，我们逐一剖析每一步都做了什么<br><img src=\"/2022/01/22/kt-sequence/sequence.png\" class=\"\"></p>\n<p>我们按照代码真正执行的顺序来分析，有助于理解，执行顺序正和我们声明操作的顺序相反</p>\n<h3 id=\"take-amp-toList\"><a href=\"#take-amp-toList\" class=\"headerlink\" title=\"take &amp; toList\"></a>take &amp; toList</h3><p>最后的操作符是 take(4)，然后将其转为了 List。<br>首先来看看 take<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">//take(4) 操作符其实对应的会生成一个 TakeSequence 对象</span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">take</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    require(n &gt;= <span class=\"number\">0</span>) &#123; <span class=\"string\">&quot;Requested element count <span class=\"variable\">$n</span> is less than zero.&quot;</span> &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">when</span> &#123;</span><br><span class=\"line\">        n == <span class=\"number\">0</span> -&gt; emptySequence()</span><br><span class=\"line\">        <span class=\"keyword\">this</span> <span class=\"keyword\">is</span> DropTakeSequence -&gt; <span class=\"keyword\">this</span>.take(n)</span><br><span class=\"line\">        <span class=\"keyword\">else</span> -&gt; TakeSequence(<span class=\"keyword\">this</span>, n)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TakeSequence</span>&lt;<span class=\"type\">T</span>&gt;</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;, <span class=\"comment\">//传入了上一个Sequence，也就是 map 对应的 Sequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> count: <span class=\"built_in\">Int</span></span><br><span class=\"line\">) : Sequence&lt;T&gt;, DropTakeSequence&lt;T&gt; &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">init</span> &#123;</span><br><span class=\"line\">        require(count &gt;= <span class=\"number\">0</span>) &#123; <span class=\"string\">&quot;count must be non-negative, but was <span class=\"variable\">$count</span>.&quot;</span> &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">drop</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">if</span> (n &gt;= count) emptySequence() <span class=\"keyword\">else</span> SubSequence(sequence, n, count)</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">take</span><span class=\"params\">(n: <span class=\"type\">Int</span>)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">if</span> (n &gt;= count) <span class=\"keyword\">this</span> <span class=\"keyword\">else</span> TakeSequence(sequence, n)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = <span class=\"keyword\">object</span> : Iterator&lt;T&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> left = count</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator() <span class=\"comment\">//map 对应的 Sequence 的 iterator</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: T &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (left == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> NoSuchElementException()</span><br><span class=\"line\">            left--</span><br><span class=\"line\">            <span class=\"keyword\">return</span> iterator.next()</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123; <span class=\"comment\">//通过 left，决定取 list 中的前几个数据</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> left &gt; <span class=\"number\">0</span> &amp;&amp; iterator.hasNext() <span class=\"comment\">//看上一个 iterator 中是否有数据</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>代码中的注释已经详细解释了逻辑，其中重点是：</p>\n<ol>\n<li>操作符会对应一个 Sequence 对象去处理迭代逻辑</li>\n<li>TakeSequence 在构造的时候，传入了上一个 Sequence 对象</li>\n<li>TakeSequence 的 hasNext 返回什么取决于上一个 iterator 的 hasNext</li>\n</ol>\n<p>下面来看看 toList 做了什么<br><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">toList</span><span class=\"params\">()</span></span>: List&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"keyword\">this</span>.toMutableList().optimizeReadOnlyList()</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, C : MutableCollection&lt;in T&gt;</span>&gt; Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">toCollection</span><span class=\"params\">(destination: <span class=\"type\">C</span>)</span></span>: C &#123;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> (item <span class=\"keyword\">in</span> <span class=\"keyword\">this</span>) &#123;</span><br><span class=\"line\">        destination.add(item)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> destination</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure><br>optimizeReadOnlyList 只是做了一次类型转换，将 mutable 转为 immutable。<br>toMutableList 最终会调用到 toCollection，这里面就正式开始了 iterator 的逻辑，也就是走到了 TakeSequence 里面的迭代逻辑。</p>\n<p>从 TakeSequence 迭代逻辑里知道，它会继续调用上一个 Sequence 的迭代器逻辑，<br>所以，我们大致能猜出，Sequence 是通过类似责任链的方式，完成了流水线操作，我们继续分析。</p>\n<h3 id=\"map\"><a href=\"#map\" class=\"headerlink\" title=\"map\"></a>map</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T, R&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">map</span><span class=\"params\">(transform: (<span class=\"type\">T</span>) -&gt; <span class=\"type\">R</span>)</span></span>: Sequence&lt;R&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> TransformingSequence(<span class=\"keyword\">this</span>, transform)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">TransformingSequence</span>&lt;<span class=\"type\">T, R</span>&gt;</span></span><br><span class=\"line\"><span class=\"keyword\">constructor</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;, <span class=\"comment\">//传入了上一个 Sequence，filter 对应的 Sequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> transformer: (T) -&gt; R) : Sequence&lt;R&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;R&gt; = <span class=\"keyword\">object</span> : Iterator&lt;R&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator()</span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: R &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> transformer(iterator.next())<span class=\"comment\">//这里调用我们的 map 逻辑</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> iterator.hasNext() <span class=\"comment\">//调用了上一个 iterator 的 hasNext</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">internal</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;E&gt;</span> <span class=\"title\">flatten</span><span class=\"params\">(iterator: (<span class=\"type\">R</span>) -&gt; <span class=\"type\">Iterator</span>&lt;<span class=\"type\">E</span>&gt;)</span></span>: Sequence&lt;E&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> FlatteningSequence&lt;T, R, E&gt;(sequence, transformer, iterator)</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>果不其然，map 对应的 Sequence 是 TransformingSequence，并且迭代过程仍然会先调用上一个 Sequence 的 iterator，这基本印证了我们的猜想，继续分析。</p>\n<h3 id=\"filter\"><a href=\"#filter\" class=\"headerlink\" title=\"filter\"></a>filter</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Sequence<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">filter</span><span class=\"params\">(predicate: (<span class=\"type\">T</span>) -&gt; <span class=\"type\">Boolean</span>)</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> FilteringSequence(<span class=\"keyword\">this</span>, <span class=\"literal\">true</span>, predicate)</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">internal</span> <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">FilteringSequence</span>&lt;<span class=\"type\">T</span>&gt;</span>(</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sequence: Sequence&lt;T&gt;,<span class=\"comment\">//传入上一个 Sequence，asSequence</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> sendWhen: <span class=\"built_in\">Boolean</span> = <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">val</span> predicate: (T) -&gt; <span class=\"built_in\">Boolean</span></span><br><span class=\"line\">) : Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = <span class=\"keyword\">object</span> : Iterator&lt;T&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">val</span> iterator = sequence.iterator() <span class=\"comment\">//上一个 Sequence 的 iterator</span></span><br><span class=\"line\">        <span class=\"keyword\">var</span> nextState: <span class=\"built_in\">Int</span> = -<span class=\"number\">1</span> </span><br><span class=\"line\">        <span class=\"keyword\">var</span> nextItem: T? = <span class=\"literal\">null</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">private</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">calcNext</span><span class=\"params\">()</span></span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> (iterator.hasNext()) &#123;<span class=\"comment\">//上一个 iterator 是否有数据</span></span><br><span class=\"line\">                <span class=\"keyword\">val</span> item = iterator.next()</span><br><span class=\"line\">                <span class=\"keyword\">if</span> (predicate(item) == sendWhen) &#123;<span class=\"comment\">//这里调用了我们的过滤逻辑</span></span><br><span class=\"line\">                    nextItem = item</span><br><span class=\"line\">                    nextState = <span class=\"number\">1</span></span><br><span class=\"line\">                    <span class=\"keyword\">return</span></span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            nextState = <span class=\"number\">0</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">next</span><span class=\"params\">()</span></span>: T &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == -<span class=\"number\">1</span>)</span><br><span class=\"line\">                calcNext()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == <span class=\"number\">0</span>)</span><br><span class=\"line\">                <span class=\"keyword\">throw</span> NoSuchElementException()</span><br><span class=\"line\">            <span class=\"keyword\">val</span> result = nextItem</span><br><span class=\"line\">            nextItem = <span class=\"literal\">null</span></span><br><span class=\"line\">            nextState = -<span class=\"number\">1</span></span><br><span class=\"line\">            <span class=\"meta\">@Suppress(<span class=\"meta-string\">&quot;UNCHECKED_CAST&quot;</span>)</span></span><br><span class=\"line\">            <span class=\"keyword\">return</span> result <span class=\"keyword\">as</span> T</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">hasNext</span><span class=\"params\">()</span></span>: <span class=\"built_in\">Boolean</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (nextState == -<span class=\"number\">1</span>)</span><br><span class=\"line\">                calcNext()</span><br><span class=\"line\">            <span class=\"keyword\">return</span> nextState == <span class=\"number\">1</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>除了过滤逻辑和 map 不一致，其他是一样的。</p>\n<h3 id=\"asSequence\"><a href=\"#asSequence\" class=\"headerlink\" title=\"asSequence\"></a>asSequence</h3><figure class=\"highlight kotlin\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> Iterable<span class=\"type\">&lt;T&gt;</span>.<span class=\"title\">asSequence</span><span class=\"params\">()</span></span>: Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> Sequence &#123; <span class=\"keyword\">this</span>.iterator() &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@kotlin</span>.<span class=\"keyword\">internal</span>.InlineOnly</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">inline</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"type\">&lt;T&gt;</span> <span class=\"title\">Sequence</span><span class=\"params\">(<span class=\"keyword\">crossinline</span> iterator: () -&gt; <span class=\"type\">Iterator</span>&lt;<span class=\"type\">T</span>&gt;)</span></span>: Sequence&lt;T&gt; = <span class=\"keyword\">object</span> : Sequence&lt;T&gt; &#123;</span><br><span class=\"line\">    <span class=\"keyword\">override</span> <span class=\"function\"><span class=\"keyword\">fun</span> <span class=\"title\">iterator</span><span class=\"params\">()</span></span>: Iterator&lt;T&gt; = iterator()</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>源码比较简单，就是 new 了一个 Sequence 的匿名对象，并且将 list 的 iterator 作为参数传了进去。<br>所以，流水线最后调用的是 list 的 iterator。</p>\n<h2 id=\"三、总结\"><a href=\"#三、总结\" class=\"headerlink\" title=\"三、总结\"></a>三、总结</h2><img src=\"/2022/01/22/kt-sequence/sequence.png\" class=\"\">\n<p>再看开始的流程图，回答提出的两个问题</p>\n<h3 id=\"1-为什么-sequence-能做到先声明，后触发\"><a href=\"#1-为什么-sequence-能做到先声明，后触发\" class=\"headerlink\" title=\"1.为什么 sequence 能做到先声明，后触发\"></a>1.为什么 sequence 能做到先声明，后触发</h3><p>因为操作符并不会触发迭代逻辑，只有最后的 toList 才会真正触发</p>\n<h3 id=\"2-为什么-sequence-能实现流水线的效果，避免操作浪费\"><a href=\"#2-为什么-sequence-能实现流水线的效果，避免操作浪费\" class=\"headerlink\" title=\"2.为什么 sequence 能实现流水线的效果，避免操作浪费\"></a>2.为什么 sequence 能实现流水线的效果，避免操作浪费</h3><p>因为我们在声明操作符的时候，将 Sequence 对象组装了成了一个链，迭代的时候会从最后一个声明的 iterator 递归地调到第一个声明的 iterator，保证执行顺序是我们声明的顺序。<br>并且，如果迭代的某一环不满足条件，就不会继续走到下一个迭代里，也就避免了操作的浪费。</p>\n<hr>\n<p><strong>如需转载，请注明原文出处，谢谢！</strong></p>\n"},{"title":"线性表","date":"2022-01-26T14:35:02.000Z","_content":"\n![](./linear_list_def.png)\n\n#### 线性表的定义\n\n线性表是具有**相同数据类型**的 n (n>=0) 个**数据元素**的**有限**序列。若用 L 命名线性表，则其一般表示为\n\n$L=(a_1, a_2, ... ,a_i ,a_{i+1}, ..., a_n)$\n\n\n#### 线性表的基本操作\n\n- InitList(&n); 初始化表，构造一个空的线性表\n- Length(L); 获得线性表 L 的长度\n- LocateElem(L, e); 按值查找，在表 L 中找到数据元素 e\n- GetElem(L, i); 按位查找，获取表 L 的第 i 个数据元素\n- ListInsert(&L, i, e); 插入，向表 L 的 i 位置插入数据元素 e\n- ListDelete(&L, i, &e); 删除，删除表 L 中 i 位置的元素，并将删除的值保存在 e 中\n- PrintList(L); 输出，按前后顺序输出表 L 中的数据元素\n- DestroyList(&L); 销毁，销毁线性表 L，并释放 L 所占用的内存空间\n\n\n#### 顺序表的定义\n\n线性表的**顺序存储**称为**顺序表**。\n\n\n#### 重点\n\n- 线性表中元素的序位是从 1 开始的，数组元素的下标是从 0 开始的\n- 顺序表需要分配连续的内存空间，动态分配时，一旦空间沾满，就另外开辟一块更大的连续空间，用来替换原来的存储空间。比如，原表长 n，现已经存满，需要再扩充 m 个单位，则需要开辟连续的 m + n 空间，然后将原来的 n 个元素复制到新申请的空间中\n\n\n#### 综合题\n\n1. 从顺序表中删除具有最小值的元素（假设唯一）并由函数返回被删元素的值。空出的位置由最后一个元素填补，若顺序表为空则显示出错信息并退出运行。\n\n```C\nbool Del_Min(sqList &L, ElementType &e) {\n    if (L.length == 0) {\n        return false;\n    }\n\n    int index = 0;\n    int min = L.data[0];\n    for(int i = 1; i < L.length; i++) {\n        if (L.data[i] < min) {\n            index = i;\n            e = min;\n        }\n    }\n    L.data[index] = L.data[L.length - 1];\n    L.length --;\n}\n```\n\n2. 设计一个高效算法，将顺序表 L 的所有元素逆置，要求空间复杂度为 O(1)\n\n```C\nvoid Reverse(sqList &L) {\n    int head = 0;\n    int tail = L.length - 1;\n    while (head < tail) {\n        int temp = L.data[head];\n        L.data[head] = L.data[tail];\n        L.data[tail] = temp;\n        head ++;\n        tail --;\n    }\n}\n```","source":"_posts/linear-list.md","raw":"---\ntitle: 线性表\ndate: 2022-01-26 22:35:02\ntags: 数据结构\ncategories: 考研\n---\n\n![](./linear_list_def.png)\n\n#### 线性表的定义\n\n线性表是具有**相同数据类型**的 n (n>=0) 个**数据元素**的**有限**序列。若用 L 命名线性表，则其一般表示为\n\n$L=(a_1, a_2, ... ,a_i ,a_{i+1}, ..., a_n)$\n\n\n#### 线性表的基本操作\n\n- InitList(&n); 初始化表，构造一个空的线性表\n- Length(L); 获得线性表 L 的长度\n- LocateElem(L, e); 按值查找，在表 L 中找到数据元素 e\n- GetElem(L, i); 按位查找，获取表 L 的第 i 个数据元素\n- ListInsert(&L, i, e); 插入，向表 L 的 i 位置插入数据元素 e\n- ListDelete(&L, i, &e); 删除，删除表 L 中 i 位置的元素，并将删除的值保存在 e 中\n- PrintList(L); 输出，按前后顺序输出表 L 中的数据元素\n- DestroyList(&L); 销毁，销毁线性表 L，并释放 L 所占用的内存空间\n\n\n#### 顺序表的定义\n\n线性表的**顺序存储**称为**顺序表**。\n\n\n#### 重点\n\n- 线性表中元素的序位是从 1 开始的，数组元素的下标是从 0 开始的\n- 顺序表需要分配连续的内存空间，动态分配时，一旦空间沾满，就另外开辟一块更大的连续空间，用来替换原来的存储空间。比如，原表长 n，现已经存满，需要再扩充 m 个单位，则需要开辟连续的 m + n 空间，然后将原来的 n 个元素复制到新申请的空间中\n\n\n#### 综合题\n\n1. 从顺序表中删除具有最小值的元素（假设唯一）并由函数返回被删元素的值。空出的位置由最后一个元素填补，若顺序表为空则显示出错信息并退出运行。\n\n```C\nbool Del_Min(sqList &L, ElementType &e) {\n    if (L.length == 0) {\n        return false;\n    }\n\n    int index = 0;\n    int min = L.data[0];\n    for(int i = 1; i < L.length; i++) {\n        if (L.data[i] < min) {\n            index = i;\n            e = min;\n        }\n    }\n    L.data[index] = L.data[L.length - 1];\n    L.length --;\n}\n```\n\n2. 设计一个高效算法，将顺序表 L 的所有元素逆置，要求空间复杂度为 O(1)\n\n```C\nvoid Reverse(sqList &L) {\n    int head = 0;\n    int tail = L.length - 1;\n    while (head < tail) {\n        int temp = L.data[head];\n        L.data[head] = L.data[tail];\n        L.data[tail] = temp;\n        head ++;\n        tail --;\n    }\n}\n```","slug":"linear-list","published":1,"updated":"2022-05-03T07:58:04.867Z","_id":"cl2pueu46000ej6s6alpx8efd","comments":1,"layout":"post","photos":[],"link":"","content":"\n<h4 id=\"线性表的定义\"><a href=\"#线性表的定义\" class=\"headerlink\" title=\"线性表的定义\"></a>线性表的定义</h4><p>线性表是具有<strong>相同数据类型</strong>的 n (n&gt;=0) 个<strong>数据元素</strong>的<strong>有限</strong>序列。若用 L 命名线性表，则其一般表示为</p>\n<p>$L=(a_1, a_2, … ,a_i ,a_{i+1}, …, a_n)$</p>\n<h4 id=\"线性表的基本操作\"><a href=\"#线性表的基本操作\" class=\"headerlink\" title=\"线性表的基本操作\"></a>线性表的基本操作</h4><ul>\n<li>InitList(&amp;n); 初始化表，构造一个空的线性表</li>\n<li>Length(L); 获得线性表 L 的长度</li>\n<li>LocateElem(L, e); 按值查找，在表 L 中找到数据元素 e</li>\n<li>GetElem(L, i); 按位查找，获取表 L 的第 i 个数据元素</li>\n<li>ListInsert(&amp;L, i, e); 插入，向表 L 的 i 位置插入数据元素 e</li>\n<li>ListDelete(&amp;L, i, &amp;e); 删除，删除表 L 中 i 位置的元素，并将删除的值保存在 e 中</li>\n<li>PrintList(L); 输出，按前后顺序输出表 L 中的数据元素</li>\n<li>DestroyList(&amp;L); 销毁，销毁线性表 L，并释放 L 所占用的内存空间</li>\n</ul>\n<h4 id=\"顺序表的定义\"><a href=\"#顺序表的定义\" class=\"headerlink\" title=\"顺序表的定义\"></a>顺序表的定义</h4><p>线性表的<strong>顺序存储</strong>称为<strong>顺序表</strong>。</p>\n<h4 id=\"重点\"><a href=\"#重点\" class=\"headerlink\" title=\"重点\"></a>重点</h4><ul>\n<li>线性表中元素的序位是从 1 开始的，数组元素的下标是从 0 开始的</li>\n<li>顺序表需要分配连续的内存空间，动态分配时，一旦空间沾满，就另外开辟一块更大的连续空间，用来替换原来的存储空间。比如，原表长 n，现已经存满，需要再扩充 m 个单位，则需要开辟连续的 m + n 空间，然后将原来的 n 个元素复制到新申请的空间中</li>\n</ul>\n<h4 id=\"综合题\"><a href=\"#综合题\" class=\"headerlink\" title=\"综合题\"></a>综合题</h4><ol>\n<li>从顺序表中删除具有最小值的元素（假设唯一）并由函数返回被删元素的值。空出的位置由最后一个元素填补，若顺序表为空则显示出错信息并退出运行。</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Del_Min</span><span class=\"params\">(sqList &amp;L, ElementType &amp;e)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> min = L.data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; L.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (L.data[i] &lt; min) &#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            e = min;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.data[index] = L.data[L.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">    L.length --;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>设计一个高效算法，将顺序表 L 的所有元素逆置，要求空间复杂度为 O(1)</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reverse</span><span class=\"params\">(sqList &amp;L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> head = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tail = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (head &lt; tail) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = L.data[head];</span><br><span class=\"line\">        L.data[head] = L.data[tail];</span><br><span class=\"line\">        L.data[tail] = temp;</span><br><span class=\"line\">        head ++;</span><br><span class=\"line\">        tail --;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>","site":{"data":{}},"excerpt":"","more":"\n<h4 id=\"线性表的定义\"><a href=\"#线性表的定义\" class=\"headerlink\" title=\"线性表的定义\"></a>线性表的定义</h4><p>线性表是具有<strong>相同数据类型</strong>的 n (n&gt;=0) 个<strong>数据元素</strong>的<strong>有限</strong>序列。若用 L 命名线性表，则其一般表示为</p>\n<p>$L=(a_1, a_2, … ,a_i ,a_{i+1}, …, a_n)$</p>\n<h4 id=\"线性表的基本操作\"><a href=\"#线性表的基本操作\" class=\"headerlink\" title=\"线性表的基本操作\"></a>线性表的基本操作</h4><ul>\n<li>InitList(&amp;n); 初始化表，构造一个空的线性表</li>\n<li>Length(L); 获得线性表 L 的长度</li>\n<li>LocateElem(L, e); 按值查找，在表 L 中找到数据元素 e</li>\n<li>GetElem(L, i); 按位查找，获取表 L 的第 i 个数据元素</li>\n<li>ListInsert(&amp;L, i, e); 插入，向表 L 的 i 位置插入数据元素 e</li>\n<li>ListDelete(&amp;L, i, &amp;e); 删除，删除表 L 中 i 位置的元素，并将删除的值保存在 e 中</li>\n<li>PrintList(L); 输出，按前后顺序输出表 L 中的数据元素</li>\n<li>DestroyList(&amp;L); 销毁，销毁线性表 L，并释放 L 所占用的内存空间</li>\n</ul>\n<h4 id=\"顺序表的定义\"><a href=\"#顺序表的定义\" class=\"headerlink\" title=\"顺序表的定义\"></a>顺序表的定义</h4><p>线性表的<strong>顺序存储</strong>称为<strong>顺序表</strong>。</p>\n<h4 id=\"重点\"><a href=\"#重点\" class=\"headerlink\" title=\"重点\"></a>重点</h4><ul>\n<li>线性表中元素的序位是从 1 开始的，数组元素的下标是从 0 开始的</li>\n<li>顺序表需要分配连续的内存空间，动态分配时，一旦空间沾满，就另外开辟一块更大的连续空间，用来替换原来的存储空间。比如，原表长 n，现已经存满，需要再扩充 m 个单位，则需要开辟连续的 m + n 空间，然后将原来的 n 个元素复制到新申请的空间中</li>\n</ul>\n<h4 id=\"综合题\"><a href=\"#综合题\" class=\"headerlink\" title=\"综合题\"></a>综合题</h4><ol>\n<li>从顺序表中删除具有最小值的元素（假设唯一）并由函数返回被删元素的值。空出的位置由最后一个元素填补，若顺序表为空则显示出错信息并退出运行。</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">bool</span> <span class=\"title\">Del_Min</span><span class=\"params\">(sqList &amp;L, ElementType &amp;e)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (L.length == <span class=\"number\">0</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">false</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">int</span> index = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> min = L.data[<span class=\"number\">0</span>];</span><br><span class=\"line\">    <span class=\"keyword\">for</span>(<span class=\"keyword\">int</span> i = <span class=\"number\">1</span>; i &lt; L.length; i++) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (L.data[i] &lt; min) &#123;</span><br><span class=\"line\">            index = i;</span><br><span class=\"line\">            e = min;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    L.data[index] = L.data[L.length - <span class=\"number\">1</span>];</span><br><span class=\"line\">    L.length --;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ol>\n<li>设计一个高效算法，将顺序表 L 的所有元素逆置，要求空间复杂度为 O(1)</li>\n</ol>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">Reverse</span><span class=\"params\">(sqList &amp;L)</span> </span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> head = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> tail = L.length - <span class=\"number\">1</span>;</span><br><span class=\"line\">    <span class=\"keyword\">while</span> (head &lt; tail) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">int</span> temp = L.data[head];</span><br><span class=\"line\">        L.data[head] = L.data[tail];</span><br><span class=\"line\">        L.data[tail] = temp;</span><br><span class=\"line\">        head ++;</span><br><span class=\"line\">        tail --;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>"}],"PostAsset":[{"_id":"source/_posts/kt-coroutine-create/break_point.png","slug":"break_point.png","post":"cl2pueu430005j6s6hdk46vwl","modified":0,"renderable":0},{"_id":"source/_posts/kt-coroutine-create/call_process.png","slug":"call_process.png","post":"cl2pueu430005j6s6hdk46vwl","modified":0,"renderable":0},{"_id":"source/_posts/kt-coroutine-create/call_stack.png","slug":"call_stack.png","post":"cl2pueu430005j6s6hdk46vwl","modified":0,"renderable":0},{"_id":"source/_posts/kt-coroutine-create/uml.png","slug":"uml.png","post":"cl2pueu430005j6s6hdk46vwl","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/call_receiver.png","slug":"call_receiver.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/define_receiver.png","slug":"define_receiver.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/jadx_1.png","slug":"jadx_1.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/jadx_2.png","slug":"jadx_2.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/jadx_3.png","slug":"jadx_3.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/jadx_4.png","slug":"jadx_4.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/kt-receiver/jadx_5.png","slug":"jadx_5.png","post":"cl2pueu430006j6s65in9fbc9","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/51%_attack.png","slug":"51%_attack.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/6_confirms.png","slug":"6_confirms.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/anti_double_spending_in_centralize.png","slug":"anti_double_spending_in_centralize.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/anti_tamper.png","slug":"anti_tamper.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/asymmetric_encryption.png","slug":"asymmetric_encryption.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/btc_cover.png","slug":"btc_cover.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/btc_structure.drawio","slug":"btc_structure.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/btc_transaction.png","slug":"btc_transaction.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/decentralized.png","slug":"decentralized.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/digital_signature.drawio","slug":"digital_signature.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/digital_signature.png","slug":"digital_signature.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/double_spending.drawio","slug":"double_spending.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/double_spending.png","slug":"double_spending.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/hash.drawio","slug":"hash.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/hash_collision.drawio","slug":"hash_collision.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/hash_collision.png","slug":"hash_collision.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/hash_pointer_block.png","slug":"hash_pointer_block.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/merkle_proof.png","slug":"merkle_proof.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/merkle_tree.png","slug":"merkle_tree.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/mining.drawio","slug":"mining.drawio","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/mining.png","slug":"mining.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/mining_healthy.png","slug":"mining_healthy.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/mining_verify.png","slug":"mining_verify.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/predict.png","slug":"predict.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/tamper.png","slug":"tamper.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/bc-bitcoin-concept/what_is_block_chain.png","slug":"what_is_block_chain.png","post":"cl2pueu410003j6s66ifl793m","modified":0,"renderable":0},{"_id":"source/_posts/kt-sequence/list_words.png","slug":"list_words.png","post":"cl2pueu440008j6s6f9sj5k2u","modified":0,"renderable":0},{"_id":"source/_posts/kt-sequence/sequence.png","slug":"sequence.png","post":"cl2pueu440008j6s6f9sj5k2u","modified":0,"renderable":0},{"_id":"source/_posts/kt-sequence/sequence_words.png","slug":"sequence_words.png","post":"cl2pueu440008j6s6f9sj5k2u","modified":0,"renderable":0},{"_id":"source/_posts/linear-list/linear-list.drawio","slug":"linear-list.drawio","post":"cl2pueu46000ej6s6alpx8efd","modified":0,"renderable":0},{"_id":"source/_posts/linear-list/linear-list_def.png","slug":"linear-list_def.png","post":"cl2pueu46000ej6s6alpx8efd","modified":0,"renderable":0}],"PostCategory":[{"post_id":"cl2pueu3v0000j6s6fk345k7l","category_id":"cl2pueu400002j6s6bhp10bkm","_id":"cl2pueu45000cj6s6bnokcl6h"},{"post_id":"cl2pueu3z0001j6s617z773ox","category_id":"cl2pueu440007j6s69apg5xj0","_id":"cl2pueu46000hj6s62x6ybd2m"},{"post_id":"cl2pueu46000ej6s6alpx8efd","category_id":"cl2pueu440007j6s69apg5xj0","_id":"cl2pueu48000mj6s677xz11er"},{"post_id":"cl2pueu410003j6s66ifl793m","category_id":"cl2pueu45000dj6s6cds9hz5f","_id":"cl2pueu48000oj6s68nq0colw"},{"post_id":"cl2pueu430005j6s6hdk46vwl","category_id":"cl2pueu46000ij6s657opggcr","_id":"cl2pueu48000sj6s6b2txafuf"},{"post_id":"cl2pueu430006j6s65in9fbc9","category_id":"cl2pueu46000ij6s657opggcr","_id":"cl2pueu49000vj6s69cjt7o6j"},{"post_id":"cl2pueu440008j6s6f9sj5k2u","category_id":"cl2pueu46000ij6s657opggcr","_id":"cl2pueu49000xj6s69uu47fl1"}],"PostTag":[{"post_id":"cl2pueu3z0001j6s617z773ox","tag_id":"cl2pueu420004j6s61tf8f7qr","_id":"cl2pueu45000aj6s6dciea8gi"},{"post_id":"cl2pueu430005j6s6hdk46vwl","tag_id":"cl2pueu440009j6s6frprajup","_id":"cl2pueu46000gj6s673dn6blg"},{"post_id":"cl2pueu430006j6s65in9fbc9","tag_id":"cl2pueu46000fj6s64n8hadvk","_id":"cl2pueu48000lj6s676ze96wa"},{"post_id":"cl2pueu440008j6s6f9sj5k2u","tag_id":"cl2pueu46000fj6s64n8hadvk","_id":"cl2pueu48000qj6s65tdhghdj"},{"post_id":"cl2pueu46000ej6s6alpx8efd","tag_id":"cl2pueu48000pj6s6bvwra3zu","_id":"cl2pueu49000wj6s6bzzzfdx9"}],"Tag":[{"name":"高数","_id":"cl2pueu420004j6s61tf8f7qr"},{"name":"Kotlin协程","_id":"cl2pueu440009j6s6frprajup"},{"name":"Kotlin基础","_id":"cl2pueu46000fj6s64n8hadvk"},{"name":"数据结构","_id":"cl2pueu48000pj6s6bvwra3zu"}]}}